{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/soldDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/soldDetail.vue","mtime":1568630157000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport httpclient from '@/utils/httpclient';\nimport {getDateString, getDaysBetweenDate} from \"@/utils/date\";\nimport myMap from '@/components/map';\n\nexport default {\n    name: \"vehicleDetail\",\n    components: {\n        myMap\n    },\n    data() {\n        return {\n            data: {},\n            showMap: false,\n            showSoldVehicle:false,\n            map: null,\n            searchGoogleMap: {},\n            mapPopup: null,\n            tipTitle: '',\n            fields: {\n                operation: {\n                    key: 'operationType',\n                    label: this.$t('m.vehicle_detail.operation')\n                },\n                vehicle: {\n                    key: 'vehicle',\n                    label: this.$t('m.vehicle_detail.operator')\n                },\n                time: {\n                    key: 'time',\n                    label: this.$t('m.common.time')\n                },\n            },\n            items: [],\n            totalPages: 1,\n            currentPage: 1,\n            perPage: 10,\n            rows: 1,\n            myCurrentMileage: null\n        }\n    },\n    mounted() {\n        if (this.$i18n.locale === 'en-US') {\n            this.changedLanguage = \"English\";\n        } else {\n            this.changedLanguage = 'Chinese';\n        }\n        let self = this;\n        httpclient.get(\"/api/v1/saledvehicle/detail?id=\" + this.$route.params.id, {}).then((response) => {\n            self.data = response.data.data;\n            let saleStatus;\n            if(self.data.saleStatus === 1){\n                saleStatus = this.$t('m.sold_vehicle.sale')\n            }else if(self.data.saleStatus === 2){\n                saleStatus = this.$t('m.sold_vehicle.sold')\n            }else if(self.data.saleStatus === 3){\n                saleStatus = 'N/A'\n            }else{\n                saleStatus = 'N/A'\n            }\n            self.data.saleStatus = saleStatus;\n\n            let year = self.data.year ? self.data.year : 'N/A';\n            let make = self.data.make ? self.data.make : 'N/A';\n            let model = self.data.model ? self.data.model : 'N/A';\n            let info = (year == 'N/A' && make == 'N/A' && model == 'N/A') ? 'N/A' : year + ' ' + make + ' ' + model;\n            self.tipTitle = info;\n            self.map = {\n                lat: self.data.lastLocationLat ? self.data.lastLocationLat : 0,\n                lng: self.data.lastLocationLng ? self.data.lastLocationLng : 0,\n                area: self.data.areaCoordinates ? self.data.areaCoordinates : [],\n                vehicleInfo: info\n            };\n\n            self.mapPopup = {\n                lat: self.data.lastLocationLat ? self.data.lastLocationLat : 0,\n                lng: self.data.lastLocationLng ? self.data.lastLocationLng : 0,\n                area: self.data.areaCoordinates ? self.data.areaCoordinates : [],\n                vehicleInfo: info\n            };\n\n            let _mileage = null;\n            if (response.data.data.currentMileage) {\n                if (self.changedLanguage === 'English') {\n                    _mileage = ((response.data.data.currentMileage * 0.0006214).toFixed(0))\n                } else {\n                    _mileage = ((response.data.data.currentMileage / 1000).toFixed(0))\n                }\n            } else {\n                _mileage = 'N/A'\n            }\n            self.myCurrentMileage = _mileage\n\n        }).catch((err) => {\n            console.log(err);\n        });\n\n        this.getVehicleOperatorList(1)\n\n    },\n    methods: {\n        getDateString(data) {\n            return getDateString(data)\n        },\n        getDaysBetweenDate(data, time) {\n            return getDaysBetweenDate(data, time)\n        },\n        getVehicleOperatorList(page) {\n            let myVehicleId = this.$route.params.id;\n            let myLink = '/api/v1/operationlog/listbyvehicleid?pageNo=' + page + '&vehicleId=' + myVehicleId;\n            httpclient.get(myLink).then((res) => {\n                let myData = res.data.data.datas;\n                this.items = myData;\n                this.searchGoogleMap = myData;\n                // this.currentPage = res.data.data.pageNo;\n                this.perPage = res.data.data.pageSize;\n                this.totalPages = res.data.data.totalPages;\n                this.rows = res.data.data.rowCount;\n                let myArr = [];\n                myData.map((item) => {\n                    myArr.push({\n                        operationType: item.operationType,\n                        operator: item.userName,\n                        time: this.getDateString(item.createTime),\n                        userId: item.userId\n                    });\n                });\n                this.items = myArr;\n            })\n        },\n        turnToPage(p) {\n            this.getVehicleOperatorList(p ? p : 1);\n        },\n        showMapTip() {\n            this.showMap = true;\n        },\n    }\n}\n",null]}