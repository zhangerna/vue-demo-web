{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/lots.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/lots.vue","mtime":1561030096000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport httpClient from \"@/utils/httpclient\";\nimport googleMap from '@/components/googleMap';\nimport model from \"@/components/model\";\nexport default {\n    name: 'lots',\n    inject: ['reload'],\n    components: {\n        googleMap,\n        model,\n    },\n    data() {\n        return {\n            currentPage: 1,\n            pageSize: 10,\n            table: null,\n            curDel: null,\n            show: false,\n            btnGroup: {\n                btnFirst:'Cancel',\n                btnSecond: 'OK'\n            },\n            tableFields: {\n                name: {\n                    label: \"Lot Name\",\n                    class: \"text-center\"\n                },\n                address: {\n                    label: \"Lot Address\",\n                    class: \"text-center\"\n                },\n                dealership: {\n                    label: \"Dealership\",\n                    class: \"text-center\"\n                },\n                vehicles: {\n                    label: \"All Vehicles\",\n                    class: \"text-center\"\n                },\n                battery: {\n                    label: \"Low Battery\",\n                    class: \"text-center\"\n                },\n                offline: {\n                    label: \"Offline\",\n                    class: \"text-center\"\n                },\n                actions: {\n                    label: \"Actions\",\n                    class: \"text-center\"\n                }\n            },\n            total: 0,\n            totalPages:0,\n            tipTitle: '',\n            showMap: false,\n            map: {}\n\n        }\n    },\n    mounted() {\n        this.initData(this.currentPage);\n    },\n    methods: {\n        initData(page) {\n            httpClient.get(`/api/v1/lot/page?pageNo=${page}`).then(response => {\n                this.currentPage = response.data.data.pageNo;\n                this.total = response.data.data.rowCount;\n                this.filterData(response.data.data);\n                this.totalPages = response.data.data.totalPages\n            })\n        },\n        filterData(data){\n            this.table = data.datas.map(item => {\n                return {\n                    name: item.parkingName,\n                    address: item.address,\n                    dealership: item.storeName,\n                    vehicles: item.vehicleFilter.num,\n                    battery: item.lowBatteryFilter.num,\n                    offline: item.offLineFilter.num,\n                    id: item.id,\n                }\n            });\n        },\n        delId(id) {\n            this.curDel = id;\n            this.show = true;\n        },\n        hideTip(type) {\n            if (type) {\n                httpClient.post('/api/v1/lot/delete', {\n                    id: this.curDel\n                }).then(response => {\n                    this.reload();\n                })\n            }\n            this.show = false;\n        },\n        linkVehicles(id) {\n            let filter = `[{\"key\":\"parking\",\"value\":[\"${id}\"]}]`;\n            this.$router.push({name: 'vehicle', query: {filters: filter}});\n        },\n        linkBattery(id) {\n            this.$router.push({name: 'vehicle', query: {\n                filters: `[{\"key\":\"parking\",\"value\":[\"${id}\"]},{\"key\":\"battery\",\"value\":[\"1\"]}]`\n            }});\n        },\n        linkSecondary(id) {\n            this.$router.push({name: 'vehicle', query: {\n                filters: `[{\"key\":\"parking\",\"value\":[\"${id}\"]},{\"key\":\"online\",\"value\":[\"2\"]}]`\n            }});\n        },\n        prevPage(){\n            this.initData(this.currentPage > 1  ? this.currentPage - 1 : 1)\n        },\n        nextPage(){\n            this.initData(this.currentPage >= this.pageCount  ? this.currentPage : this.currentPage + 1)\n        },\n        changePage(page) {\n            this.initData(page);\n        },\n        getVehicleList(id, area, centerCoor, packingName) {\n            httpClient.get('/api/v1/inlotvehiclelist', {\n                params: {\n                    parkingId: id\n                }\n            }).then(response => {\n                let latlng = centerCoor.split(\" \");\n                this.map = {\n                    lat: Number(latlng[1]),\n                    lng: Number(latlng[0]),\n                    area: area,\n                    vehicleInfo: response.data.data,\n                    showMult: true\n                };\n                this.tipTitle = packingName;\n                this.showMap = true;\n            })\n        },\n        mapInfo(id) {\n            httpClient.get(\"/api/v1/lot/detail\", {\n                params: {\n                    id: id\n                }\n            }).then(response => {\n                let data = response.data.data;\n                this.getVehicleList(id, data.areaCoordinate, data.centerCoordinate, data.parkingName);\n            })\n        }\n    }\n}\n",null]}