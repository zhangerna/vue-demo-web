{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/amap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/amap.vue","mtime":1577101399000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { wgs84ToGcjo2 } from \"@/utils/coordtransform\";\nimport AMap from \"AMap\";\nexport default {\n    name: \"amap\",\n    props: [\"map\", \"elId\", \"type\"],\n    data() {\n        return {\n            mapInfo: null,\n            mapObj: null,\n            marker: null,\n            polygon: null,\n            markers: [],\n            lat: \"\",\n            lng: \"\",\n            infoWindow: null,\n            roadLayer: null,\n            safeLayer: null\n        };\n    },\n    watch: {\n        map: function(newVal) {\n            this.mapInfo = newVal;\n            this.initMap();\n            console.log(2333)\n        }\n    },\n    methods: {\n        addMarker(position, title, contentString) {\n            let marker = new AMap.Marker({\n                position: position,\n                map: this.mapObj,\n                icon: new AMap.Icon({\n                    image: \"https://cdn2.shopify.com/s/files/1/0703/1149/files/Location_03580bd1-f466-4803-a69e-720a098b08a5.svg?828688\",\n                    size: new AMap.Size(60, 60),\n                    imageSize: new AMap.Size(20, 30)\n                })\n            });\n            if (contentString) {\n                let infoWindow = new AMap.InfoWindow({\n                    isCustom: true,\n                    content: contentString,\n                    offset: new AMap.Pixel(16, -45)\n                });\n                marker.on(\"click\", function(e) {\n                    infoWindow.open(window.mapObj, e.target.getPosition());\n                });\n            }\n        },\n        initMap() {\n            let lnglat = wgs84ToGcjo2(this.mapInfo.lng, this.mapInfo.lat);\n            this.mapObj = new AMap.Map(this.elId ? this.elId : \"map\", {\n                center: lnglat,\n                zoom: 17\n            });\n            this.roadLayer = new AMap.TileLayer.RoadNet({});\n            this.safeLayer = new AMap.TileLayer.Satellite({});\n            this.mapObj.add(this.roadLayer);\n            this.mapObj.add(this.safeLayer);\n            this.safeLayer.hide();\n            this.roadLayer.hide();\n\n            window.mapObj = this.mapObj;\n            let area2 = [];\n            this.mapInfo[\"area\"]\n                ? this.mapInfo[\"area\"].map(function(item) {\n                      let temp = item.split(\",\");\n                      area2.push(wgs84ToGcjo2(Number(temp[0]), Number(temp[1])));\n                  })\n                : \"\";\n            let polygon = new AMap.Polygon({\n                path: area2,\n                strokeColor: \"#FF0000\",\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: \"#FF0000\",\n                fillOpacity: 0.35\n            });\n            this.mapObj.add(polygon);\n            if (this.mapInfo.showMult) {\n                this.mapInfo.vehicleInfo.map(item => {\n                    let temp = wgs84ToGcjo2(item.lastLocationLng, item.lastLocationLat);\n                    let title = `${item.year ? item.year : \"N/A\"} ${item.make ? item.make : \"N/A\"} ${item.model ? item.model : \"N/A\"}`;\n                    let contentString = `<a href='/inventory/vehicle/detail/${item.vehicleId}'>\n                            <img style=\"background: #3a4149\" src=\"${item.photoPath ? item.photoPath : \"/img/placeholder.5367544d.svg\"}\" width=\"100%\">\n                            <h5 id=\"firstHeading\" class=\"firstHeading\">${item.year ? item.year : \"N/A\"} ${item.make ? item.make : \"N/A\"} ${item.model ? item.model : \"N/A\"}</h5>\n                            </a>`;\n                    this.addMarker(temp, title, contentString);\n                });\n            } else {\n                this.addMarker(lnglat, this.mapInfo.vehicleInfo, null);\n            }\n            this.mapObj.setFitView();\n        },\n        changeMapType(type) {\n            if (type == \"default\") {\n                this.roadLayer.hide();\n                this.safeLayer.hide();\n            } else {\n                this.roadLayer.show();\n                this.safeLayer.show();\n            }\n        }\n    }\n};\n",{"version":3,"sources":["amap.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"amap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"maps\">\n        <div class=\"map-btn-group\">\n            <ul>\n                <li @click=\"changeMapType('default')\">地图 |</li>\n                <li @click=\"changeMapType('sate')\">&nbsp;卫星图像</li>\n            </ul>\n        </div>\n        <div class=\"amap my-map\" :id=\"elId ? elId : 'map'\" ></div>\n    </div>\n</template>\n\n<script>\nimport { wgs84ToGcjo2 } from \"@/utils/coordtransform\";\nimport AMap from \"AMap\";\nexport default {\n    name: \"amap\",\n    props: [\"map\", \"elId\", \"type\"],\n    data() {\n        return {\n            mapInfo: null,\n            mapObj: null,\n            marker: null,\n            polygon: null,\n            markers: [],\n            lat: \"\",\n            lng: \"\",\n            infoWindow: null,\n            roadLayer: null,\n            safeLayer: null\n        };\n    },\n    watch: {\n        map: function(newVal) {\n            this.mapInfo = newVal;\n            this.initMap();\n            console.log(2333)\n        }\n    },\n    methods: {\n        addMarker(position, title, contentString) {\n            let marker = new AMap.Marker({\n                position: position,\n                map: this.mapObj,\n                icon: new AMap.Icon({\n                    image: \"https://cdn2.shopify.com/s/files/1/0703/1149/files/Location_03580bd1-f466-4803-a69e-720a098b08a5.svg?828688\",\n                    size: new AMap.Size(60, 60),\n                    imageSize: new AMap.Size(20, 30)\n                })\n            });\n            if (contentString) {\n                let infoWindow = new AMap.InfoWindow({\n                    isCustom: true,\n                    content: contentString,\n                    offset: new AMap.Pixel(16, -45)\n                });\n                marker.on(\"click\", function(e) {\n                    infoWindow.open(window.mapObj, e.target.getPosition());\n                });\n            }\n        },\n        initMap() {\n            let lnglat = wgs84ToGcjo2(this.mapInfo.lng, this.mapInfo.lat);\n            this.mapObj = new AMap.Map(this.elId ? this.elId : \"map\", {\n                center: lnglat,\n                zoom: 17\n            });\n            this.roadLayer = new AMap.TileLayer.RoadNet({});\n            this.safeLayer = new AMap.TileLayer.Satellite({});\n            this.mapObj.add(this.roadLayer);\n            this.mapObj.add(this.safeLayer);\n            this.safeLayer.hide();\n            this.roadLayer.hide();\n\n            window.mapObj = this.mapObj;\n            let area2 = [];\n            this.mapInfo[\"area\"]\n                ? this.mapInfo[\"area\"].map(function(item) {\n                      let temp = item.split(\",\");\n                      area2.push(wgs84ToGcjo2(Number(temp[0]), Number(temp[1])));\n                  })\n                : \"\";\n            let polygon = new AMap.Polygon({\n                path: area2,\n                strokeColor: \"#FF0000\",\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: \"#FF0000\",\n                fillOpacity: 0.35\n            });\n            this.mapObj.add(polygon);\n            if (this.mapInfo.showMult) {\n                this.mapInfo.vehicleInfo.map(item => {\n                    let temp = wgs84ToGcjo2(item.lastLocationLng, item.lastLocationLat);\n                    let title = `${item.year ? item.year : \"N/A\"} ${item.make ? item.make : \"N/A\"} ${item.model ? item.model : \"N/A\"}`;\n                    let contentString = `<a href='/inventory/vehicle/detail/${item.vehicleId}'>\n                            <img style=\"background: #3a4149\" src=\"${item.photoPath ? item.photoPath : \"/img/placeholder.5367544d.svg\"}\" width=\"100%\">\n                            <h5 id=\"firstHeading\" class=\"firstHeading\">${item.year ? item.year : \"N/A\"} ${item.make ? item.make : \"N/A\"} ${item.model ? item.model : \"N/A\"}</h5>\n                            </a>`;\n                    this.addMarker(temp, title, contentString);\n                });\n            } else {\n                this.addMarker(lnglat, this.mapInfo.vehicleInfo, null);\n            }\n            this.mapObj.setFitView();\n        },\n        changeMapType(type) {\n            if (type == \"default\") {\n                this.roadLayer.hide();\n                this.safeLayer.hide();\n            } else {\n                this.roadLayer.show();\n                this.safeLayer.show();\n            }\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.maps {\n    .map-btn-group {\n        position: absolute;\n        margin-top: 10px;\n        z-index: 1;\n        margin-left: 20px;\n        ul {\n            color: grey;\n            padding: 0 20px;\n            height: 40px;\n            line-height: 40px;\n            background: #ffffff;\n            font-size: 18px;\n            li {\n                cursor: pointer;\n                display: inline-block;\n            }\n        }\n    }\n    #map,\n    #model-map {\n        height: 70vh;\n        width: 100%;\n    }\n    .my-map {\n        height: 400px;\n        width: 100%;\n        .amap-info {\n            width: 200px;\n        }\n        .amap-info-contentContainer {\n            background: #ffffff;\n            border-radius: 10px;\n            h5 {\n                padding-left: 10px;\n            }\n        }\n    }\n}\n.maps {\n    .modal-dialog {\n        max-width: 90%;\n        width: 90%;\n    }\n}\n</style>\n"]}]}