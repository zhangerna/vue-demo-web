{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/lotsDetail.vue?vue&type=template&id=5ff07c6c&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/lotsDetail.vue","mtime":1574414921000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"animated fadeIn lot-edit\" },\n    [\n      _c(\n        \"b-card\",\n        {\n          staticClass: \"custom-header\",\n          attrs: { header: _vm.$t(\"m.lots.lot_detail\") }\n        },\n        [\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                { staticClass: \"col-6\" },\n                [\n                  _c(\n                    \"b-form-group\",\n                    [\n                      _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.lots.name\")))]),\n                      _c(\"b-form-input\", {\n                        attrs: { disabled: \"\", type: \"text\" },\n                        model: {\n                          value: _vm.parkingName,\n                          callback: function($$v) {\n                            _vm.parkingName = $$v\n                          },\n                          expression: \"parkingName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    [\n                      _c(\"label\", [\n                        _vm._v(_vm._s(_vm.$t(\"m.common.contact_person\")))\n                      ]),\n                      _c(\"b-form-input\", {\n                        attrs: { disabled: \"\", type: \"text\" },\n                        model: {\n                          value: _vm.parkingContactName,\n                          callback: function($$v) {\n                            _vm.parkingContactName = $$v\n                          },\n                          expression: \"parkingContactName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    [\n                      _c(\"label\", [\n                        _vm._v(_vm._s(_vm.$t(\"m.common.contact_phone\")))\n                      ]),\n                      _c(\"b-form-input\", {\n                        attrs: { disabled: \"\", type: \"number\" },\n                        model: {\n                          value: _vm.parkingContactPhone,\n                          callback: function($$v) {\n                            _vm.parkingContactPhone = $$v\n                          },\n                          expression: \"parkingContactPhone\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    [\n                      _c(\"label\", [\n                        _vm._v(_vm._s(_vm.$t(\"m.add_shop.country\")))\n                      ]),\n                      _c(\"b-form-input\", {\n                        attrs: { disabled: \"\", type: \"text\" },\n                        model: {\n                          value: _vm.data.parkingCountryName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data, \"parkingCountryName\", $$v)\n                          },\n                          expression: \"data.parkingCountryName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    [\n                      _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.add_shop.state\")))]),\n                      _c(\"b-form-input\", {\n                        attrs: { disabled: \"\", type: \"text\" },\n                        model: {\n                          value: _vm.data.parkingStateName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data, \"parkingStateName\", $$v)\n                          },\n                          expression: \"data.parkingStateName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    [\n                      _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.add_shop.city\")))]),\n                      _c(\"b-form-input\", {\n                        attrs: { disabled: \"\", type: \"text\" },\n                        model: {\n                          value: _vm.data.parkingCityName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data, \"parkingCityName\", $$v)\n                          },\n                          expression: \"data.parkingCityName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    [\n                      _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.add_shop.area\")))]),\n                      _c(\"b-form-input\", {\n                        attrs: { disabled: \"\", type: \"text\" },\n                        model: {\n                          value: _vm.data.parkingAreaName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.data, \"parkingAreaName\", $$v)\n                          },\n                          expression: \"data.parkingAreaName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    [\n                      _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.lots.address\")))]),\n                      _c(\n                        \"b-input-group\",\n                        [\n                          _c(\"b-form-input\", {\n                            attrs: { disabled: \"\", type: \"text\" },\n                            model: {\n                              value: _vm.parkingAddress,\n                              callback: function($$v) {\n                                _vm.parkingAddress = $$v\n                              },\n                              expression: \"parkingAddress\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    [\n                      _c(\"label\", [\n                        _vm._v(_vm._s(_vm.$t(\"m.common.address_des\")))\n                      ]),\n                      _c(\"b-form-input\", {\n                        attrs: { disabled: \"\", type: \"text\" },\n                        model: {\n                          value: _vm.parkingAddressDesc,\n                          callback: function($$v) {\n                            _vm.parkingAddressDesc = $$v\n                          },\n                          expression: \"parkingAddressDesc\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticStyle: { position: \"relative\" } },\n            [_c(\"myMap\", { attrs: { map: _vm.map, elementId: \"lot-map\" } })],\n            1\n          ),\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                {\n                  staticClass: \"col-12 text-center\",\n                  staticStyle: { \"margin-top\": \"20px\" }\n                },\n                [\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.delId(_vm.id)\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"m.cloud.delete\")))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"model\", {\n        attrs: {\n          show: _vm.show,\n          title: _vm.$t(\"m.tip.warn\"),\n          content: _vm.$t(\"m.tip.delete_lot\"),\n          buttonText: _vm.btnGroup\n        },\n        on: { closeRemindBox: _vm.hideTip }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}