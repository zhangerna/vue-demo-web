{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/components/reportDetail/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/components/reportDetail/index.vue","mtime":1574414921000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { checkNull } from \"@/utils/db\"\nexport default {\n    name: \"tableCard\",\n    props: ['data', 'type'],\n    methods: {\n        checkNull,\n        sTransferM(time) {\n            let temp = String((time/60).toFixed(2));\n            let temp2 = time % 60;\n            return temp[0] + `${ this.$t('m.report.minutes') } ${temp2}${ this.$t('m.report.second')}`\n        },\n        checkObjectNull(data, data2) {\n            return Object.keys(data).length == 0 ? '' : data2;\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard/testDrive/components/reportDetail","sourcesContent":["<template>\n    <div class=\"table-card\">\n        <table class=\"table table-responsive-sm table-bordered\" v-if=\"data\">\n            <thead>\n                <tr class=\"pure-grey\">\n                    <th width=\"8%\"></th>\n                    <th width=\"23%\" v-for=\"(item, key) in data['head']\" :key=\"key\">{{ item ? $t(item) : '' }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>{{ type == 'speed' ?  $t('m.report.duration') : $t('m.report.duratime_times') }}</td>\n                    <td v-for=\"(item, key) in data.body\" :key=\"key\">\n                        <template v-if=\"[1, 2].includes(key) && ['acc', 'turn', 'pong'].includes(type)\">\n                            {{ Object.keys(item).length == 0 ? '' : checkNull(item.durationTime) + $t('m.report.times') + '(' + checkNull(item.durationTimeStatictics) + '%)'  }}\n                        </template>\n                        <template v-else>\n                            {{ Object.keys(item).length == 0 ? '' :  sTransferM(item.durationTime) + '(' + checkNull(item.durationTimeStatictics) + '%)' }}\n                        </template>\n                    </td>\n                </tr>\n                <tr class=\"green-bc\">\n                    <td>{{ $t('m.report.happy') }}</td>\n                    <td v-for=\"(item, key) in data.body\" :key=\"key\">{{ checkObjectNull(item, checkNull(item.positiveEmotionStatistics) + '%') }}</td>\n                </tr>\n                <tr class=\"yellow-bc\">\n                    <td>{{ $t('m.report.normal_happy') }}</td>\n                    <td v-for=\"(item, key) in data.body\" :key=\"key\">{{ checkObjectNull(item, checkNull(item.neutralEmotionStatistics) + '%') }}</td>\n                </tr>\n                <tr class=\"red-bc\">\n                    <td>{{ $t('m.report.no_happy') }}</td>\n                    <td v-for=\"(item, key) in data.body\" :key=\"key\">{{ checkObjectNull(item, checkNull(item.negativeEmotionStatistics) + '%' )}}</td>\n                </tr>\n                <tr class=\"blue-bc\">\n                    <td>{{ $t('m.cloud.emotion_net_worth') }}</td>\n                    <td v-for=\"(item, key) in data.body\" :key=\"key\">{{ checkObjectNull(item, checkNull(item.emotionNetWorth) + '%' ) }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n    .pure-grey {\n        background: #f0f3f5;\n    }\n    .blue-bc {\n        background: #b1e0ee;\n    }\n    .green-bc {\n        background: #a2dab6;\n    }\n    .red-bc {\n        background: #f8b2b1;\n    }\n    .yellow-bc {\n        background: #fbdc7f;\n    }\n</style>\n\n<script>\n    import { checkNull } from \"@/utils/db\"\n    export default {\n        name: \"tableCard\",\n        props: ['data', 'type'],\n        methods: {\n            checkNull,\n            sTransferM(time) {\n                let temp = String((time/60).toFixed(2));\n                let temp2 = time % 60;\n                return temp[0] + `${ this.$t('m.report.minutes') } ${temp2}${ this.$t('m.report.second')}`\n            },\n            checkObjectNull(data, data2) {\n                return Object.keys(data).length == 0 ? '' : data2;\n            }\n        }\n    }\n</script>\n\n\n"]}]}