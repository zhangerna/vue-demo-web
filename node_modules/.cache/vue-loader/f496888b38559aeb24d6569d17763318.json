{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/amapForAddress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/amapForAddress.vue","mtime":1565693971000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AMap from 'AMap'\nexport default {\n    name: \"amapForAddress\",\n    props: [\"address\"],\n    data() {\n        return {\n            address1: \"\",\n            mapObj: null\n        }\n    },\n    watch: {\n        address: function (newVal) {\n            this.address1 = newVal;\n            this.initMap()\n        }\n    },\n    methods: {\n        initMap(){\n            this.mapObj = new AMap.Map('map', {\n                zoom: 17\n            });\n            this.safeLayer = new AMap.TileLayer.Satellite({\n            });\n            this.roadLayer = new AMap.TileLayer.RoadNet({\n            });\n            this.mapObj.add(this.safeLayer);\n            this.mapObj.add(this.roadLayer);\n\n            this.geocoders = new AMap.Geocoder();\n            this.geocoders.getLocation(this.address1, (status, result) => {\n                console.log(result)\n                console.log(status)\n                if (status === 'complete' && result.geocodes.length) {\n                    this.markers = new AMap.Marker({\n                        position: result.geocodes[0].location,\n                        icon: new AMap.Icon({\n                            image: \"https://cdn.shopify.com/s/files/1/0703/1149/files/Store.svg?854352\",\n                            size: new AMap.Size(60, 60),\n                            imageSize: new AMap.Size(20,30),\n                        })\n                    });\n                    this.mapObj.add(this.markers);\n                    this.mapObj.setFitView(this.markers);\n                }\n            })\n\n        }\n    }\n}\n",null]}