{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/shopEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/shopEdit.vue","mtime":1567594357000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport httpClient from \"@/utils/httpclient\";\nimport model from \"@/components/model\";\nexport default {\n    name: \"addShop\",\n    components: {\n        model\n    },\n    data() {\n        return {\n            btnGroup: {\n                btnFirst: \"Cancel\",\n                btnSecond:'OK'\n            },\n            showTip: false,\n            saveStatus:false,\n            title: \"\",\n            info: \"\",\n            name: \"\",\n            list: [],\n            country: '',\n            state: '',\n            city: '',\n            street: \"\",\n            cityE: false,\n            stateE: false,\n            countryE: false,\n            apartment: \"\",\n            zipCode: \"\",\n            zipE: false,\n            apartE: false,\n            streetE: false,\n            nameE: false,\n            hasSubmit: false,\n            managerE: false,\n            managerList: []\n        }\n    },\n    mounted () {\n        if (this.$route.params.id) {\n            httpClient.get(\"/api/v1/store/detail?storeId=\" + this.$route.params.id, {\n            }).then((res) => {\n                if (res.data.code == 200) {\n                    httpClient.get(\"/api/v1/getprovicescity\").then((resp) => {\n                        if (resp.data.code == 200) {\n                            this.list = resp.data.data.countryList;\n                            this.filterCountry(res.data.data.countryEn, res.data.data.stateEn, res.data.data.cityEn)\n                        }\n                    });\n                    for (let item of res.data.data.userList) {\n                        this.managerList.push({\n                            email: item.userEmail,\n                            phone: item.userPhone,\n                            lastName: item.lastName,\n                            firstName: item.firstName,\n                            ori: true\n                        })\n                    }\n                    this.managerList.length == 0 ? this.managerList.push({\n                            email: \"\",\n                            phone: \"\",\n                            lastName: \"\",\n                            firstName: \"\"}) : '';\n                    this.name = res.data.data.storeName;\n                    this.street = res.data.data.streetAddress;\n                    this.apartment = res.data.data.storeAddress;\n                    this.zipCode = res.data.data.zipCode;\n                }\n            });\n        }\n    },\n    methods: {\n        filterCountry(country, state, city) {\n            for (let i=0; i < this.list.length; i++) {\n                if (this.list[i].countryName == country) {\n                    this.country = i + 1;\n                }\n            }\n            if (this.country) {\n                for (let i=0; i < this.list[this.country - 1].proviceList.length; i++) {\n                    if (this.list[this.country - 1].proviceList[i].proviceName == state) {\n                        this.state = i + 1;\n                    }\n                }\n            }\n            if (this.country && this.state) {\n                for (let k=0; k < this.list[this.country - 1].proviceList[this.state - 1].cityList.length; k++) {\n                    if (this.list[this.country - 1].proviceList[this.state - 1].cityList[k].cityName == city) {\n                        this.city = k + 1;\n                    }\n                }\n            }\n\n        },\n        addAdmin() {\n            this.managerList.push(\n                {\n                    email: \"\",\n                    phone: \"\",\n                    lastName: \"\",\n                    firstName: \"\"\n                }\n            )\n        },\n        checkData() {\n            this.hasSubmit = true;\n            this.nameE = this.name ? false : true;\n            this.zipE = this.zipCode ? false : true;\n            this.streetE = this.street ? false : true;\n            this.apartE = this.apartment ? false : true;\n            this.countryE = this.country ? false : true;\n            this.stateE = this.state ? false : true;\n            this.cityE = this.city ? false : true;\n            for (let item of this.managerList) {\n                if (!item.email || item.email.indexOf(\"@\") < 0 || !item.phone || !item.lastName || !item.firstName) {\n                    this.managerE = true;\n                }\n            }\n\n        },\n        updateData() {\n            this.checkData();\n            if (!this.nameE && !this.zipE && !this.streetE && !this.apartE && !this.managerE && !this.countryE && !this.stateE && !this.cityE) {\n                httpClient.post('/api/v1/store/update', {\n                    insertSaasTenantStoreDTO: {\n                        id: this.$route.params.id,\n                        cityCode: this.list[this.country - 1]['proviceList'][this.state - 1]['cityList'][this.city - 1].cityId,\n                        countryCode: this.list[this.country - 1].countryId,\n                        stateCode: this.list[this.country - 1]['proviceList'][this.state - 1].provicesId,\n                        storeAddress: this.apartment,\n                        storeName: this.name,\n                        streetAddress: this.street,\n                        zipCode: this.zipCode\n                    },\n                    inviteUserParamDTO: this.managerList\n                }).then((res) => {\n                    //弹窗\n                    if(res.data.code === 200 && res.data.data.result){\n                        this.saveStatus = true\n                    }\n                })\n            }\n        },\n        saveAndLink(){\n            this.$router.push('/shop-manager');\n        }\n    }\n}\n",null]}