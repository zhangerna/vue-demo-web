{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/components/shop.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/components/shop.vue","mtime":1576640374000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.mainI {\n    .dropdown-item{\n        padding: 10px 30px;\n    }\n    .dropdown-item i{\n        margin-left: -24px;\n    }\n    .card {\n        width: 100%;\n    }\n    .remind-number{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .remove-padding {\n        padding: 0 4px;\n        p{\n            margin: 0;\n        }\n    }\n    strong, small {\n        margin-left: 10px;\n    }\n    .card-hover {\n        cursor: pointer;\n    }\n    .user-name {\n        color: #20a8d8;\n        cursor: pointer;\n    }\n    .table-outline td {\n        height: 40px;\n    }\n    .table {\n        th {\n            color: #73818f;\n        }\n    }\n    .week-drop {\n        button {\n            color: #73818f;\n            background-color: transparent;\n            background-image: none;\n            border-color: #73818f;\n        }\n    }\n    .pie-group {\n        #battery-health > div, #inventory-location > div{\n            margin: 0 auto;\n        }\n        h4 {\n            text-align: center;\n            color: #73818f;\n        }\n    }\n}\n",{"version":3,"sources":["shop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"shop.vue","sourceRoot":"src/views/dashboard/dashboardMain/components","sourcesContent":["<template>\n    <div class=\"animated fadeIn mainI\">\n        <b-row>\n            <b-col sm=\"6\" lg=\"3\" v-for=\"(item, index) in card\" :key=\"index\" class=\"card-hover\"\n                   @click='$router.push({name: \"VehicleList\",\n                   query: {filters:  `[{ \"key\":\"${item.key}\",\"value\":[\"${item.value}\"]}]` }})'>\n                <b-card no-body :class=\"item.class\">\n                    <b-card-body>\n                        <b-row>\n                            <b-col sm=\"6\" lg=\"6\" class=\"remove-padding\">\n                                <img  :src=\"item.img\">\n                            </b-col>\n                            <b-col sm=\"6\" lg=\"6\" class=\"text-center text-white remove-padding remind-number\">\n                                <div>\n                                    <p class=\"text-uppercase font-weight-bold text-muted\">{{ $t(item.name) }}</p>\n                                    <p class=\"text-uppercase text-value-lg font-weight-bold text-muted\">{{ item.num }}</p>\n                                </div>\n                            </b-col>\n                        </b-row>\n                    </b-card-body>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row v-if=\"showLog && showLog.length > 0\">\n            <b-col sm=\"12\" lg=\"12\">\n                <b-card\n                        header-tag=\"header\"\n                        footer-tag=\"footer\">\n                    <div slot=\"header\">\n                        <i class=\"fa fa-align-justify\"></i><strong>{{ $t('m.index.recent_title') }}</strong>\n                        <small class=\"text-muted last-update\" v-cloak>{{ $t('m.index.last_update') }}: {{ lastDate }}</small>\n                    </div>\n                    <b-table class=\"mb-0 table-outline\" small striped responsive=\"sm\" :items=\"$store.getters.logList\" hover :fields=\"tableFields\">\n                        <template slot=\"user\" slot-scope=\"data\">\n                            <span class=\"user-name\" @click=\"$router.push('/inventory/admin/detail/' + data.item.userId)\">{{ data.item.user }}</span>\n                        </template>\n                        <template slot=\"vehicle\" slot-scope=\"data\">\n                            <span class=\"user-name\" @click=\"$router.push('/inventory/vehicle/detail/' + data.item.vehicleId)\">{{ data.item.vehicle }}</span>\n                        </template>\n                    </b-table>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row columns class=\"pie-group\">\n            <b-col sm=\"6\" lg=\"6\">\n                <b-card :header=\"$t('m.index.battery')\" class=\"text-center\">\n                    <div style=\"height:400px\"  id=\"battery-health\">\n                    </div>\n                </b-card>\n            </b-col>\n            <b-col sm=\"6\" lg=\"6\">\n                <b-card :header=\"$t('m.index.l_location')\" class=\"text-center\">\n                    <div style=\"height:400px\"  id=\"inventory-location\">\n                    </div>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row v-if=\"env == 'en'\" >\n            <b-col sm=\"12\" lg=\"12\">\n                <b-card>\n                    <b-row>\n                        <b-col sm=\"6\" lg=\"6\">\n                            <h4>{{ $t('m.index.sale_title') }}</h4>\n                            <p class=\"text-muted\">{{ salePersonDate }}</p>\n                        </b-col>\n                        <b-col sm=\"6\" lg=\"6\" class=\"text-right\">\n                            <b-dropdown :text=\"weekly == 'week' ? $t('m.index.weeks') : $t('m.index.month')\" class=\"btn-group btn-group-toggle m-2 week-drop\">\n                                <b-dropdown-item>\n                                    <i v-if=\"weekly == 'week'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseSaleDate('week')\">\n                                        <h6>{{ $t('m.index.week_inter') }}</h6>\n                                        <p class=\"small text-muted mb-0\">{{ $t('m.index.week_des') }}</p>\n                                    </div>\n                                </b-dropdown-item>\n                                <b-dropdown-item>\n                                    <i v-if=\"weekly != 'week'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseSaleDate('month')\">\n                                        <h6>{{ $t('m.index.mon_inter') }}</h6>\n                                        <p class=\"small text-muted mb-0\">{{ $t('m.index.mon_des') }}</p>\n                                    </div>\n                                </b-dropdown-item>\n                            </b-dropdown>\n                            <div style=\"display: inline-block\" class=\"text-muted\">{{ $t('m.index.last') }} {{ weekly == 'week' ? '12 ' + $t('m.index.weeks') : '6 ' + $t('m.index.month') }}</div>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" lg=\"12\" id=\"sale\" style=\"height: 400px\">\n                        </b-col>\n                    </b-row>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row v-if=\"env == 'en'\">\n            <b-col sm=\"12\" lg=\"12\">\n                <b-card>\n                    <b-row>\n                        <b-col sm=\"6\" lg=\"6\">\n                            <h4>{{ $t('m.index.per_deal') }}</h4>\n                            <p class=\"text-muted\">{{ dailyDate }}</p>\n                        </b-col>\n                        <b-col sm=\"6\" lg=\"6\" class=\"text-right\">\n                            <b-dropdown :text=\"daily == 'daily' ? $t('m.index.daily') : (daily == 'week' ? $t('m.index.weeks') : $t('m.index.month'))\" class=\"btn-group btn-group-toggle m-2 week-drop\">\n                                <b-dropdown-item>\n                                    <i v-if=\"daily == 'daily'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseDealDate('daily')\">\n                                        <h6>{{ $t('m.index.daily_inter') }}</h6>\n                                        <p class=\"small text-muted mb-0\">{{ $t('m.index.daily_des') }}</p>\n                                    </div>\n                                </b-dropdown-item>\n                                <b-dropdown-item>\n                                    <i v-if=\"daily == 'week'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseDealDate('week')\">\n                                        <h6>{{ $t('m.index.week_inter') }}</h6>\n                                        <p class=\"small text-muted mb-0\">{{ $t('m.index.week_des') }}</p>\n                                    </div>\n                                </b-dropdown-item>\n                                <b-dropdown-item>\n                                    <i v-if=\"daily == 'month'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseDealDate('month')\">\n                                        <h6>{{ $t('m.index.mon_inter') }}</h6>\n                                        <p class=\"small text-muted mb-0\">{{ $t('m.index.mon_des') }}</p>\n                                    </div>\n                                </b-dropdown-item>\n                            </b-dropdown>\n                            <div style=\"display: inline-block\" class=\"text-muted\">{{ $t('m.index.last') }} {{ daily == 'week' ? '12 ' + $t('m.index.weeks') : (daily == 'daily') ? '30 ' + $t('m.index.daily') : '6 ' + $t('m.index.month') }}</div>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" lg=\"12\" id=\"deaLocation\" style=\"height: 400px\">\n                        </b-col>\n                    </b-row>\n                </b-card>\n            </b-col>\n        </b-row>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    .mainI {\n        .dropdown-item{\n            padding: 10px 30px;\n        }\n        .dropdown-item i{\n            margin-left: -24px;\n        }\n        .card {\n            width: 100%;\n        }\n        .remind-number{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n        .remove-padding {\n            padding: 0 4px;\n            p{\n                margin: 0;\n            }\n        }\n        strong, small {\n            margin-left: 10px;\n        }\n        .card-hover {\n            cursor: pointer;\n        }\n        .user-name {\n            color: #20a8d8;\n            cursor: pointer;\n        }\n        .table-outline td {\n            height: 40px;\n        }\n        .table {\n            th {\n                color: #73818f;\n            }\n        }\n        .week-drop {\n            button {\n                color: #73818f;\n                background-color: transparent;\n                background-image: none;\n                border-color: #73818f;\n            }\n        }\n        .pie-group {\n            #battery-health > div, #inventory-location > div{\n                margin: 0 auto;\n            }\n            h4 {\n                text-align: center;\n                color: #73818f;\n            }\n        }\n    }\n</style>\n\n<script>\n    import httpclient from '@/utils/httpclient';\n    import echarts from 'echarts';\n    import { getDateString, getYMDFormart } from \"@/utils/date\"\n\n    export default {\n        name: \"mainI\",\n        data() {\n            return {\n                weekly: \"week\",\n                daily: \"daily\",\n                dailyDate: \"\",\n                env:'',\n                salePersonDate: \"\",\n                card: {\n                    \"inventory\": {\n                        name: \"m.index.inventory\",\n                        img: require('@assets/pages-img/inven-icon.svg'),\n                        type: \"inventory\",\n                        class: \"bg-primary\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    },\n                    \"offLots\": {\n                        name: \"m.index.offlot\",\n                        img: require('@assets/pages-img/off-lot.svg'),\n                        type: \"off lot\",\n                        class: \"bg-info\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    },\n                    \"extremelyLowPower\": {\n                        name: \"m.index.low\",\n                        img: require('@assets/pages-img/low-bat.svg'),\n                        type: \"low battery\",\n                        class: \"bg-warning\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    },\n                    \"offLine\": {\n                        name: \"m.index.offline\",\n                        img: require('@assets/pages-img/off-line.svg'),\n                        type: \"offline\",\n                        class: \"bg-danger\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    }\n                },\n                option1 : {\n                    tooltip: {\n                        trigger: 'item'\n                    },\n                    legend: {\n                        y: \"20px\",\n                        textStyle: {\n                            color:[\"#000000\"],\n                        },\n                        data:[this.$t('m.index.l_low'), '11.7V - 12.1V', this.$t('m.index.l_above')]\n                    },\n                    series : [\n                        {\n                            type:'pie',\n                            label: {\n                                show: false\n                            },\n                            labelLine: {\n                                show: false\n                            },\n                            radius : '55%',\n                            center: ['50%', '60%'],\n                            data:[\n                                {value:0, name:this.$t('m.index.l_low')},\n                                {value:0, name:'11.7V - 12.1V'},\n                                {value:0, name:this.$t('m.index.l_above')}\n                            ],\n                            color: ['rgb(255,99,132)',\n                                'rgb(255, 205, 86)',\n                                'rgb(54, 162, 235)',]\n                        }\n                    ]\n                },\n                option2 : {\n                    tooltip: {\n                        trigger: 'item'\n                    },\n                    legend: {\n                        y: \"20px\",\n                        textStyle: {\n                            color:[\"#000000\"],\n                        },\n                        data:[this.$t('m.index.r_lot'), this.$t('m.index.r_off')]\n                    },\n                    series : [\n                        {\n                            label: {\n                                show: false\n                            },\n                            labelLine: {\n                                show: false\n                            },\n                            type:'pie',\n                            radius : '55%',\n                            center: ['50%', '60%'],\n                            data:[\n                                {value:0, name:this.$t('m.index.r_lot')},\n                                {value:0, name:this.$t('m.index.r_off')}\n                            ],\n                            color: ['rgb(54, 162, 235)',\n                                'rgb(255,99,132)']\n                        }\n                    ]\n                },\n                showLog: false,\n                lastDate: null,\n                color: ['99,194,222,0.8', '248,108,107,0.8', '255,193,5,0.8', '32,168,216,0.8', '77,189,116,0.8'],\n                deaLoction: {\n                    tooltip: {\n                        trigger: 'axis'\n                    },\n                    legend: {\n                        data:[],\n                        textStyle: {\n                            color:[\"#000000\"],\n                        }\n                    },\n                    grid: {\n                        left: '1%',\n                        right: '1%',\n                        bottom: '3%',\n                        containLabel: true\n                    },\n\n                    xAxis: {\n                        type: 'category',\n                        boundaryGap: false,\n                        splitLine: {\n                            show: true,\n                            lineStyle: {\n                                color: \"black\"\n                            }\n                        },\n                        data: [],\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#73818f\"\n                            }\n                        }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        splitLine: {\n                            show: true,\n                            lineStyle: {\n                                color: \"black\"\n                            }\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#73818f\"\n                            }\n                        }\n                    },\n                    series: []\n                },\n                saleOption: {\n                    tooltip: {\n                        trigger: 'axis'\n                    },\n                    legend: {\n                        data:[\n                            {\n                                name: this.$t('m.index.average_time'),\n                                icon: \"roundRect\"\n                            },\n                            {\n                                name: this.$t('m.index.average_num'),\n                                icon: \"roundRect\",\n\n                            }],\n                        textStyle: {\n                            color:[\"#000000\"],\n                        }\n                    },\n                    grid: {\n                        left: '1%',\n                        right: '1%',\n                        bottom: '3%',\n                        containLabel: true\n                    },\n\n                    xAxis: {\n                        type: 'category',\n                        boundaryGap: false,\n                        splitLine: {\n                            show: true,\n                            lineStyle: {\n                                color: \"black\"\n                            }\n                        },\n                        data: [],\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#73818f\"\n                            }\n                        }\n                    },\n                    yAxis: [\n                        {\n                            type: 'value',\n                            splitLine: {\n                                show: true,\n                                lineStyle: {\n                                    color: \"black\"\n                                }\n                            },\n                            axisLine: {\n                                lineStyle: {\n                                    color: \"#73818f\"\n                                }\n                            }\n                        },\n                        {\n                            type: 'value',\n                            splitLine: {\n                                show: true,\n                                lineStyle: {\n                                    color: \"black\"\n                                }\n                            },\n                            axisLine: {\n                                lineStyle: {\n                                    color: \"#73818f\"\n                                }\n                            }\n                        }\n                    ],\n                    series: [\n                        {\n                            name: this.$t('m.index.average_time'),\n                            type:'line',\n                            smooth: true,\n                            yAxisIndex: 0,\n                            data:[],\n                            color: 'rgba(99,194,222, 0.8)',\n                            backgroundColor: \"#73818f\"\n                        },\n                        {\n                            name:this.$t('m.index.average_num'),\n                            type:'line',\n                            yAxisIndex: 1,\n                            smooth: true,\n                            data:[],\n                            color: 'rgba(248,108,107, 0.8)'\n                        }\n                    ]\n                },\n                tableFields: {\n                    user: {\n                        label: this.$t('m.index.user'),\n                        class: \"text-left\"\n                    },\n                    action: {\n                        label: this.$t('m.common.action'),\n                        class: \"text-left\"\n                    },\n                    vehicle: {\n                        label: this.$t('m.common.vehicle'),\n                        class: \"text-left\"\n                    },\n                    time: {\n                        label: this.$t('m.index.time_stamp'),\n                        class: \"text-left\"\n                    }\n                },\n                pie1: null,\n                pie2: null,\n                data: null\n            }\n        },\n        mounted() {\n            this.env = process.env.VUE_APP_ENV;\n            this.$store.dispatch(\"clear_log_list\", []);\n            this.initData();\n        },\n        methods: {\n            initData() {\n                new Promise((resolve, reject) => {\n                    httpclient.get(\"/api/v1/index\", {}).then((response) => {\n                        httpclient.get(\"/api/v1/vehicle/availableLogList\", {}).then((res) => {\n                            this.filterData(response.data.data, res.data.data)\n                            resolve();\n                        }).catch(() => {\n                            this.filterData(response.data.data, []);\n                            resolve();\n                        });\n                    }).catch((err) => {\n                        resolve();\n                    });\n                }).then(() => {\n                    this.getSales(2);\n                }).then(() => {\n                    this.getDealData(1)\n                })\n\n            },\n            chooseDealDate(type){\n                this.daily = type;\n                let num = (type == 'daily') ? 1: (type == 'week' ? 2 : 3);\n                this.getDealData(num)\n            },\n            getDealData(num) {\n                httpclient.post(\"/api/v1/index/averageparkinglotdata\", {timeType: num}).then((res) => {\n                    this.filterDealData(res.data.data);\n                }).catch((err) => {\n                    // alert(err)\n                })\n            },\n            filterDealData(data) {\n                this.deaLoction.series = [];\n                this.deaLoction.xAxis.data = [];\n                this.deaLoction.legend.data = [];\n                let firstTime = getYMDFormart(data[0].averageDrivingTime2[data[0].averageDrivingTime2.length - 1].data);\n                let lastTime = getYMDFormart(data[0].averageDrivingTime2[0].data);\n                this.dailyDate = `${firstTime} - ${lastTime}`;\n                data.map((item, key) => {\n                    this.deaLoction.legend.data.push({\n                        name: item.parkingName,\n                        icon: \"roundRect\"\n                    });\n                    let seData = [];\n                    item.averageDrivingTime.reverse().map((it, k) => {\n                        seData.push(it.value);\n                        key == 0 ? this.deaLoction.xAxis.data.push(it.data) : null;\n                    });\n                    this.deaLoction.series.push({\n                        name: item.parkingName,\n                        type:'line',\n                        smooth: true,\n                        data: seData,\n                        color: `rgba(${this.color[key]})`,\n                        backgroundColor: \"#73818f\"\n                    })\n\n                });\n                echarts.init(document.getElementById(\"deaLocation\")).setOption(this.deaLoction);\n            },\n            filterSalesData(data) {\n                this.saleOption.xAxis.data = [];\n                this.saleOption.series[0].data = [];\n                this.saleOption.series[1].data = [];\n                let firstTime = getYMDFormart(data[data.length - 1].standardStartDate);\n                let lastTime = getYMDFormart(data[0].standardStartDate);\n                this.salePersonDate = `${firstTime} - ${lastTime}`;\n                for (let item of data.reverse()) {\n                    this.saleOption.xAxis.data.push(item.startDate);\n                    this.saleOption.series[0].data.push(item.averageDrivingTime);\n                    this.saleOption.series[1].data.push(item.averageDrivingNumber);\n                }\n                echarts.init(document.getElementById(\"sale\")).setOption(this.saleOption);\n            },\n            getSales(num) {\n                httpclient.post(\"/api/v1/index/averagesalesdata\", {timeType: num}).then((res) => {\n                    this.filterSalesData(res.data.data);\n                }).catch((err) => {\n                    // alert(err)\n                })\n            },\n            chooseSaleDate(type) {\n                this.weekly = type;\n                let num = (type == 'month') ? 3 : 2;\n                this.getSales(num)\n            },\n            formatTime(val) {//格式化时间（06/17/2019 19:08）\n                let mon = (val.getMonth() + 1) > 9 ? (val.getMonth() + 1) : '0' + (val.getMonth() + 1);\n                let data = val.getDate() > 9 ? val.getDate() : '0' + val.getDate();\n                let hour = val.getHours() > 9 ? val.getHours() : '0' + val.getHours();\n                let minute = val.getMinutes() > 9 ? val.getMinutes() : '0' + val.getMinutes();\n                return mon + '/' + data + '/' + val.getFullYear() + '  ' + hour + ':' + minute\n            },\n            filterData(data, loglist) {\n                this.data = data;\n                this.showLog = loglist.map(item => {\n                    return {\n                        user: item.firstName + \" \" + item.lastName,\n                        action: item.available == '1' ? this.$t('m.index.has_just') + this.$t('m.index.check_in') : this.$t('m.index.has_just') + this.$t('m.index.check_out'),\n                        vehicle: `${item.year ? item.year : 'N/A'} ${item.make ? item.make : 'N/A'} ${item.model ? item.model : 'N/A'}`,\n                        time: getDateString(Number(item.createTime)),\n                        vehicleId: item.vehicleId,\n                        userId: item.checkUserId\n                    }\n                });\n                this.$store.dispatch(\"save_log_list\", this.showLog);\n\n                this.lastDate = this.formatTime(new Date());\n                let batHealth = [\"extremelyLowPower\", \"lowPower\", \"commonPower\"];\n                let inventory = [\"inLots\", \"offLots\"];\n\n                for (let item in this.card) {\n                    this.card[item][\"num\"] = data[item] ? data[item][\"num\"] : \"\";\n                    this.card[item][\"filters\"] = data[item] ? data[item][\"filters\"] : \"\";\n                    this.card[item][\"key\"] = data[item] ? data[item][\"filters\"][0].key: \"\";\n                    this.card[item][\"value\"] = data[item] ? data[item][\"filters\"][0].value[0]: \"\";\n                }\n\n                for (let i in batHealth){\n                    this.option1.series[0].data[i].value = data[batHealth[i]][\"num\"]\n                }\n                for (let i in inventory){\n                    this.option2.series[0].data[i].value = data[inventory[i]][\"num\"];\n                }\n                this.pie1 = echarts.init(document.getElementById(\"battery-health\"));\n                this.pie1.setOption(this.option1);\n                this.pie2 = echarts.init(document.getElementById(\"inventory-location\"));\n                this.pie2.setOption(this.option2);\n                let self = this;\n                this.pie1.on(\"click\", function (param) {\n                    if (param.dataIndex == 0) {\n                        self.$router.push({name: \"VehicleList\",\n                            query: {filters:  JSON.stringify([{key:\"battery\",value:[\"1\"]}]) }})\n                    } else if(param.dataIndex == 1) {\n                        self.$router.push({name: \"VehicleList\",\n                            query: {filters:  JSON.stringify([{key:\"battery\",value:[\"2\"]}]) }})\n                    } else {\n                        self.$router.push({name: \"VehicleList\",\n                            query: {filters:  JSON.stringify([{key:\"battery\",value:[\"3\"]}]) }})\n                    }\n                });\n                this.pie2.on(\"click\", function (param) {\n                    if (param.dataIndex == 0) {\n                        self.$router.push({name: \"VehicleList\",\n                            query: {filters:  '[' + JSON.stringify(self.data.inLots.filters[0]) + ']' }})\n                    } else {\n                        self.$router.push({name: \"VehicleList\",\n                            query: {filters: '[' + JSON.stringify(self.data.offLots.filters[0]) + ']' }})\n                    }\n                });\n\n            }\n        }\n\n    }\n</script>\n"]}]}