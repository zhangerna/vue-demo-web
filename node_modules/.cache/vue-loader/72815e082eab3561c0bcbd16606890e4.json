{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/gmap.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/gmap.vue","mtime":1577962918000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n#map {\n    height: 70vh;\n    .gm-style .gm-style-iw-d {\n        max-width: 280px!important;\n        img {\n            width: 100%;\n        }\n    }\n}\n",{"version":3,"sources":["gmap.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gmap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"map\"></div>\n</template>\n\n<style lang=\"scss\">\n    #map {\n        height: 70vh;\n        .gm-style .gm-style-iw-d {\n            max-width: 280px!important;\n            img {\n                width: 100%;\n            }\n        }\n    }\n</style>\n\n<script>\n    import google from \"google\"\n    export default {\n        name: \"googleMap\",\n        props: [\"map\"],\n        data() {\n            return {\n                mapInfo: null,\n                mapObj: null,\n                marker: null,\n                polygon: null,\n                markers: []\n\n            }\n        },\n        watch: {\n            map: function (newVal) {\n                console.log(newVal);\n                this.mapInfo = newVal;\n                this.initMap()\n            }\n        },\n        methods: {\n            addMarker(position, title, contentString) {\n                let infoWindow = new google.maps.InfoWindow({\n                    content:contentString\n                });\n                var marker = new google.maps.Marker({\n                    position: position,\n                    map: this.mapObj,\n                    animation: google.maps.Animation.DROP,\n                    title: title,\n                    icon: \"https://cdn.shopify.com/s/files/1/0703/1149/files/Location.png?807016\",\n                });\n                this.markers.push(marker);\n                marker.addListener('click', function () {\n                    infoWindow.open(this.mapObj, marker);\n                })\n            },\n            initMap(){\n                let coords = [];\n                for (let item of this.mapInfo[\"area\"]) {\n                    coords.push({lat: Number(item.split(\",\")[1]), lng: Number(item.split(\",\")[0]) })\n                }\n                console.log(this.mapInfo.lng);\n                this.mapObj = new google.maps.Map(document.getElementById('map'), {\n                    zoom: 15,\n                    center: {lng: Number(this.mapInfo.lng), lat: Number(this.mapInfo.lat)},\n                });\n                if (this.mapInfo.showMult) {\n                    this.mapInfo.vehicleInfo.map(item => {\n                        let position = {lat: item.lastLocationLat, lng: item.lastLocationLng};\n                        let title = `${item.year? item.year :'N/A'} ${item.make? item.make :'N/A'} ${item.model? item.model:'N/A'}`;\n                        let contentString = `<a href='/vehicle/detail/${item.vehicleId}'>\n                            <img style=\"background: #3a4149\" src=\"${item.photoPath ? item.photoPath : '/img/placeholder.5367544d.svg'}\" width=\"40%\">\n                            <h5 id=\"firstHeading\" class=\"firstHeading\">${item.year ? item.year :'N/A'} ${item.make ? item.make :'N/A'} ${item.model ? item.model:'N/A'}</h5>\n                            </a>`;\n                        this.addMarker(position, title, contentString);\n                    })\n                } else {\n                    this.marker = new google.maps.Marker({\n                        position: {lng: Number(this.mapInfo.lng), lat: Number(this.mapInfo.lat)},\n                        map: this.mapObj,\n                        icon: {\n                            url: \"https://cdn.shopify.com/s/files/1/0703/1149/files/Location.png?807016\",\n                            scaledSize: new google.maps.Size(30, 30)\n                        }\n                    });\n                }\n                this.polygon = new google.maps.Polygon({\n                    paths: coords,\n                    strokeColor: '#FF0000',\n                    strokeOpacity: 0.8,\n                    strokeWeight: 2,\n                    fillColor: '#FF0000',\n                    fillOpacity: 0.35\n                });\n                this.polygon.setMap(this.mapObj);\n                new google.maps.drawing.DrawingManager({\n                    drawingControl: true,\n                    drawingControlOptions: {\n                        position: google.maps.ControlPosition.TOP_CENTER,\n                        drawingModes: [\n                            google.maps.drawing.OverlayType.POLYGON\n                        ]\n                    },\n\n                    circleOptions: {\n                        fillColor: '#ffff00',\n                        fillOpacity: 1,\n                        strokeWeight: 5,\n                        clickable: false,\n                        editable: true,\n                        zIndex: 1\n                    },\n\n                    polygonOptions: {\n                        strokeColor: \"#FF0000\",\n                        strokeOpacity: 0.8,\n                        strokeWeight: 2,\n                        fillColor: \"#FF0000\",\n                        fillOpacity: 0.35,\n                        editable: true,\n                    }\n                });\n\n\n            }\n        }\n    }\n</script>\n"]}]}