{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/login/index.vue","mtime":1569392463000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport httpclient from '../../utils/httpclient';\nimport {saveTokenExpireAt, saveUserInfo,saveUserId} from '../../utils/token'\n\nexport default {\n  name: 'Login',\n  data(){\n    return {\n      username: '',\n      password: '',\n      errorUsername: '',\n      errorPass: ''\n    }\n  },\n  methods: {\n    handleLogin(){\n      this.errorUsername = \"\";\n      this.errorPass = \"\";\n      if (!this.username || this.username.indexOf(\"@\") < 1) {\n        this.errorUsername = \"is-invalid\";\n        return;\n      }\n      if (!this.password || this.password.length < 6) {\n        this.errorPass = \"is-invalid\";\n        return;\n      }\n      httpclient.post('/api/v1/login',{\n        username: this.username,\n        password: this.password\n      }).then((response)=>{\n        localStorage.setItem(\"user_info\", JSON.stringify(response.data.data.user));\n        localStorage.setItem(\"role\", response.data.data.user.roleCode);\n        this.$store.dispatch(\"user_info\", response.data.data.user);\n        saveTokenExpireAt(response.data.data.token.expireAt);\n        saveUserInfo(response.data.data.user.userEmail);\n        saveUserId(response.data.data.user.userId);\n        this.$router.push({ path: '/index'});\n      }).catch((err) => {\n          alert(\"Login Failed, Username or Password Incorrect!\")\n      })\n\n    }\n  }\n}\n",null]}