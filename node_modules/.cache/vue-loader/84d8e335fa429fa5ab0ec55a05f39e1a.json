{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/testReportList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/testReportList.vue","mtime":1577962918000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport httpClient from \"@/utils/httpclient\";\nimport { getDateString } from \"@/utils/date\";\n\nexport default {\n    name: \"shopManager\",\n    inject: ['reload'],\n    data () {\n        return {\n            tableFields: {\n                reportId: {\n                    label: this.$t('m.report_list.report_id'),\n                    class: \"text-center\"\n                },\n                orderId: {\n                    label:  this.$t('m.report_list.order_id'),\n                    class: \"text-center\"\n                },\n                userInfo: {\n                    label: this.$t('m.cloud.user_info'),\n                    class: \"text-center\"\n                },\n                vehicleInfo: {\n                    label: this.$t('m.cloud.vehicle_info'),\n                    class: \"text-center\"\n                },\n                testPoint: {\n                    label: this.$t('m.dashboard.test_point'),\n                    class: \"text-center\"\n                },\n                createTime: {\n                    label: this.$t('m.report_list.createTime'),\n                    class: \"text-center\"\n                },\n                question: {\n                    label: this.$t('m.cloud.check_question'),\n                    class: \"text-center\"\n                },\n                actions: {\n                    label: this.$t('m.vehicle.actions'),\n                    class: \"Actions\"\n                }\n            },\n            table: null,\n            currentPage: 1,\n            pageSize: 10,\n            total: 0,\n            totalPages:0,\n            searchText:'',\n        }\n    },\n    mounted() {\n        this.initData(this.currentPage);\n    },\n\n    methods: {\n        searchData(){\n            this.initData(1)\n        },\n        initData(page) {\n            httpClient.get(`/api/v1/clouddrive/report/reportlist?searchtext=${this.searchText}&pageNo=${page}&pageSize=${this.pageSize}`).then(response => {\n                if (response.data.code == 200) {\n                    this.total = response.data.data.rowCount;\n                    this.data = response.data.data;\n                    this.pageCount = response.data.data.totalPages;\n                    response.data.data.datas ?\n                        this.filterData(response.data.data) : '';\n                }\n            });\n        },\n        filterData(data) {\n            this.table = data.datas.map(item => {\n                return {\n                    id: item.orderId,\n                    reportId: item.testDriveId,\n                    orderId: item.orderServiceNum,\n                    userInfo: item.phone,\n                    userName: item.userName,\n                    vehicleId: item.vehicleId,\n                    phone: item.phone,\n                    vehicleInfo1: `${item.vehicleYear} ${item.vehicleMake} ${item.vehicleModel}`,\n                    vehicleInfo2: `${item.vehicleColor} ${item.vehicleTrim}`,\n                    vehicleInfo3: `${item.vehicleStockNum},<span style=\"border: 0px;padding: 2px;border-radius: 6px;background:#63c2de;color: white \">${item.vehiclePlate}</span>`,\n                    testPoint: item.parkingName,\n                    testPointId: item.parkingId,\n                    createTime: getDateString(item.reportFinishTime),\n                    question: item.questionnaireStatus,\n                    userId: item.userId,\n                    parkingId: item.parkingId\n                }\n            })\n        },\n        prevPage(){\n            this.initData(this.currentPage > 1  ? this.currentPage - 1 : 1)\n        },\n        nextPage(){\n            this.initData(this.currentPage >= this.pageCount  ? this.currentPage : this.currentPage + 1)\n        },\n        changePage(page) {\n            this.initData(page);\n        }\n    }\n}\n",{"version":3,"sources":["testReportList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"testReportList.vue","sourceRoot":"src/views/dashboard/testDrive","sourcesContent":["<template>\n    <div class=\"animated fadeIn shop\">\n        <b-card class=\"custom-header\">\n            <div slot=\"header\">\n                {{ $t('m.dashboard.report_manager') }}\n            </div>\n            <b-row>\n                <b-col class=\"col-5\">\n                    <b-form-group class=\"search-data\">\n                        <b-input-group>\n                            <b-form-input type=\"text\" :placeholder=\"$t('m.vehicle.search_text_report_list')\" v-model=\"searchText\"></b-form-input>\n                            <b-input-group-append>\n                                <b-button variant=\"primary\" @click=\"searchData()\"><i class=\"fa fa-search\"></i>{{ $t('m.vehicle.b_search') }}\n                                </b-button>\n                            </b-input-group-append>\n                        </b-input-group>\n                    </b-form-group>\n                </b-col>\n            </b-row>\n            <div class=\"content\">\n                <b-table class=\"mb-0 table-outline table-responsive-sm\" small striped responsive=\"sm\" :items=\"table\" hover :fields=\"tableFields\">\n                    <template slot=\"reportId\" slot-scope=\"data\">\n                        <span >{{ data.item.reportId }}</span>\n                    </template>\n                    <template slot=\"orderId\" slot-scope=\"data\">\n                        <span class=\"hot-link\" @click=\"$router.push('/test-drive/reservation-order/detail/' + data.item.id)\">{{ data.item.orderId }}</span>\n                    </template>\n                    <template slot=\"userInfo\" slot-scope=\"data\">\n                        <div @click=\"$router.push('/test-drive/test-user/detail/' + data.item.userId)\">\n                            <p class=\"hot-link\">{{ data.item.phone }}</p>\n                            <p class=\"hot-link\">{{ data.item.userName }}</p>\n                        </div>\n                    </template>\n                    <template slot=\"testPoint\" slot-scope=\"data\">\n                        <p class=\"hot-link\" @click=\"$router.push('/test-drive/test-point/detail/' + data.item.parkingId)\">{{ data.item.testPoint }}</p>\n                    </template>\n                    <template slot=\"vehicleInfo\" slot-scope=\"data\">\n                        <p class=\"hot-link\" @click=\"$router.push('/test-drive/test-vehicle/detail/' + data.item.vehicleId)\">{{ data.item.vehicleInfo1 }}</p>\n                        <p class=\"space0\">{{ data.item.vehicleInfo2 }}</p>\n                        <p class=\"space0\" v-html=\"data.item.vehicleInfo3\"></p>\n                    </template>\n                    <template slot=\"question\" slot-scope=\"data\">\n                        <template v-if=\"data.item.question == 1\">\n                            <span class=\"badge badge-success\">{{ $t('m.cloud.complete') }}</span>\n                        </template>\n                        <template v-else>\n                            <span class=\"badge badge-secondary\">{{ $t('m.cloud.no_complete') }}</span>\n                        </template>\n                    </template>\n                    <template slot=\"actions\" slot-scope=\"data\">\n                        <div class=\"btn btn-sm btn-info\" v-b-tooltip.hover :title=\"$t('m.vehicle_bind.detail')\" style=\"color: #ffffff;margin-right: 4px;\"\n                             @click=\"$router.push('/test-drive/test-report/detail/' + data.item.id)\"><i class=\"fa fa-eye\"></i></div>\n                        <div v-if=\"data.item.status == 10\" class=\"btn btn-sm btn-info\" style=\"color: #ffffff;\"\n                             @click=\"openOrderTip(data.item.id, data.item.orderId)\"><i class=\"fa fa-rotate-left\"></i></div>\n                    </template>\n                </b-table>\n            </div>\n        </b-card>\n        <b-row>\n            <b-col sm=\"4\" lg=\"4\">\n                <div class=\"dataTables_info\" id=\"DataTables0\" role=\"status\" aria-live=\"polite\">\n                    {{ $t('m.common.show') }} {{10 * (currentPage - 1) + 1 }} {{ $t('m.common.to') }} {{currentPage === totalPages? total :currentPage * 10 }} {{ $t('m.common.of') }} {{total}} {{ $t('m.common.entries') }}\n                </div>\n            </b-col>\n            <b-col sm=\"8\" lg=\"8\">\n                <b-pagination align=\"right\" :total-rows=\"total\" v-model=\"currentPage\" :per-page=\"10\" @input=\" changePage(currentPage)\"></b-pagination>\n            </b-col>\n        </b-row>\n    </div>\n</template>\n\n<script>\n    import httpClient from \"@/utils/httpclient\";\n    import { getDateString } from \"@/utils/date\";\n\n    export default {\n        name: \"shopManager\",\n        inject: ['reload'],\n        data () {\n            return {\n                tableFields: {\n                    reportId: {\n                        label: this.$t('m.report_list.report_id'),\n                        class: \"text-center\"\n                    },\n                    orderId: {\n                        label:  this.$t('m.report_list.order_id'),\n                        class: \"text-center\"\n                    },\n                    userInfo: {\n                        label: this.$t('m.cloud.user_info'),\n                        class: \"text-center\"\n                    },\n                    vehicleInfo: {\n                        label: this.$t('m.cloud.vehicle_info'),\n                        class: \"text-center\"\n                    },\n                    testPoint: {\n                        label: this.$t('m.dashboard.test_point'),\n                        class: \"text-center\"\n                    },\n                    createTime: {\n                        label: this.$t('m.report_list.createTime'),\n                        class: \"text-center\"\n                    },\n                    question: {\n                        label: this.$t('m.cloud.check_question'),\n                        class: \"text-center\"\n                    },\n                    actions: {\n                        label: this.$t('m.vehicle.actions'),\n                        class: \"Actions\"\n                    }\n                },\n                table: null,\n                currentPage: 1,\n                pageSize: 10,\n                total: 0,\n                totalPages:0,\n                searchText:'',\n            }\n        },\n        mounted() {\n            this.initData(this.currentPage);\n        },\n\n        methods: {\n            searchData(){\n                this.initData(1)\n            },\n            initData(page) {\n                httpClient.get(`/api/v1/clouddrive/report/reportlist?searchtext=${this.searchText}&pageNo=${page}&pageSize=${this.pageSize}`).then(response => {\n                    if (response.data.code == 200) {\n                        this.total = response.data.data.rowCount;\n                        this.data = response.data.data;\n                        this.pageCount = response.data.data.totalPages;\n                        response.data.data.datas ?\n                            this.filterData(response.data.data) : '';\n                    }\n                });\n            },\n            filterData(data) {\n                this.table = data.datas.map(item => {\n                    return {\n                        id: item.orderId,\n                        reportId: item.testDriveId,\n                        orderId: item.orderServiceNum,\n                        userInfo: item.phone,\n                        userName: item.userName,\n                        vehicleId: item.vehicleId,\n                        phone: item.phone,\n                        vehicleInfo1: `${item.vehicleYear} ${item.vehicleMake} ${item.vehicleModel}`,\n                        vehicleInfo2: `${item.vehicleColor} ${item.vehicleTrim}`,\n                        vehicleInfo3: `${item.vehicleStockNum},<span style=\"border: 0px;padding: 2px;border-radius: 6px;background:#63c2de;color: white \">${item.vehiclePlate}</span>`,\n                        testPoint: item.parkingName,\n                        testPointId: item.parkingId,\n                        createTime: getDateString(item.reportFinishTime),\n                        question: item.questionnaireStatus,\n                        userId: item.userId,\n                        parkingId: item.parkingId\n                    }\n                })\n            },\n            prevPage(){\n                this.initData(this.currentPage > 1  ? this.currentPage - 1 : 1)\n            },\n            nextPage(){\n                this.initData(this.currentPage >= this.pageCount  ? this.currentPage : this.currentPage + 1)\n            },\n            changePage(page) {\n                this.initData(page);\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .hot-link {\n        color: #63c2de;\n        text-decoration: underline;\n        margin-bottom: 4px;\n        font-weight: bolder;\n        cursor: pointer;\n    }\n    .space0 {\n        margin-bottom: 4px;\n    }\n    .plat-info {\n        border: 1px solid grey;\n        padding: 2px;\n    }\n    .has-complete {\n        color: rgb(255, 255, 255);\n        border-radius: 6px;\n        background: rgb(77, 189, 116);\n        padding: 4px;\n    }\n    .no-complete {\n        background: rgb(209, 219, 225);\n        border-radius: 6px;\n        padding: 4px;\n    }\n    .link-noUnderline {\n        margin-bottom: 4px;\n    }\n</style>\n"]}]}