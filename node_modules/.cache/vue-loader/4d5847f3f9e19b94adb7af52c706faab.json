{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/reseOrder.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/reseOrder.vue","mtime":1570874835000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport httpClient from \"@/utils/httpclient\";\nimport {getDateString} from \"@/utils/date\";\nexport default {\n    name: \"shopManager\",\n    inject: ['reload'],\n    data () {\n        return {\n            tableFields: {\n                orderId: {\n                    label: this.$t('m.cloud.order_id'),\n                    class: \"text-center\"\n                },\n                userInfo: {\n                    label: this.$t('m.cloud.user_info'),\n                    class: \"text-center\"\n                },\n                vehicleInfo: {\n                    label: this.$t('m.cloud.vehicle_info'),\n                    class: \"text-center\"\n                },\n                testInfo: {\n                    label: this.$t('m.dashboard.test_point'),\n                    class: \"text-center\"\n                },\n                pointTime: {\n                    label: this.$t('m.cloud.rese_test_drive'),\n                    class: \"text-center\"\n                },\n                status: {\n                    label: this.$t('m.cloud.status'),\n                    class: \"text-center\"\n                },\n                question: {\n                    label: this.$t('m.cloud.check_question'),\n                    class: \"text-center\"\n                },\n                actions: {\n                    label: this.$t('m.vehicle.actions'),\n                    class: \"Actions\"\n                }\n            },\n            table: null,\n            currentPage: 1,\n            pageSize: 10,\n            total: 0,\n            totalPages:0,\n            showTip: false,\n            curName: '',\n            statusList: [],\n            cancelTip: false,\n            curOrder: null,\n            curOrderNum: null,\n            tipStatus: false,\n            canStatus: {\n                title: \"\",\n                content: \"\"\n            },\n            curStatus: \"all\"\n        }\n    },\n    mounted() {\n        httpClient.get('/api/v1/clouddrive/order/orderstatuslist').then(res => {\n            if (res.data.code == 200) {\n                this.statusList = res.data.data.statusList;\n                this.statusList.map(item => {\n                    switch (item.orderCode) {\n                        case 10:\n                            item['content'] = this.$t('m.cloud.wait_pick_up');\n                            break;\n                        case 20:\n                            item['content'] = this.$t('m.cloud.wait_return');\n                            break;\n                        case 30:\n                            item['content'] = this.$t('m.cloud.returned_vehicle');\n                            break;\n                        case 40:\n                            item['content'] = this.$t('m.cloud.complete');\n                            break;\n                        case 50:\n                            item['content'] = this.$t('m.cloud.canceled');\n                            break;\n                    }\n                });\n            }\n        });\n        this.initData(this.currentPage);\n    },\n    methods: {\n        searchData() {\n            this.currentPage = 1;\n            this.initData(1);\n        },\n        initData(page) {\n            let orderStatus = !this.curStatus || this.curStatus == 'all' ? '' : `&orderStatus=${this.curStatus}`;\n            httpClient.get(`/api/v1/clouddrive/order/pagelist?pageNo=${page}&pageSize=${this.pageSize}${orderStatus}`).then(response => {\n                if (response.data.code == 200) {\n                    this.total = response.data.data.rowCount;\n                    this.data = response.data.data;\n                    this.pageCount = response.data.data.totalPages;\n                    this.filterData();\n                }\n            });\n        },\n        acceptVehicle(id) {\n            httpClient.get('/api/v1/clouddrive/order/check?orderId=' + id).then(res => {\n                if (res.data.code == 200 && res.data.data.result) {\n                    window.location.reload();\n                } else {\n                    alert(\"车辆异常\");\n                }\n            });\n        },\n        filterData() {\n            this.table = this.data.datas.map((item) => {\n                return {\n                    orderId: item.orderServiceNum,\n                    id: item.orderId,\n                    username: item.userName,\n                    phone: item.phone,\n                    year: item.vehicleYear,\n                    make: item.vehicleMake,\n                    model: item.vehicleModel,\n                    color: item.vehicleColor,\n                    alias: item.vehicleAlias,\n                    trim: item.vehicleTrim,\n                    plat: item.vehiclePlate,\n                    vehicleId: item.vehicleId,\n                    userId: item.userId,\n                    num: item.vehiclePlate, // 库存编号\n                    testInfo: item.parkingName,\n                    pointTime: getDateString(item.appointmentStartTime) + \"~\" + getDateString(item.appointmentEndTime).split(\"  \")[1],\n                    status: item.orderStatus,\n                    question: item.questionnaireStatus\n                }\n            });\n        },\n        openOrderTip(id, orderId) {\n            this.curOrder = id;\n            this.curOrderNum = orderId;\n            this.cancelTip = true;\n        },\n        cancelOrder() {\n            httpClient.post(`/api/v1/clouddrive/order/cancel`, {\n                orderId: this.curOrder\n            }).then(response => {\n                if (response.data.code == 200 && response.data.data.result) {\n                    this.canStatus = {\n                        title: this.$t('m.cloud.can_order_suc'),\n                        content: this.$t('m.cloud.can_order_suc_c', {order: this.curOrderNum})\n                    };\n                    this.reload();\n                } else {\n                    this.canStatus = {\n                        title: this.$t('m.cloud.can_order_fail'),\n                        content: this.$t('m.cloud.can_order_fail_c')\n                    }\n                }\n                this.tipStatus = true;\n            })\n        },\n        prevPage(){\n            this.initData(this.currentPage > 1  ? this.currentPage - 1 : 1)\n        },\n        nextPage(){\n            this.initData(this.currentPage >= this.pageCount  ? this.currentPage : this.currentPage + 1)\n        },\n        changePage(page) {\n            this.initData(page);\n        }\n    }\n}\n",null]}