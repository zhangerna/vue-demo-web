{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/alerts.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/alerts.vue","mtime":1560922526000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.card-header span{\n    margin-left: 10px;\n}\n.alerts {\n    .bv-d-xs-down-none {\n        display: none;\n    }\n    .modal {\n        .modal-body button {\n            color: #fff;\n            background-color: #20a8d8;\n            border-color: #20a8d8;\n        }\n    }\n}\n",{"version":3,"sources":["alerts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"alerts.vue","sourceRoot":"src/views/dashboard/dashboardMain","sourcesContent":["<template>\n    <div class=\"animated fadeIn alerts\">\n        <b-card>\n            <div slot=\"header\">\n                <i class='nav-icon cui cui-bell'></i>\n                <span>Alerts</span>\n            </div>\n            <b-table class=\"mb-0 table-outline\" small striped responsive=\"sm\" :items=\"table\" hover :fields=\"tableFields\" head-variant=\"light\">\n                <template slot=\"status\" slot-scope=\"data\">\n                    <span class=\"badge badge-pill\" :class=\"data.item.status == 1 ? 'badge-success' : 'badge-danger'\">\n                        {{ data.item.status == 1 ? 'Solved' : 'Unsolved' }}\n                    </span>\n                </template>\n                <template slot=\"action\" slot-scope=\"data\">\n                    <div class=\"btn btn-sm btn-info m-1\" @click=\"$router.push('/alerts/detail/'+data.item.id)\">\n                        <i class=\"fa fa-eye\"></i>\n                    </div>\n                    <template v-if=\"data.item.status == 1\">\n                        <div class=\"btn btn-sm btn-update btn-secondary\" disabled>\n                            <i class=\"cui fa fa-wrench\"></i>\n                        </div>\n                    </template>\n                    <template v-else>\n                        <div class=\"btn btn-sm btn-update btn-success\" @click=\"updateVehicle(data.item.id)\">\n                            <i class=\"cui fa fa-wrench\"></i>\n                        </div>\n                    </template>\n                </template>\n            </b-table>\n\n            <b-row v-if=\"total > 0\">\n                <b-col sm=\"4\" lg=\"4\">\n                    <div class=\"dataTables_info\" id=\"DataTables0\" role=\"status\" aria-live=\"polite\">\n                        Showing {{10 * (currentPage - 1) + 1 }} to {{currentPage === pageCount? total :currentPage * 10 }} of {{total}} entries\n                    </div>\n                </b-col>\n                <b-col sm=\"8\" lg=\"8\">\n                    <b-pagination align=\"right\" :total-rows=\"total\" v-model=\"currentPage\" :per-page=\"pageSize\" @input=\" changePage(currentPage)\"></b-pagination>\n                </b-col>\n\n            </b-row>\n\n\n        </b-card>\n        <b-modal ref=\"my-modal\" hide-footer title=\"Success\" v-model=\"show\" @ok=\"show = false\">\n            <div>Update Success! </div>\n            <b-button class=\"btn btn-primary\" style=\"float: right\" @click=\"reload()\">Ok</b-button>\n        </b-modal>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    .card-header span{\n        margin-left: 10px;\n    }\n    .alerts {\n        .bv-d-xs-down-none {\n            display: none;\n        }\n        .modal {\n            .modal-body button {\n                color: #fff;\n                background-color: #20a8d8;\n                border-color: #20a8d8;\n            }\n        }\n    }\n</style>\n\n<script>\n    import httpclient from '@/utils/httpclient';\n    import { getDateString } from \"../../../utils/date\";\n\n    export default {\n        name: \"alerts\",\n        data() {\n            return {\n                currentPage: 1,\n                pageSize: 10,\n                total: 0,\n                show: false,\n                tableFields: {\n                    alertType: {\n                        label: \"Alert Type\",\n                        class: \"text-center\"\n                    },\n                    vehicle: {\n                        label: \"Vehicle\",\n                        class: \"text-center\"\n                    },\n                    stockNo: {\n                        label: \"Stock NO.\",\n                        class: \"text-center\"\n                    },\n                    time: {\n                        label: \"Time\",\n                        class: \"text-center\"\n                    },\n                    status: {\n                        label: \"Status\",\n                        class: \"text-center\"\n                    },\n                    action: {\n                        label: \"Actions\",\n                        class: \"text-center\"\n                    }\n                },\n                data: null,\n                table: null,\n                pageCount: 0,\n                updateInfo: ''\n            }\n        },\n        mounted(){\n            this.axiosData(this.currentPage);\n        },\n        methods: {\n            axiosData(pageNo) {\n                httpclient.post(`/api/v1/alert/list?pageNo=${pageNo}&pageSize=10`)\n                    .then(response => {\n                        console.log(response);\n                        this.currentPage = response.data.data.pageNo;\n                        this.total = response.data.data.rowCount;\n                        this.data = response.data.data;\n                        this.pageCount = response.data.data.totalPages;\n                        this.filterData();\n                    })\n            },\n            filterData() {\n                this.table = this.data.datas.map((item) => {\n                   let year = item.year ? item.year : 'N/A';\n                   let make = item.make ? item.make : 'N/A';\n                   let model = item.model ? item.model : 'N/A';\n                    return {\n                        \"alertType\" : item.alertTypeName,\n                        \"vehicle\": `${year} ${make} ${model}`,\n                        \"stockNo\": item.stockNum ? item.stockNum : 'N/A',\n                        \"time\": item.createTime ? getDateString(item.createTime) : 'N/A',\n                        \"status\": item.alertStatus,\n                        'id': item.id\n                    }\n                });\n            },\n            changeFL(type) {\n                this.axiosData(type == 'f' ? 1 : this.pageCount)\n            },\n            prevPage(){\n                this.axiosData(this.currentPage > 1  ? this.currentPage - 1 : 1)\n            },\n            nextPage(){\n                this.axiosData(this.currentPage >= this.pageCount  ? this.currentPage : this.currentPage + 1)\n            },\n            changePage(page) {\n                console.log(page);\n                this.axiosData(page);\n            },\n            reload() {\n                window.location.reload();\n            },\n            updateVehicle(id) {\n                let self = this;\n                httpclient.post('/api/v1/alert/update/status', {\n                    alertId: id\n                }).then(response => {\n                    if (response.data.code == 200) {\n                        self.updateInfo = 'The alert status has been modified';\n                        self.show = true;\n                    } else {\n                        self.updateInfo = 'update error';\n                        self.show = true;\n                    }\n                }).catch(error => {\n                })\n            }\n        }\n    }\n</script>"]}]}