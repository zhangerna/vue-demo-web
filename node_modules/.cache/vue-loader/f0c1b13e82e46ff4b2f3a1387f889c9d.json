{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/lots.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/lots.vue","mtime":1560408995000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport httpClient from \"@/utils/httpclient\";\nimport googleMap from '@/components/googleMap';\nimport model from \"@/components/model\";\nexport default {\n    name: 'lots',\n    inject: ['reload'],\n    components: {\n        googleMap,\n        model,\n    },\n    data() {\n        return {\n            currentPage: 1,\n            pageSize: 10,\n            table: null,\n            curDel: null,\n            show: false,\n            btnGroup: {\n                btnFirst:'Cancel',\n                btnSecond: 'OK'\n            },\n            tableFields: {\n                name: {\n                    label: \"Lot Name\",\n                    class: \"text-center\"\n                },\n                address: {\n                    label: \"Lot Address\",\n                    class: \"text-center\"\n                },\n                dealership: {\n                    label: \"Dealership\",\n                    class: \"text-center\"\n                },\n                vehicles: {\n                    label: \"All Vehicles\",\n                    class: \"text-center\"\n                },\n                battery: {\n                    label: \"Low Battery\",\n                    class: \"text-center\"\n                },\n                offline: {\n                    label: \"Offline\",\n                    class: \"text-center\"\n                },\n                actions: {\n                    label: \"Actions\",\n                    class: \"text-center\"\n                }\n            },\n            total: 0,\n            totalPages:0,\n            tipTitle: '',\n            showMap: false,\n            map: {}\n\n        }\n    },\n    mounted() {\n        this.initData(this.currentPage);\n    },\n    methods: {\n        initData(page) {\n            httpClient.get(`/api/v1/lot/page?pageNo=${page}`).then(response => {\n                this.currentPage = response.data.data.pageNo;\n                this.total = response.data.data.rowCount;\n                this.filterData(response.data.data);\n                this.totalPages = response.data.data.totalPages\n            })\n        },\n        filterData(data){\n            this.table = data.datas.map(item => {\n                return {\n                    name: item.parkingName,\n                    address: item.address,\n                    dealership: item.storeName,\n                    vehicles: item.vehicleFilter.num,\n                    battery: item.lowBatteryFilter.num,\n                    offline: item.offLineFilter.num,\n                    id: item.id,\n                }\n            });\n        },\n        delId(id) {\n            this.curDel = id;\n            this.show = true;\n        },\n        hideTip(type) {\n            if (type) {\n                httpClient.post('/api/v1/lot/delete', {\n                    id: this.curDel\n                }).then(response => {\n                    this.reload();\n                })\n            }\n            this.show = false;\n        },\n        linkVehicles(id) {\n            let filter = `[{\"key\":\"parking\",\"value\":[\"${id}\"]}]`;\n            this.$router.push({name: 'vehicle', query: {filters: filter}});\n        },\n        linkBattery(id) {\n            this.$router.push({name: 'vehicle', query: {\n                filters: `[{\"key\":\"parking\",\"value\":[\"${id}\"]},{\"key\":\"battery\",\"value\":[\"1\"]}]`\n            }});\n        },\n        linkSecondary(id) {\n            this.$router.push({name: 'vehicle', query: {\n                filters: `[{\"key\":\"parking\",\"value\":[\"${id}\"]},{\"key\":\"online\",\"value\":[\"2\"]}]`\n            }});\n        },\n        prevPage(){\n            this.initData(this.currentPage > 1  ? this.currentPage - 1 : 1)\n        },\n        nextPage(){\n            this.initData(this.currentPage >= this.pageCount  ? this.currentPage : this.currentPage + 1)\n        },\n        changePage(page) {\n            this.initData(page);\n        },\n        getVehicleList(id, area, centerCoor, packingName) {\n            httpClient.get('/api/v1/inlotvehiclelist', {\n                params: {\n                    parkingId: id\n                }\n            }).then(response => {\n                let latlng = centerCoor.split(\" \");\n                this.map = {\n                    lat: Number(latlng[1]),\n                    lng: Number(latlng[0]),\n                    area: area,\n                    vehicleInfo: response.data.data,\n                    showMult: true\n                };\n                this.tipTitle = packingName;\n                this.showMap = true;\n            })\n        },\n        mapInfo(id) {\n            httpClient.get(\"/api/v1/lot/detail\", {\n                params: {\n                    id: id\n                }\n            }).then(response => {\n                let data = response.data.data;\n                this.getVehicleList(id, data.areaCoordinate, data.centerCoordinate, data.parkingName);\n            })\n        }\n    }\n}\n",{"version":3,"sources":["lots.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"lots.vue","sourceRoot":"src/views/dashboard/dashboardMain","sourcesContent":["<template>\n    <div class=\"animated fadeIn lots\">\n        <b-card>\n            <div slot=\"header\">\n                <i class=\"nav-icon cui-account-logout\"></i>\n                Lots\n                <button class=\"btn btn-sm btn-primary add-lot\" @click=\"$router.push('/add-lots')\">\n                    <i class=\"fa fa-plus-square\"></i>\n                    Add a New Lot\n                </button>\n            </div>\n            <div class=\"content\">\n                <b-table class=\"mb-0 table-outline\" small striped responsive=\"sm\" :items=\"table\" hover :fields=\"tableFields\">\n                    <template slot=\"vehicles\" slot-scope=\"data\">\n                        <span class=\"btn btn-sm btn-block btn-outline-success\" @click=\"linkVehicles(data.item.id)\">{{ data.item.vehicles }}</span>\n                    </template>\n                    <template slot=\"battery\" slot-scope=\"data\">\n                        <span class=\"btn btn-sm btn-block btn-outline-danger\" @click=\"linkBattery(data.item.id)\">{{ data.item.battery }}</span>\n                    </template>\n                    <template slot=\"offline\" slot-scope=\"data\">\n                        <span class=\"btn btn-sm btn-block btn-outline-secondary\" @click=\"linkSecondary(data.item.id)\">{{ data.item.offline }}</span>\n                    </template>\n                    <template slot=\"actions\" slot-scope=\"data\">\n                        <button class=\"btn btn-sm btn-success\">\n                            <i class=\"cui icon-map\" @click=\"mapInfo(data.item.id)\"></i>\n                        </button>\n                        <button class=\"btn btn-sm btn-info  m-1\" @click=\"$router.push('/lots-edit/' + data.item.id)\">\n                            <i class=\"fa fa-edit\"></i>\n                        </button>\n                        <button class=\"btn btn-sm btn-danger btn-del\" @click=\"delId(data.item.id)\">\n                            <i class=\"cui cui-trash\"></i>\n                        </button>\n                    </template>\n                </b-table>\n            </div>\n        </b-card>\n\n        <b-row v-if=\"total > 0\">\n            <b-col sm=\"4\" lg=\"4\">\n                <div class=\"dataTables_info\" id=\"DataTables0\" role=\"status\" aria-live=\"polite\">\n                    Showing {{10 * (currentPage - 1) + 1 }} to {{currentPage === totalPages? total :currentPage * 10 }} of {{total}} entries\n                </div>\n            </b-col>\n            <b-col sm=\"8\" lg=\"8\">\n                <b-pagination align=\"right\" :total-rows=\"total\" v-model=\"currentPage\" :per-page=\"pageSize\" @input=\" changePage(currentPage)\"></b-pagination>\n            </b-col>\n        </b-row>\n\n        <b-modal ref=\"my-modal\" :title=\"tipTitle\" v-model=\"showMap\" @ok=\"showMap = false\">\n            <google-map\n                    :map=\"map\"\n            ></google-map>\n        </b-modal>\n        <model\n               :show=\"show\"\n               :title=\"'Warn'\"\n               :content=\"'Are you sure to delete the lot?'\"\n               :buttonText=\"btnGroup\"\n               @closeRemindBox=\"hideTip\"\n        ></model>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    .card {\n        width: 100%;\n    }\n    .lots {\n        .card-header {\n            .add-lot {\n                float: right;\n            }\n        }\n        th, td {\n            height: 44px;\n            line-height: 44px;\n        }\n    }\n</style>\n\n<script>\n    import httpClient from \"@/utils/httpclient\";\n    import googleMap from '@/components/googleMap';\n    import model from \"@/components/model\";\n    export default {\n        name: 'lots',\n        inject: ['reload'],\n        components: {\n            googleMap,\n            model,\n        },\n        data() {\n            return {\n                currentPage: 1,\n                pageSize: 10,\n                table: null,\n                curDel: null,\n                show: false,\n                btnGroup: {\n                    btnFirst:'Cancel',\n                    btnSecond: 'OK'\n                },\n                tableFields: {\n                    name: {\n                        label: \"Lot Name\",\n                        class: \"text-center\"\n                    },\n                    address: {\n                        label: \"Lot Address\",\n                        class: \"text-center\"\n                    },\n                    dealership: {\n                        label: \"Dealership\",\n                        class: \"text-center\"\n                    },\n                    vehicles: {\n                        label: \"All Vehicles\",\n                        class: \"text-center\"\n                    },\n                    battery: {\n                        label: \"Low Battery\",\n                        class: \"text-center\"\n                    },\n                    offline: {\n                        label: \"Offline\",\n                        class: \"text-center\"\n                    },\n                    actions: {\n                        label: \"Actions\",\n                        class: \"text-center\"\n                    }\n                },\n                total: 0,\n                totalPages:0,\n                tipTitle: '',\n                showMap: false,\n                map: {}\n\n            }\n        },\n        mounted() {\n            this.initData(this.currentPage);\n        },\n        methods: {\n            initData(page) {\n                httpClient.get(`/api/v1/lot/page?pageNo=${page}`).then(response => {\n                    this.currentPage = response.data.data.pageNo;\n                    this.total = response.data.data.rowCount;\n                    this.filterData(response.data.data);\n                    this.totalPages = response.data.data.totalPages\n                })\n            },\n            filterData(data){\n                this.table = data.datas.map(item => {\n                    return {\n                        name: item.parkingName,\n                        address: item.address,\n                        dealership: item.storeName,\n                        vehicles: item.vehicleFilter.num,\n                        battery: item.lowBatteryFilter.num,\n                        offline: item.offLineFilter.num,\n                        id: item.id,\n                    }\n                });\n            },\n            delId(id) {\n                this.curDel = id;\n                this.show = true;\n            },\n            hideTip(type) {\n                if (type) {\n                    httpClient.post('/api/v1/lot/delete', {\n                        id: this.curDel\n                    }).then(response => {\n                        this.reload();\n                    })\n                }\n                this.show = false;\n            },\n            linkVehicles(id) {\n                let filter = `[{\"key\":\"parking\",\"value\":[\"${id}\"]}]`;\n                this.$router.push({name: 'vehicle', query: {filters: filter}});\n            },\n            linkBattery(id) {\n                this.$router.push({name: 'vehicle', query: {\n                    filters: `[{\"key\":\"parking\",\"value\":[\"${id}\"]},{\"key\":\"battery\",\"value\":[\"1\"]}]`\n                }});\n            },\n            linkSecondary(id) {\n                this.$router.push({name: 'vehicle', query: {\n                    filters: `[{\"key\":\"parking\",\"value\":[\"${id}\"]},{\"key\":\"online\",\"value\":[\"2\"]}]`\n                }});\n            },\n            prevPage(){\n                this.initData(this.currentPage > 1  ? this.currentPage - 1 : 1)\n            },\n            nextPage(){\n                this.initData(this.currentPage >= this.pageCount  ? this.currentPage : this.currentPage + 1)\n            },\n            changePage(page) {\n                this.initData(page);\n            },\n            getVehicleList(id, area, centerCoor, packingName) {\n                httpClient.get('/api/v1/inlotvehiclelist', {\n                    params: {\n                        parkingId: id\n                    }\n                }).then(response => {\n                    let latlng = centerCoor.split(\" \");\n                    this.map = {\n                        lat: Number(latlng[1]),\n                        lng: Number(latlng[0]),\n                        area: area,\n                        vehicleInfo: response.data.data,\n                        showMult: true\n                    };\n                    this.tipTitle = packingName;\n                    this.showMap = true;\n                })\n            },\n            mapInfo(id) {\n                httpClient.get(\"/api/v1/lot/detail\", {\n                    params: {\n                        id: id\n                    }\n                }).then(response => {\n                    let data = response.data.data;\n                    this.getVehicleList(id, data.areaCoordinate, data.centerCoordinate, data.parkingName);\n                })\n            }\n        }\n    }\n</script>"]}]}