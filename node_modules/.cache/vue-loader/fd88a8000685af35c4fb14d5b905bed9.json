{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/vehicleDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/vehicleDetail.vue","mtime":1561011700000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport httpclient from '@/utils/httpclient';\nimport { getDateString, getDaysBetweenDate } from \"@/utils/date\";\nimport googleMap from '@/components/googleMap';\n\nexport default {\n    name: \"vehicleDetail\",\n    components: {\n      googleMap\n    },\n    data() {\n        return {\n            data: {},\n            showMap: false,\n            map: null,\n            tipTitle: '',\n            fields: {\n                operation: {\n                    key: 'operationType',\n                    label: 'Operation'\n                },\n                vehicle: {\n                    key: 'vehicle',\n                    label: 'Operator'\n                },\n                time: {\n                    key: 'time',\n                    label: 'Time'\n                },\n            },\n            items:[],\n            totalPages:null,\n            currentPage:null,\n            perPage:null,\n            rows:null,\n        }\n    },\n    mounted() {\n        let self = this;\n        httpclient.get(\"/api/v1/vehicle/detail/id?vehicleId=\" + this.$route.params.id,{}).then((response) => {\n            self.data = response.data.data;\n            let year = self.data.year ? self.data.year : 'N/A';\n            let make = self.data.make ? self.data.make : 'N/A';\n            let model = self.data.model ? self.data.model : 'N/A';\n            let info = (year == 'N/A' && make == 'N/A' && model == 'N/A') ? 'N/A' : year + ' ' + make + ' ' + model;\n            self.tipTitle = info;\n            self.map = {\n                lat: self.data.lastLocationLat ? self.data.lastLocationLat : 0,\n                lng: self.data.lastLocationLng ? self.data.lastLocationLng : 0,\n                area: self.data.areaCoordinates ? self.data.areaCoordinates : [],\n                vehicleInfo: info\n            }\n        }).catch((err) => {\n            alert(err)\n        });\n\n        this.getVehicleOperatorList(1)\n\n    },\n    methods: {\n        showMapTip() {\n            if (this.map.lat || this.map.area.length > 0) {\n                this.showMap = true;\n            }\n        },\n        getDateString(data) {\n            return getDateString(data)\n        },\n        getDaysBetweenDate(data, time) {\n            return getDaysBetweenDate(data, time)\n        },\n        getVehicleOperatorList(page){\n            let myVehicleId = this.$route.params.id;\n            let myLink = '/api/v1/operationlog/listbyvehicleid?pageNo='+page+'&vehicleId='+myVehicleId;\n            httpclient.get(myLink).then((res)=>{\n                let myData = res.data.data.datas;\n                this.items = myData;\n                this.currentPage = res.data.data.pageNo;\n                this.perPage = res.data.data.pageSize;\n                this.totalPages = res.data.data.totalPages;\n                this.rows = res.data.data.rowCount;\n                let myArr = [];\n                myData.map((item, i) => {\n                    myArr.push({\n                        operationType: item.operationType,\n                        operator: item.userName,\n                        time: this.getDateString(item.createTime),\n                        userId:item.userId\n                    });\n                });\n                this.items = myArr;\n            })\n        },\n        turnToPage(p) {\n          this.getVehicleOperatorList(p ? p : 1);\n        },\n        changeFL(m) {\n          if (m === 'last') {\n            this.getVehicleOperatorList(this.totalPages);\n          } else if (m === 'first') {\n            this.getVehicleOperatorList(1);\n          }\n        },\n        nextPage() {\n          this.getVehicleOperatorList(this.currentPage + 1);\n        },\n        prevPage() {\n          this.getVehicleOperatorList(this.currentPage - 1);\n        },\n    }\n}\n",{"version":3,"sources":["vehicleDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vehicleDetail.vue","sourceRoot":"src/views/dashboard/dashboardMain","sourcesContent":["<template>\n    <div class=\"animated fadeIn\">\n        <div class=\"text-center\">\n            <img :src=\"data.photoPath \" style=\"border-radius: 5px 5px 5px 5px;box-shadow: 0px 0px 4px 1px #000;margin-bottom: 10px;\" width=\"40%\">\n        </div>\n        <b-card header=\"Vehicle Detail\">\n            <b-row>\n                <b-col sm=\"12\" lg=\"12\" class=\"title\">\n                    {{ data.year && data.year != 'null' ? data.year : \"N/A\" }} {{ data.make && data.make != 'null' ? data.make : 'N/A' }} {{ data.model && data.model != 'null' ? data.model : 'N/A' }}\n                </b-col>\n            </b-row>\n            <b-row>\n                <b-col sm=\"4\" lg=\"4\">\n                    Last Location:\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\">\n                    {{ data.lastLocation ? data.lastLocation : 'N/A' }}\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\" class=\"text-right\">\n                    <i class=\"btn btn-sm btn-ghost-info cui cui-location-pin btn-success\" @click=\"showMapTip()\"></i>\n                </b-col>\n            </b-row>\n            <b-row>\n                <b-col sm=\"4\" lg=\"4\">\n                    Last Update:\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\">\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\" class=\"text-right\">\n                    {{ data.lastUpdateTime ? getDateString(data.lastUpdateTime ) : 'N/A' }}\n                </b-col>\n            </b-row>\n            <b-row>\n                <b-col sm=\"4\" lg=\"4\">\n                    Lot\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\">\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\" class=\"text-right\">\n                    {{ data.parkingLot ? data.parkingLot : 'N/A' }}\n                </b-col>\n            </b-row>\n            <b-row>\n                <b-col sm=\"12\" lg=\"12\">\n                    <span class=\"badge badge-pill mx-2\" :class=\"data.adapter == 'Online' ? 'badge-success' : 'badge-secondary'\">{{ data.adapter }}</span>\n                    <span class=\"mx-2 badge-success  badge-pill currentVoltage\">{{ data.currentVoltage }} V</span>\n                </b-col>\n            </b-row>\n            <b-row>\n                <b-col sm=\"12\" lg=\"12\">\n                    Device IMEI: {{ data.deviceMac && data.deviceMac != 'null' ? data.deviceMac : \"N/A\" }}  Vehicle VIN: {{ data.vin }}\n                </b-col>\n            </b-row>\n            <b-row>\n                <b-col sm=\"4\" lg=\"4\">\n                    Trim:  {{ data.trim ? data.trim : 'N/A' }}\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\">\n                    Engine: {{ data.engineType ? data.engineType : 'N/A' }}\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\" class=\"text-right\">\n                    Color: {{ data.color ? data.color : 'N/A' }}\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\">\n                    Price: {{ data.thousandsPrice ? data.thousandsPrice : 'N/A' }}\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\">\n                    Stock Number: {{ data.stockNumber ? data.stockNumber : 'N/A' }}\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\" class=\"text-right\">\n                    Inventory Age: {{ data.inventoryTime ? getDaysBetweenDate(data.inventoryTime, new Date().getTime()) + 'Days' : 'N/A' }}\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\">\n                    Condition: {{ data.vehicleType ? data.vehicleType : 'N/A' }}\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\">\n                    Odometer: {{ data.currentMileage ? data.currentMileage : 'N/A' }}\n                </b-col>\n                <b-col sm=\"4\" lg=\"4\" class=\"text-right\">\n                    Plate No: {{ data.plate ? data.plate : 'N/A' }}\n                </b-col>\n            </b-row>\n        </b-card>\n\n        <b-modal title=\"Google Map\" v-model=\"showMap\" @ok=\"showMap = false\">\n          <google-map :map=\"map\"></google-map>\n        </b-modal>\n\n\n        <b-card>\n          <b-row style=\"border-bottom: 0px;\">\n            <b-table class=\"user-table-list\" hover :items=\"items\" :fields=\"fields\">\n              <template slot=\"operation\" slot-scope=\"items\">\n                <span>{{ items.item.type}}</span>\n              </template>\n              <template slot=\"vehicle\" slot-scope=\"items\">\n                <a class=\"btn-md link-detail\" @click=\"$router.push('/admin-detail/' + items.item.userId)\">\n                  {{items.item.operator}}\n                </a>\n              </template>\n              <template slot=\"time\" slot-scope=\"items\">\n                <div class=\"btn-md\">{{items.item.time}}</div>\n              </template>\n            </b-table>\n          </b-row>\n\n          <b-row>\n            <b-col sm=\"4\" lg=\"4\">\n              <div class=\"dataTables_info\" id=\"DataTables0\" role=\"status\" aria-live=\"polite\">\n                <span v-if=\"totalPages > 0 \">Showing {{10 * (currentPage - 1) + 1 }} to {{currentPage === totalPages? rows :currentPage * 10 }} of {{rows}} entries</span>\n                <span v-else>Showing 0 to 0 of {{rows}} entries</span>\n              </div>\n            </b-col>\n            <b-col sm=\"8\" lg=\"8\">\n              <b-pagination align=\"right\" :total-rows=\"rows\" v-model=\"currentPage\" :per-page=\"perPage\" @input=\" turnToPage(currentPage)\"></b-pagination>\n            </b-col>\n          </b-row>\n        </b-card>\n\n    </div>\n</template>\n\n\n\n<script>\n    import httpclient from '@/utils/httpclient';\n    import { getDateString, getDaysBetweenDate } from \"@/utils/date\";\n    import googleMap from '@/components/googleMap';\n\n    export default {\n        name: \"vehicleDetail\",\n        components: {\n          googleMap\n        },\n        data() {\n            return {\n                data: {},\n                showMap: false,\n                map: null,\n                tipTitle: '',\n                fields: {\n                    operation: {\n                        key: 'operationType',\n                        label: 'Operation'\n                    },\n                    vehicle: {\n                        key: 'vehicle',\n                        label: 'Operator'\n                    },\n                    time: {\n                        key: 'time',\n                        label: 'Time'\n                    },\n                },\n                items:[],\n                totalPages:null,\n                currentPage:null,\n                perPage:null,\n                rows:null,\n            }\n        },\n        mounted() {\n            let self = this;\n            httpclient.get(\"/api/v1/vehicle/detail/id?vehicleId=\" + this.$route.params.id,{}).then((response) => {\n                self.data = response.data.data;\n                let year = self.data.year ? self.data.year : 'N/A';\n                let make = self.data.make ? self.data.make : 'N/A';\n                let model = self.data.model ? self.data.model : 'N/A';\n                let info = (year == 'N/A' && make == 'N/A' && model == 'N/A') ? 'N/A' : year + ' ' + make + ' ' + model;\n                self.tipTitle = info;\n                self.map = {\n                    lat: self.data.lastLocationLat ? self.data.lastLocationLat : 0,\n                    lng: self.data.lastLocationLng ? self.data.lastLocationLng : 0,\n                    area: self.data.areaCoordinates ? self.data.areaCoordinates : [],\n                    vehicleInfo: info\n                }\n            }).catch((err) => {\n                alert(err)\n            });\n\n            this.getVehicleOperatorList(1)\n\n        },\n        methods: {\n            showMapTip() {\n                if (this.map.lat || this.map.area.length > 0) {\n                    this.showMap = true;\n                }\n            },\n            getDateString(data) {\n                return getDateString(data)\n            },\n            getDaysBetweenDate(data, time) {\n                return getDaysBetweenDate(data, time)\n            },\n            getVehicleOperatorList(page){\n                let myVehicleId = this.$route.params.id;\n                let myLink = '/api/v1/operationlog/listbyvehicleid?pageNo='+page+'&vehicleId='+myVehicleId;\n                httpclient.get(myLink).then((res)=>{\n                    let myData = res.data.data.datas;\n                    this.items = myData;\n                    this.currentPage = res.data.data.pageNo;\n                    this.perPage = res.data.data.pageSize;\n                    this.totalPages = res.data.data.totalPages;\n                    this.rows = res.data.data.rowCount;\n                    let myArr = [];\n                    myData.map((item, i) => {\n                        myArr.push({\n                            operationType: item.operationType,\n                            operator: item.userName,\n                            time: this.getDateString(item.createTime),\n                            userId:item.userId\n                        });\n                    });\n                    this.items = myArr;\n                })\n            },\n            turnToPage(p) {\n              this.getVehicleOperatorList(p ? p : 1);\n            },\n            changeFL(m) {\n              if (m === 'last') {\n                this.getVehicleOperatorList(this.totalPages);\n              } else if (m === 'first') {\n                this.getVehicleOperatorList(1);\n              }\n            },\n            nextPage() {\n              this.getVehicleOperatorList(this.currentPage + 1);\n            },\n            prevPage() {\n              this.getVehicleOperatorList(this.currentPage - 1);\n            },\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .row  {\n        border-bottom: 1px solid #23282c;\n        padding: .75rem 1.25rem;\n    }\n    .card-body {\n        padding: 0px 1.25rem;\n    }\n    .title {\n        font-size: 24px;\n    }\n    .card {\n        margin: 0 auto;\n    }\n    .user-table-list {\n      margin-top: 20px;\n      .link-detail {\n        color: #20a8d8 !important;\n        cursor: pointer;\n\n        &:hover {\n          text-decoration: underline !important;\n          color: #167495 !important;\n        }\n      }\n    }\n</style>"]}]}