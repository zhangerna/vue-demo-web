{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/testVehicle.vue?vue&type=template&id=13080b44&scoped=true&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/testVehicle.vue","mtime":1576500181000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"animated fadeIn shop\" },\n    [\n      _c(\"b-card\", { staticClass: \"custom-header\" }, [\n        _c(\"div\", { attrs: { slot: \"header\" }, slot: \"header\" }, [\n          _vm._v(\n            \"\\n            \" +\n              _vm._s(_vm.$t(\"m.dashboard.test_vehicle\")) +\n              \"\\n        \"\n          )\n        ]),\n        _c(\n          \"div\",\n          { staticClass: \"content\" },\n          [\n            _c(\n              \"b-form-group\",\n              { staticClass: \"search-data\" },\n              [\n                _c(\n                  \"b-input-group\",\n                  [\n                    _c(\"b-form-input\", {\n                      attrs: {\n                        type: \"text\",\n                        placeholder: _vm.$t(\"m.test_vehicle.placeholder\")\n                      },\n                      model: {\n                        value: _vm.searchText,\n                        callback: function($$v) {\n                          _vm.searchText = $$v\n                        },\n                        expression: \"searchText\"\n                      }\n                    }),\n                    _c(\n                      \"b-input-group-append\",\n                      [\n                        _c(\n                          \"b-button\",\n                          {\n                            attrs: { variant: \"primary\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.searchStatus()\n                              }\n                            }\n                          },\n                          [\n                            _c(\"i\", { staticClass: \"fa fa-search\" }),\n                            _vm._v(\n                              _vm._s(_vm.$t(\"m.vehicle.b_search\")) +\n                                \"\\n                        \"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"select-status\" }, [\n              _c(\"p\", [_vm._v(_vm._s(_vm.$t(\"m.cloud.vehicle_status\")))]),\n              _c(\n                \"select\",\n                {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.curStatus,\n                      expression: \"curStatus\"\n                    }\n                  ],\n                  staticClass: \"form-control d-inline-block select-width\",\n                  on: {\n                    change: [\n                      function($event) {\n                        var $$selectedVal = Array.prototype.filter\n                          .call($event.target.options, function(o) {\n                            return o.selected\n                          })\n                          .map(function(o) {\n                            var val = \"_value\" in o ? o._value : o.value\n                            return val\n                          })\n                        _vm.curStatus = $event.target.multiple\n                          ? $$selectedVal\n                          : $$selectedVal[0]\n                      },\n                      function($event) {\n                        return _vm.searchStatus()\n                      }\n                    ]\n                  }\n                },\n                [\n                  _c(\"option\", { attrs: { value: \"all\", selected: \"\" } }, [\n                    _vm._v(_vm._s(_vm.$t(\"m.cloud.all_status\")))\n                  ]),\n                  _vm._l(_vm.allStatus, function(item, key) {\n                    return _c(\n                      \"option\",\n                      { key: key, domProps: { value: item.id } },\n                      [_vm._v(_vm._s(item.name))]\n                    )\n                  })\n                ],\n                2\n              )\n            ]),\n            _c(\"b-table\", {\n              staticClass: \"mb-0 table-outline table-responsive-sm\",\n              attrs: {\n                small: \"\",\n                striped: \"\",\n                responsive: \"sm\",\n                items: _vm.table,\n                hover: \"\",\n                fields: _vm.tableFields\n              },\n              scopedSlots: _vm._u([\n                {\n                  key: \"photo\",\n                  fn: function(data) {\n                    return [\n                      _c(\"img\", {\n                        staticClass: \"img-object-cover\",\n                        attrs: {\n                          src: data.item.photo + \"?width=300&height=300\",\n                          width: \"100px\",\n                          height: \"100px\"\n                        }\n                      })\n                    ]\n                  }\n                },\n                {\n                  key: \"info\",\n                  fn: function(data) {\n                    return [\n                      _c(\n                        \"p\",\n                        {\n                          staticClass: \"hot-text-blue font-weight-bold\",\n                          on: {\n                            click: function($event) {\n                              return _vm.$router.push(\n                                \"/test-drive/test-vehicle/detail/\" +\n                                  data.item.vehicleId\n                              )\n                            }\n                          }\n                        },\n                        [\n                          _vm._v(\n                            _vm._s(data.item.year ? data.item.year : \"N/A\") +\n                              \" \" +\n                              _vm._s(data.item.make ? data.item.make : \"N/A\") +\n                              \" \" +\n                              _vm._s(\n                                data.item.model ? data.item.model : \"N/A\"\n                              ) +\n                              \" \" +\n                              _vm._s(\n                                data.item.alias ? \"-\" + data.item.alias : \"\"\n                              )\n                          )\n                        ]\n                      ),\n                      _c(\"p\", [\n                        _vm._v(\n                          _vm._s(data.item.color ? data.item.color : \"N/A\") +\n                            \", \" +\n                            _vm._s(data.item.trim ? data.item.trim : \"N/A\")\n                        )\n                      ]),\n                      _c(\n                        \"p\",\n                        { staticStyle: { \"margin-bottom\": \"1px\" } },\n                        [\n                          _vm._v(\n                            \"\\n                        \" +\n                              _vm._s(\n                                data.item.stock ? data.item.stock : \"N/A\"\n                              ) +\n                              \"\\n                        \"\n                          ),\n                          data.item.plat\n                            ? [\n                                _c(\"span\", { staticClass: \"plat\" }, [\n                                  _vm._v(_vm._s(data.item.plat))\n                                ])\n                              ]\n                            : _vm._e()\n                        ],\n                        2\n                      )\n                    ]\n                  }\n                },\n                {\n                  key: \"point\",\n                  fn: function(data) {\n                    return [\n                      data.item.point\n                        ? [\n                            _c(\n                              \"p\",\n                              {\n                                staticClass: \"hot-text-blue font-weight-bold\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.$router.push(\n                                      \"/test-drive/test-point/detail/\" +\n                                        data.item.parkingId\n                                    )\n                                  }\n                                }\n                              },\n                              [_vm._v(_vm._s(data.item.point))]\n                            )\n                          ]\n                        : [\n                            _c(\"p\", { staticClass: \"margin-b-1\" }, [\n                              _vm._v(_vm._s(_vm.$t(\"m.cloud.undistribute\")))\n                            ])\n                          ],\n                      _c(\n                        \"p\",\n                        {\n                          staticClass: \"hot-text-blue\",\n                          on: {\n                            click: function($event) {\n                              return _vm.showChangePoint(\n                                data.item.vehicleId,\n                                data.item.parkingId\n                              )\n                            }\n                          }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"m.cloud.change_point\")))]\n                      )\n                    ]\n                  }\n                },\n                {\n                  key: \"status\",\n                  fn: function(data) {\n                    return [\n                      data.item.superComputingDevice\n                        ? [\n                            _c(\"div\", { staticClass: \"bind-device\" }, [\n                              _vm._v(_vm._s(_vm.$t(\"m.vehicle.has_bound\")))\n                            ])\n                          ]\n                        : [\n                            _c(\"div\", { staticClass: \"unbind-device\" }, [\n                              _vm._v(_vm._s(_vm.$t(\"m.vehicle.unbound\")))\n                            ])\n                          ],\n                      data.item.vehicleStatus == 10\n                        ? [\n                            _c(\"p\", { staticClass: \"margin-b-1\" }, [\n                              _c(\n                                \"span\",\n                                { staticClass: \"badge badge-primary\" },\n                                [_vm._v(_vm._s(_vm.$t(\"m.cloud.ready\")))]\n                              )\n                            ])\n                          ]\n                        : _vm._e(),\n                      data.item.vehicleStatus == 20\n                        ? [\n                            _c(\"span\", { staticClass: \"badge badge-success\" }, [\n                              _vm._v(_vm._s(_vm.$t(\"m.cloud.test_drive\")))\n                            ]),\n                            _c(\n                              \"p\",\n                              {\n                                staticClass: \"hot-text-blue margin-b-1\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.$router.push(\n                                      \"/test-drive/test-vehicle/detail/\" +\n                                        data.item.vehicleId\n                                    )\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(_vm.$t(\"m.report.order_num\") + \":\") +\n                                    \" \" +\n                                    _vm._s(data.item.orderServiceNum)\n                                )\n                              ]\n                            )\n                          ]\n                        : _vm._e(),\n                      data.item.vehicleStatus == 30\n                        ? [\n                            _c(\"span\", { staticClass: \"badge badge-warning\" }, [\n                              _vm._v(_vm._s(_vm.$t(\"m.cloud.w_accept\")))\n                            ]),\n                            _c(\n                              \"p\",\n                              {\n                                staticClass: \"margin-b-1 hot-text-blue\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.$router.push(\n                                      \"/test-drive/test-vehicle/detail/\" +\n                                        data.item.vehicleId\n                                    )\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(_vm.$t(\"m.report.order_num\") + \":\") +\n                                    \" \" +\n                                    _vm._s(data.item.orderServiceNum)\n                                )\n                              ]\n                            ),\n                            _c(\n                              \"p\",\n                              {\n                                staticClass: \"margin-b-1 hot-text-blue\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.showVerifyModel(\n                                      data.item.orderId\n                                    )\n                                  }\n                                }\n                              },\n                              [_vm._v(_vm._s(_vm.$t(\"m.cloud.vehicle_accept\")))]\n                            )\n                          ]\n                        : _vm._e()\n                    ]\n                  }\n                },\n                {\n                  key: \"actions\",\n                  fn: function(data) {\n                    return [\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"b-tooltip\",\n                              rawName: \"v-b-tooltip.hover\",\n                              modifiers: { hover: true }\n                            }\n                          ],\n                          attrs: { title: _vm.$t(\"m.common.position_detail\") }\n                        },\n                        [\n                          _c(\"i\", {\n                            staticClass:\n                              \"cui cui-location-pin btn btn-sm btn-secondary\",\n                            class: data.item.lat ? \"btn-success\" : \"\",\n                            on: {\n                              click: function($event) {\n                                return _vm.openMap(\n                                  data.item.lat,\n                                  data.item.lng,\n                                  data.item\n                                )\n                              }\n                            }\n                          })\n                        ]\n                      ),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"b-tooltip\",\n                              rawName: \"v-b-tooltip.hover\",\n                              modifiers: { hover: true }\n                            }\n                          ],\n                          staticClass: \"vehicledetail d-inline-block margin-2\",\n                          attrs: { title: _vm.$t(\"m.vehicle_bind.detail\") },\n                          on: {\n                            click: function($event) {\n                              return _vm.$router.push(\n                                \"/test-drive/test-vehicle/detail/\" +\n                                  data.item.vehicleId\n                              )\n                            }\n                          }\n                        },\n                        [\n                          _c(\"i\", {\n                            staticClass:\n                              \"btn btn-info text-white btn-sm fa fa-eye\"\n                          })\n                        ]\n                      ),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"b-tooltip\",\n                              rawName: \"v-b-tooltip.hover\",\n                              modifiers: { hover: true }\n                            }\n                          ],\n                          staticClass: \"vehicleedit d-inline-block margin-2\",\n                          attrs: { title: _vm.$t(\"m.common.edit\") },\n                          on: {\n                            click: function($event) {\n                              return _vm.$router.push(\n                                \"/test-drive/test-vehicle/edit/\" +\n                                  data.item.vehicleId\n                              )\n                            }\n                          }\n                        },\n                        [\n                          _c(\"i\", {\n                            staticClass:\n                              \"fa fa-edit btn btn-sm btn-info text-white\"\n                          })\n                        ]\n                      ),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"b-tooltip\",\n                              rawName: \"v-b-tooltip.hover\",\n                              modifiers: { hover: true }\n                            }\n                          ],\n                          staticClass: \"btn btn-sm btn-danger color-white\",\n                          attrs: { title: _vm.$t(\"m.cloud.delete\") },\n                          on: {\n                            click: function($event) {\n                              return _vm.showDelVehicle(data.item.vehicleId)\n                            }\n                          }\n                        },\n                        [_c(\"i\", { staticClass: \"cui cui-trash\" })]\n                      )\n                    ]\n                  }\n                }\n              ])\n            })\n          ],\n          1\n        )\n      ]),\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", { attrs: { sm: \"4\", lg: \"4\" } }, [\n            _c(\n              \"div\",\n              {\n                staticClass: \"dataTables_info\",\n                attrs: {\n                  id: \"DataTables0\",\n                  role: \"status\",\n                  \"aria-live\": \"polite\"\n                }\n              },\n              [\n                _vm._v(\n                  _vm._s(_vm.$t(\"m.common.show\")) +\n                    \"\\n                \" +\n                    _vm._s(10 * (_vm.currentPage - 1) + 1) +\n                    \" \" +\n                    _vm._s(_vm.$t(\"m.common.to\")) +\n                    \" \" +\n                    _vm._s(\n                      _vm.currentPage === _vm.totalPages\n                        ? _vm.total\n                        : _vm.currentPage * 10\n                    ) +\n                    \" \" +\n                    _vm._s(_vm.$t(\"m.common.of\")) +\n                    \" \" +\n                    _vm._s(_vm.total) +\n                    \" \" +\n                    _vm._s(_vm.$t(\"m.common.entries\")) +\n                    \"\\n            \"\n                )\n              ]\n            )\n          ]),\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"8\", lg: \"8\" } },\n            [\n              _c(\"b-pagination\", {\n                attrs: {\n                  align: \"right\",\n                  \"total-rows\": _vm.total,\n                  \"per-page\": 10\n                },\n                on: {\n                  input: function($event) {\n                    return _vm.changePage(_vm.currentPage)\n                  }\n                },\n                model: {\n                  value: _vm.currentPage,\n                  callback: function($$v) {\n                    _vm.currentPage = $$v\n                  },\n                  expression: \"currentPage\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"b-modal\",\n        {\n          ref: \"my-modal\",\n          staticClass: \"show-map-modal\",\n          attrs: {\n            title: _vm.$t(\"m.cloud.change_tip_title\"),\n            \"ok-title\": _vm.$t(\"m.tip.confirm\"),\n            \"cancel-title\": _vm.$t(\"m.tip.b_cancel\")\n          },\n          on: { ok: _vm.changePoint },\n          model: {\n            value: _vm.showChangeTip,\n            callback: function($$v) {\n              _vm.showChangeTip = $$v\n            },\n            expression: \"showChangeTip\"\n          }\n        },\n        [\n          _c(\"p\", { staticClass: \"text-left margin-b-1\" }, [\n            _vm._v(_vm._s(_vm.$t(\"m.cloud.change_tip_content\")))\n          ]),\n          _c(\"p\", { staticClass: \"text-left margin-b-1\" }, [\n            _vm._v(_vm._s(_vm.$t(\"m.cloud.change_tip_content1\")))\n          ]),\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.curLot,\n                  expression: \"curLot\"\n                }\n              ],\n              staticClass: \"model-select form-control\",\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.curLot = $event.target.multiple\n                    ? $$selectedVal\n                    : $$selectedVal[0]\n                }\n              }\n            },\n            [\n              _c(\"option\", { attrs: { value: \"all\", selected: \"\" } }, [\n                _vm._v(_vm._s(_vm.$t(\"m.cloud.choice_point\")))\n              ]),\n              _c(\n                \"option\",\n                { class: _vm.colorRed, attrs: { value: \"remove\" } },\n                [_vm._v(_vm._s(_vm.$t(\"m.cloud.remove_point\")))]\n              ),\n              _vm._l(_vm.lotList, function(item, key) {\n                return _c(\n                  \"option\",\n                  { key: key, domProps: { value: item.id } },\n                  [_vm._v(_vm._s(item.parkingName))]\n                )\n              })\n            ],\n            2\n          )\n        ]\n      ),\n      _c(\n        \"b-modal\",\n        {\n          ref: \"my-modal\",\n          attrs: {\n            title: _vm.$t(\"m.cloud.cant_change_point\"),\n            \"ok-title\": _vm.$t(\"m.tip.b_ok\"),\n            \"cancel-title\": _vm.$t(\"m.tip.b_cancel\"),\n            \"ok-only\": \"\"\n          },\n          model: {\n            value: _vm.changeErrorTip,\n            callback: function($$v) {\n              _vm.changeErrorTip = $$v\n            },\n            expression: \"changeErrorTip\"\n          }\n        },\n        [_vm._v(\"\\n        \" + _vm._s(_vm.changeErrorMsg) + \"\\n    \")]\n      ),\n      _c(\n        \"b-modal\",\n        {\n          ref: \"my-modal\",\n          staticClass: \"show-map map-test-list\",\n          attrs: {\n            title: _vm.mapModalData,\n            \"ok-title\": _vm.$t(\"m.cloud.close_modal\"),\n            \"ok-only\": \"\"\n          },\n          on: {\n            ok: function($event) {\n              _vm.showMap = false\n            }\n          },\n          model: {\n            value: _vm.showMap,\n            callback: function($$v) {\n              _vm.showMap = $$v\n            },\n            expression: \"showMap\"\n          }\n        },\n        [_c(\"myMap\", { attrs: { map: _vm.map } })],\n        1\n      ),\n      _c(\n        \"b-modal\",\n        {\n          ref: \"my-modal-verify-car\",\n          attrs: {\n            title: _vm.$t(\"m.cloud.vehicle_accept\"),\n            \"ok-title\": _vm.$t(\"m.tip.confirm\"),\n            \"cancel-title\": _vm.$t(\"m.tip.b_cancel\")\n          },\n          on: { ok: _vm.verifyCar },\n          model: {\n            value: _vm.verifyCarStatus,\n            callback: function($$v) {\n              _vm.verifyCarStatus = $$v\n            },\n            expression: \"verifyCarStatus\"\n          }\n        },\n        [\n          _c(\"p\", { staticClass: \"text-center\" }, [\n            _vm._v(_vm._s(_vm.verifyCarText))\n          ])\n        ]\n      ),\n      _c(\"model\", {\n        attrs: {\n          show: _vm.showModel,\n          title: _vm.modelTitle,\n          content: _vm.modelContent,\n          buttonText: _vm.btnGroup\n        },\n        on: { closeRemindBox: _vm.clickButton }\n      }),\n      _c(\"model\", {\n        attrs: {\n          show: _vm.showModel2,\n          title: _vm.modelTitle2,\n          content: _vm.modelContent2,\n          buttonText: _vm.btnGroup2\n        },\n        on: { closeRemindBox: _vm.clickButton2 }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}