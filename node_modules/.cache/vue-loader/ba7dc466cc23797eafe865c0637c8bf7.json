{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/tripAMap.vue?vue&type=style&index=0&id=24a041e0&lang=scss&scoped=true&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/tripAMap.vue","mtime":1577066250000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.maps {\n    .map-btn-group {\n        position: absolute;\n        margin-top: 10px;\n        z-index: 1;\n        margin-left: 20px;\n        ul {\n            color: grey;\n            padding: 0 20px;\n            height: 40px;\n            line-height: 40px;\n            background: #ffffff;\n            font-size: 18px;\n            li {\n                cursor: pointer;\n                display: inline-block;\n            }\n        }\n    }\n    #polygon {\n        height: 30vh;\n        width: 100%;\n    }\n    .my-map{\n        height: 70vh;\n        width: 100%;\n        .amap-info {\n            width: 200px;\n        }\n        .amap-info-contentContainer {\n            background:#ffffff;\n            border-radius: 10px;\n            h5 {\n                padding-left: 10px;\n            }\n        }\n    }\n}\n",{"version":3,"sources":["tripAMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tripAMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"maps\">\n        <div class=\"map-btn-group\">\n            <ul>\n                <li @click=\"changeMapType('default')\">地图 |</li>\n                <li @click=\"changeMapType('sate')\">&nbsp;卫星图像</li>\n            </ul>\n        </div>\n        <div class=\"amap my-map\" id=\"polygon\">\n        </div>\n    </div>\n</template>\n\n<script>\n    import { wgs84ToGcjo2 } from \"@/utils/coordtransform\"\n    import AMap from 'AMap'\n    export default {\n        name: \"amap\",\n        props: [\"map\"],\n        data() {\n            return {\n                mapObj: null,\n                polygon: null,\n                lat: \"\",\n                lng: \"\",\n                safeLayer: null,\n                roadLayer: null,\n                mapInfo: null\n            }\n        },\n        watch: {\n            map: function (newVal) {\n                this.mapInfo = newVal;\n                this.initMap();\n            }\n        },\n        methods: {\n            changeMapType(type) {\n                if (type == 'default') {\n                    this.roadLayer.hide();\n                    this.safeLayer.hide();\n                } else {\n                    this.roadLayer.show();\n                    this.safeLayer.show();\n                }\n            },\n            initMap() {\n                this.mapObj = new AMap.Map('polygon', {\n                    center: [this.mapInfo.center.lng, this.mapInfo.center.lat],\n                    zoom: 8\n                });\n                // 卫星地图的切换\n                this.safeLayer = new AMap.TileLayer.Satellite({\n                });\n                this.roadLayer = new AMap.TileLayer.RoadNet({\n                });\n                this.mapObj.add(this.safeLayer);\n                this.mapObj.add(this.roadLayer);\n                this.safeLayer.hide();\n                this.roadLayer.hide();\n\n                let area2 = [];\n                this.mapInfo['area'] ? this.mapInfo['area'].map(function (item) {\n                    area2.push(wgs84ToGcjo2(Number(item.lng), Number(item.lat) ))\n                }) : '';\n                let polyline = new AMap.Polyline({\n                    path: area2,\n                    strokeColor: '#FF0000',\n                    strokeOpacity: 0.8,\n                    strokeWeight: 2,\n                    fillColor: '',\n                    fillOpacity: 0.35\n                });\n                polyline.setMap(this.mapObj);\n                this.mapObj.setFitView();\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .maps {\n        .map-btn-group {\n            position: absolute;\n            margin-top: 10px;\n            z-index: 1;\n            margin-left: 20px;\n            ul {\n                color: grey;\n                padding: 0 20px;\n                height: 40px;\n                line-height: 40px;\n                background: #ffffff;\n                font-size: 18px;\n                li {\n                    cursor: pointer;\n                    display: inline-block;\n                }\n            }\n        }\n        #polygon {\n            height: 30vh;\n            width: 100%;\n        }\n        .my-map{\n            height: 70vh;\n            width: 100%;\n            .amap-info {\n                width: 200px;\n            }\n            .amap-info-contentContainer {\n                background:#ffffff;\n                border-radius: 10px;\n                h5 {\n                    padding-left: 10px;\n                }\n            }\n        }\n    }\n</style>"]}]}