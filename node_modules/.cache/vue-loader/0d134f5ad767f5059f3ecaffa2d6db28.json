{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/login/index.vue","mtime":1561455779000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport httpclient from '../../utils/httpclient';\nimport {saveTokenExpireAt, saveUserInfo,saveUserId} from '../../utils/token'\n\nexport default {\n  name: 'Login',\n  data(){\n    return {\n      username: '',\n      password: '',\n      errorUsername: '',\n      errorPass: ''\n    }\n  },\n  methods: {\n    handleLogin(){\n      this.errorUsername = \"\";\n      this.errorPass = \"\";\n      if (!this.username || this.username.indexOf(\"@\") < 1) {\n        this.errorUsername = \"is-invalid\";\n        return;\n      }\n      if (!this.password || this.password.length < 6) {\n        this.errorPass = \"is-invalid\";\n        return;\n      }\n      httpclient.post('/api/v1/login',{\n        username: this.username,\n        password: this.password\n      }).then((response)=>{\n        localStorage.setItem(\"user_info\", JSON.stringify(response.data.data.user));\n        this.$store.dispatch(\"user_info\", response.data.data.user);\n        saveTokenExpireAt(response.data.data.token.expireAt);\n        saveUserInfo(response.data.data.user.userEmail);\n        saveUserId(response.data.data.user.userId);\n        this.$router.push({ path: '/index'});\n      }).catch((err) => {\n          alert(\"Login Failed, Username or Password Incorrect!\")\n      })\n\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\n  <div class=\"app flex-row align-items-center\">\n    <div class=\"container\">\n      <div class=\"justify-content-center logo\">\n        <img src=\"@/assets/pages-img/logo.svg\" width=\"300px\">\n        <p>Increase Efficieny and Profit</p>\n      </div>\n      <b-row class=\"justify-content-center\">\n        <b-col md=\"8\">\n          <b-card-group>\n            <b-card no-body class=\"p-4\">\n              <b-card-body>\n                <b-form>\n                  <h1>Login</h1>\n                  <p class=\"text-muted\">Sign In to your account</p>\n                  <b-input-group class=\"mb-3\">\n                    <b-input-group-prepend><b-input-group-text><i class=\"icon-user\"></i></b-input-group-text></b-input-group-prepend>\n                    <b-form-input type=\"text\" :class=\"errorUsername\" v-model=\"username\" class=\"form-control\" placeholder=\"Username\" autocomplete=\"username email\" />\n                  </b-input-group>\n                  <b-input-group class=\"mb-4\">\n                    <b-input-group-prepend><b-input-group-text><i class=\"icon-lock\"></i></b-input-group-text></b-input-group-prepend>\n                    <b-form-input type=\"password\" class=\"form-control\" :class=\"errorPass\" v-model=\"password\" placeholder=\"Password\" autocomplete=\"current-password\" @keyup.enter.native=\"handleLogin\" />\n                  </b-input-group>\n                  <b-row>\n                    <b-col cols=\"6\">\n                      <b-button @click=\"handleLogin\" variant=\"primary\" class=\"px-4\">Login</b-button>\n                    </b-col>\n                    <b-col cols=\"6\" class=\"text-right\">\n                      <b-button variant=\"link\" class=\"px-0\" @click=\"$router.push('/forget-password')\">Forgot password?</b-button>\n                    </b-col>\n                  </b-row>\n                </b-form>\n              </b-card-body>\n            </b-card>\n            <b-card no-body class=\"text-white bg-primary py-5 d-md-down-none\" style=\"width:44%\">\n              <b-card-body class=\"text-center\">\n                <div>\n                  <h2>Sign up</h2>\n                  <p>Public registration is coming soon. If you are interested, please send your queries to support@zus.ai.</p>\n                </div>\n              </b-card-body>\n            </b-card>\n          </b-card-group>\n        </b-col>\n      </b-row>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .logo {\n    text-align: center;\n    p {\n      font-size: 32px;\n      margin: 20px 0;\n    }\n  }\n</style>\n\n<script>\n\nimport httpclient from '../../utils/httpclient';\nimport {saveTokenExpireAt, saveUserInfo,saveUserId} from '../../utils/token'\n\nexport default {\n  name: 'Login',\n  data(){\n    return {\n      username: '',\n      password: '',\n      errorUsername: '',\n      errorPass: ''\n    }\n  },\n  methods: {\n    handleLogin(){\n      this.errorUsername = \"\";\n      this.errorPass = \"\";\n      if (!this.username || this.username.indexOf(\"@\") < 1) {\n        this.errorUsername = \"is-invalid\";\n        return;\n      }\n      if (!this.password || this.password.length < 6) {\n        this.errorPass = \"is-invalid\";\n        return;\n      }\n      httpclient.post('/api/v1/login',{\n        username: this.username,\n        password: this.password\n      }).then((response)=>{\n        localStorage.setItem(\"user_info\", JSON.stringify(response.data.data.user));\n        this.$store.dispatch(\"user_info\", response.data.data.user);\n        saveTokenExpireAt(response.data.data.token.expireAt);\n        saveUserInfo(response.data.data.user.userEmail);\n        saveUserId(response.data.data.user.userId);\n        this.$router.push({ path: '/index'});\n      }).catch((err) => {\n          alert(\"Login Failed, Username or Password Incorrect!\")\n      })\n\n    }\n  }\n}\n</script>"]}]}