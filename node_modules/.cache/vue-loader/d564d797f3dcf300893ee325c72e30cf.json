{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/vehicleDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/vehicleDetail.vue","mtime":1569469227000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport httpclient from '@/utils/httpclient';\nimport {getDateString, getDaysBetweenDate} from \"@/utils/date\";\nimport myMap from '@/components/map';\nexport default {\n    name: \"vehicleDetail\",\n    components: {\n        myMap,\n    },\n    data() {\n        return {\n            btnGroup: {\n                btnFirst: \"Cancel\",\n                btnSecond:'OK'\n            },\n            data: {},\n            showMap: false,\n            map: null,\n            searchGoogleMap: {},\n            mapPopup: null,\n            tipTitle: '',\n            showSoldVehicle: false,\n            soldVehicleStatus:false,\n            soldVehicleSuccess:false,\n            soldVehicleTransform:false,\n            installDeviceStatus:false,\n            installSuccess:false,\n            installStatus:false,\n            inputText:'',\n            soldVehicleContent:'',\n            soldVehicleHeader:'',\n            transferStatus:false,\n            transferContents:'',\n            transferTitle:'',\n            soldStatus: \"\",\n            soldOutC: \"\",\n            fields: {\n                operation: {\n                    key: 'operationType',\n                    label: this.$t('m.vehicle_detail.operation')\n                },\n                vehicle: {\n                    key: 'vehicle',\n                    label: this.$t('m.vehicle_detail.operator')\n                },\n                time: {\n                    key: 'time',\n                    label: this.$t('m.common.time')\n                },\n            },\n            options: [],\n            selected:null,\n            items: [],\n            totalPages: 1,\n            currentPage: 1,\n            perPage: 10,\n            rows: 1,\n            myCurrentMileage: null\n        }\n    },\n    mounted() {\n        if (this.$i18n.locale === 'en-US') {\n            this.changedLanguage = \"English\";\n        } else {\n            this.changedLanguage = 'Chinese';\n        }\n        let self = this;\n        httpclient.get(\"/api/v1/vehicle/detail/id?vehicleId=\" + this.$route.params.id, {}).then((response) => {\n            self.data = response.data.data;\n            let year = self.data.year ? self.data.year : 'N/A';\n            let make = self.data.make ? self.data.make : 'N/A';\n            let model = self.data.model ? self.data.model : 'N/A';\n            let info = (year == 'N/A' && make == 'N/A' && model == 'N/A') ? 'N/A' : year + ' ' + make + ' ' + model;\n            self.tipTitle = info;\n            self.map = {\n                lat: self.data.lastLocationLat ? self.data.lastLocationLat : 0,\n                lng: self.data.lastLocationLng ? self.data.lastLocationLng : 0,\n                area: self.data.areaCoordinates ? self.data.areaCoordinates : [],\n                vehicleInfo: info\n            };\n\n            self.mapPopup = {\n                lat: self.data.lastLocationLat ? self.data.lastLocationLat : 0,\n                lng: self.data.lastLocationLng ? self.data.lastLocationLng : 0,\n                area: self.data.areaCoordinates ? self.data.areaCoordinates : [],\n                vehicleInfo: info\n            };\n\n            let _mileage = null;\n            if (response.data.data.currentMileage) {\n                if (self.changedLanguage === 'English') {\n                    _mileage = ((response.data.data.currentMileage * 0.0006214).toFixed(0))\n                } else {\n                    _mileage = ((response.data.data.currentMileage / 1000).toFixed(0))\n                }\n            } else {\n                _mileage = 'N/A'\n            }\n            self.myCurrentMileage = _mileage\n\n        }).catch((err) => {\n            console.log(err);\n        });\n\n        this.getVehicleOperatorList(1)\n\n    },\n    methods: {\n        getDateString(data) {\n            return getDateString(data)\n        },\n        getDaysBetweenDate(data, time) {\n            return getDaysBetweenDate(data, time)\n        },\n        getVehicleOperatorList(page) {\n            let myVehicleId = this.$route.params.id;\n            let myLink = '/api/v1/operationlog/listbyvehicleid?pageNo=' + page + '&vehicleId=' + myVehicleId;\n            httpclient.get(myLink).then((res) => {\n                let myData = res.data.data.datas;\n                this.items = myData;\n                this.searchGoogleMap = myData;\n                // this.currentPage = res.data.data.pageNo;\n                this.perPage = res.data.data.pageSize;\n                this.totalPages = res.data.data.totalPages;\n                this.rows = res.data.data.rowCount;\n                let myArr = [];\n                myData.map((item) => {\n                    myArr.push({\n                        operationType: item.operationType,\n                        operator: item.userName,\n                        time: this.getDateString(item.createTime),\n                        userId: item.userId\n                    });\n                });\n                this.items = myArr;\n            })\n        },\n        turnToPage(p) {\n            this.getVehicleOperatorList(p ? p : 1);\n        },\n        showMapTip() {\n            this.showMap = true;\n        },\n        showRegisterSold(){\n            this.soldOutC = this.$t('m.sold_vehicle.sold_content', {year:this.data.year ? this.data.year : 'N/A', make: this.data.make ? this.data.make : 'N/A', model: this.data.model ? this.data.model : 'N/A', alias: this.data.alias ? this.data.alias : 'N/A', stock: this.data.stockNumber ? this.data.stockNumber : 'N/A'});\n            this.showSoldVehicle = true;\n        },\n        registerSold(){//确认登记售出\n            let vehicleId = this.$route.params.id;\n            httpclient.post('/api/v1/vehicle/sale',{\"vehicleId\":vehicleId}).then( res => {\n                if(res.data.code === 200 && res.data.data.result){\n                    this.soldVehicleSuccess = true;\n                    this.soldVehicleStatus = true;\n                    this.data.soldVehicleContent = this.$t('m.sold_vehicle.sold_content_success',{year:this.data.year ? this.data.year : 'N/A', make: this.data.make ? this.data.make : 'N/A', model: this.data.model ? this.data.model : 'N/A', alias: this.data.alias ? this.data.alias : 'N/A', stock: this.data.stockNumber ? this.data.stockNumber : 'N/A'});\n                    this.data.soldVehicleHeader = this.$t('m.sold_vehicle.sold_header_success');\n                }else{\n                    this.soldVehicleSuccess = false;\n                    this.soldVehicleStatus = true;\n                    this.data.soldVehicleContent = this.$t('m.sold_vehicle.sold_content_fail',{year:this.data.year ? this.data.year : 'N/A', make: this.data.make ? this.data.make : 'N/A', model: this.data.model ? this.data.model : 'N/A', alias: this.data.alias ? this.data.alias : 'N/A', stock: this.data.stockNumber ? this.data.stockNumber : 'N/A'});\n                    this.data.soldVehicleHeader = this.$t('m.sold_vehicle.sold_header_fail')\n\n                }\n            })\n        },\n        goBackToList(){//回到列表\n            if(this.soldVehicleSuccess){\n                this.$router.push('/inventory/vehicle')\n            }\n        },\n        confirmTransformVehicle(){//车辆转移确认\n            if(this.selected !== null){\n                let _name='';\n                this.options.map(item=>{\n                    if(item.value === this.selected){\n                        _name = item.text\n                    }\n                });\n                let data = {\n                    \"vehicleId\":this.$route.params.id,\n                    \"transferStoreId\":this.selected\n                };\n                httpclient.post('/api/v1/vehicle/transfer',data).then(res=>{\n                    this.transferStatus = true;\n                    if(res.data.code === 200 && res.data.data.result === true){\n                        this.transferTitle=this.$t('m.sold_vehicle.transform_vehicle_to_other_store_header_success');\n                        this.transferContents=this.$t('m.sold_vehicle.transform_vehicle_to_other_store_content_success',{year:this.data.year ? this.data.year : 'N/A', make: this.data.make ? this.data.make : 'N/A', model: this.data.model ? this.data.model : 'N/A', alias: this.data.alias ? this.data.alias : 'N/A',storeName:_name, stock: this.data.stockNumber ? this.data.stockNumber : 'N/A'});\n                    }else{\n                        this.transferTitle=this.$t('m.sold_vehicle.transform_vehicle_to_other_store_header_fail');\n                        this.transferContents=this.$t('m.sold_vehicle.transform_vehicle_to_other_store_content_fail');\n                    }\n                })\n            }\n        },\n        showTransformVehicle(){//弹出车辆转移的弹窗，获取门店列表\n            this.soldVehicleTransform = true;\n            httpclient.get('/api/v1/store/listbyself?vehicleid=' + this.$route.params.id).then(res=>{\n                if(res.data.code === 200 && res.data.data.length){\n                    this.options.length = 0;\n                    this.options.push({ value: null, text: this.$t('m.sold_vehicle.transform_vehicle_to_other_store_options'), disabled: true });\n                    res.data.data.map(item => {\n                        this.options.push({\n                            value:item.storeId,\n                            text:item.storeName,\n                        })\n                    })\n                }\n            })\n        },\n        afterTransfer(){//转移成功，跳转到vehicle-list\n            if(this.transferStatus){\n                this.$router.push('/inventory/vehicle')\n            }\n        },\n        showBindInfo(){\n            this.installDeviceStatus = !this.installDeviceStatus\n        },\n        installDevice(){\n            httpclient.post('/api/v1/clouddrive/device/box/bind', {\n                deviceImei: this.inputText,\n                vehicleId: this.$route.params.id\n            }).then(res=>{\n                if(res.data.code === 200 && res.data.data.result){\n                    this.installStatus=true;\n                    this.installSuccess = true;\n                }else{\n                    this.installStatus=false;\n                    this.installSuccess = true;\n                }\n            })\n        }\n    }\n}\n",null]}