{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/resetPassword/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/resetPassword/index.vue","mtime":1577962918000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.reset-password {\n    .form-password {\n        max-width: 600px;\n        text-align: center;\n        margin-top: 20%;\n        .form-control {\n            max-width: 70%;\n            margin: 0 auto;\n        }\n        .error {\n            color: red;\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/resetPassword","sourcesContent":["<template>\n    <div class=\"animated fadeIn reset-password\">\n        <div v-if=\"status == 3\" class=\"container form-password flex-row align-items-center\">\n            <div class=\"justify-content-center\">\n                <div class=\"row justify-content-center\">\n                    <img src=\"@/assets/pages-img/logo.svg\" width=\"50%\">\n                </div>\n                <br />\n                <h2 class=\"text-center text-muted\">{{ $t('m.login.title') }}</h2>\n                <p class=\"text-muted\">{{ $t('m.no_login.input_password') }}</p>\n                <div>\n                    <b-form-group>\n                        <label>\n                            <strong>{{ $t('m.no_login.new_password') }}</strong>\n                        </label>\n                        <b-form-input v-model=\"password\" type=\"password\" :class=\"passwordE ? 'is-invalid' : ''\"></b-form-input>\n                        <p class=\"error\" v-show=\"passwordE\">{{ $t('m.no_login.password_require') }}</p>\n                    </b-form-group>\n                    <b-form-group>\n                        <label>\n                            <strong>{{ $t('m.no_login.confirm_password') }}</strong>\n                        </label>\n                        <b-form-input v-model=\"nPassword\" type=\"password\" :class=\"passwordNE ? 'is-invalid' : ''\"></b-form-input>\n                        <p class=\"error\" v-show=\"passwordNE\"></p>\n                    </b-form-group>\n                    <button class=\"btn btn-success\" type=\"button\" @click=\"submitForm\">{{ $t('m.common.submit') }}</button>\n                </div>\n            </div>\n        </div>\n        <succ v-if=\"status && status != 3\"\n              :btnGroup=\"btnGroup\"\n              :errInfo=\"errInfo\"\n              :succInfo=\"succInfo\">\n        </succ>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    .reset-password {\n        .form-password {\n            max-width: 600px;\n            text-align: center;\n            margin-top: 20%;\n            .form-control {\n                max-width: 70%;\n                margin: 0 auto;\n            }\n            .error {\n                color: red;\n            }\n        }\n    }\n</style>\n\n<script>\n    import httpClient from \"@/utils/httpclient\";\n    import succ from \"@/components/registStatus\";\n    export default {\n        name: \"registerCheckSuccess\",\n        components: {\n            succ\n        },\n        data() {\n            return {\n                errInfo: \"\",\n                btnGroup: {\n                },\n                nPassword: '',\n                password: '',\n                passwordE: false,\n                passwordNE: false,\n                userId: '',\n                succInfo: '',\n                status: false\n            }\n        },\n        mounted() {\n            httpClient.post(\"/api/v1/user/resetpwdverification\", {\n                token: this.$route.query.token\n            }).then(response => {\n                if (response.data.data && response.data.code == 200) {\n                    this.status = 3;\n                    this.userId = response.data.data.id;\n                } else {\n                    this.errInfo = this.$t('m.register.link_expire');\n                    this.status = 1;\n                }\n            }).catch(err => {\n                this.errInfo = this.$t('m.register.link_expire');\n                this.status = 1;\n            })\n        },\n        methods: {\n            submitForm() {\n                if (!this.password || (this.password && this.password.length < 6)) {\n                    this.passwordE = true;\n                } else {\n                    this.passwordE = false;\n                }\n                if (!this.nPassword || (this.nPassword && this.nPassword != this.password)) {\n                    this.passwordNE = true;\n                } else {\n                    this.passwordNE = false;\n                }\n                if (!this.passwordNE && !this.passwordE) {\n                    httpClient.post('/api/v1/user/resetpwd', {\n                        userId: this.userId,\n                        newPassword: this.password\n                    }).then(response => {\n                        if (response.data.data || response.data.code == 200) {\n                            this.status = 2;\n                            this.succInfo = \"Congratulations, you have reset the password.\";\n                            this.btnGroup = {\n                                btnFirst: \"Login\",\n                                btnSecond: \"Homepage\"\n                            }\n                        } else {\n                            this.errInfo = \"Sorry,the link has been used or has expired.\";\n                            this.status = 1;\n                        }\n                    })\n                }\n\n            }\n        }\n    }\n</script>\n"]}]}