{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/vehicleForm.vue?vue&type=template&id=04ea9830&scoped=true&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/vehicleForm.vue","mtime":1577066250000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"animated fadeIn vehicleForm\" },\n    [\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.year\")))]),\n                  _c(\"b-form-input\", {\n                    attrs: {\n                      type: \"number\",\n                      placeholder:\n                        _vm.$t(\"m.common.enter\") + _vm.$t(\"m.common.year\")\n                    },\n                    model: {\n                      value: _vm.year,\n                      callback: function($$v) {\n                        _vm.year = $$v\n                      },\n                      expression: \"year\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.make\")))]),\n                  _c(\"b-form-input\", {\n                    attrs: {\n                      type: \"text\",\n                      placeholder:\n                        _vm.$t(\"m.common.enter\") + _vm.$t(\"m.common.make\")\n                    },\n                    model: {\n                      value: _vm.make,\n                      callback: function($$v) {\n                        _vm.make = $$v\n                      },\n                      expression: \"make\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.model\")))]),\n                  _c(\"b-form-input\", {\n                    attrs: {\n                      type: \"text\",\n                      placeholder:\n                        _vm.$t(\"m.common.enter\") + _vm.$t(\"m.common.model\")\n                    },\n                    model: {\n                      value: _vm.model,\n                      callback: function($$v) {\n                        _vm.model = $$v\n                      },\n                      expression: \"model\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.alias\")))]),\n                  _c(\"b-form-input\", {\n                    attrs: {\n                      type: \"text\",\n                      placeholder:\n                        _vm.$t(\"m.common.enter\") + _vm.$t(\"m.common.alias\")\n                    },\n                    model: {\n                      value: _vm.alias,\n                      callback: function($$v) {\n                        _vm.alias = $$v\n                      },\n                      expression: \"alias\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.trim\")))]),\n                  _c(\"b-form-input\", {\n                    attrs: {\n                      type: \"text\",\n                      placeholder:\n                        _vm.$t(\"m.common.enter\") + _vm.$t(\"m.common.trim\")\n                    },\n                    model: {\n                      value: _vm.trim,\n                      callback: function($$v) {\n                        _vm.trim = $$v\n                      },\n                      expression: \"trim\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.engine\")))]),\n                  _c(\"b-form-input\", {\n                    attrs: {\n                      type: \"text\",\n                      placeholder:\n                        _vm.$t(\"m.common.enter\") + _vm.$t(\"m.common.engine\")\n                    },\n                    model: {\n                      value: _vm.engine,\n                      callback: function($$v) {\n                        _vm.engine = $$v\n                      },\n                      expression: \"engine\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\"b-form-group\", [\n                _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.color\")))]),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.color,\n                        expression: \"color\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { name: \"color\", id: \"vehiclecolor\" },\n                    on: {\n                      change: function($event) {\n                        var $$selectedVal = Array.prototype.filter\n                          .call($event.target.options, function(o) {\n                            return o.selected\n                          })\n                          .map(function(o) {\n                            var val = \"_value\" in o ? o._value : o.value\n                            return val\n                          })\n                        _vm.color = $event.target.multiple\n                          ? $$selectedVal\n                          : $$selectedVal[0]\n                      }\n                    }\n                  },\n                  _vm._l(_vm.colorList, function(item, index) {\n                    return _c(\n                      \"option\",\n                      { key: index, domProps: { value: item.y } },\n                      [_vm._v(_vm._s(item.c))]\n                    )\n                  }),\n                  0\n                )\n              ])\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                { staticClass: \"price-dorlar\" },\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.price\")))]),\n                  _c(\n                    \"b-input-group\",\n                    [\n                      _c(\n                        \"b-input-group-prepend\",\n                        [\n                          _c(\"b-input-group-text\", [\n                            _vm._v(_vm._s(_vm.$t(\"m.common.moneyType\")))\n                          ])\n                        ],\n                        1\n                      ),\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          type: \"number\",\n                          placeholder:\n                            _vm.$t(\"m.common.enter\") + _vm.$t(\"m.common.price\")\n                        },\n                        model: {\n                          value: _vm.price,\n                          callback: function($$v) {\n                            _vm.price = $$v\n                          },\n                          expression: \"price\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.stock_num\")))]),\n                  _c(\"b-form-input\", {\n                    attrs: {\n                      type: \"number\",\n                      placeholder:\n                        _vm.$t(\"m.common.enter\") + _vm.$t(\"m.common.stock_num\")\n                    },\n                    model: {\n                      value: _vm.stock,\n                      callback: function($$v) {\n                        _vm.stock = $$v\n                      },\n                      expression: \"stock\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.inv_date\")))]),\n                  _c(\"b-form-input\", {\n                    attrs: { type: \"date\" },\n                    model: {\n                      value: _vm.date,\n                      callback: function($$v) {\n                        _vm.date = $$v\n                      },\n                      expression: \"date\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\"b-form-group\", [\n                _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.condition\")))]),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.condition,\n                        expression: \"condition\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { name: \"\", id: \"vehicletype\" },\n                    on: {\n                      change: function($event) {\n                        var $$selectedVal = Array.prototype.filter\n                          .call($event.target.options, function(o) {\n                            return o.selected\n                          })\n                          .map(function(o) {\n                            var val = \"_value\" in o ? o._value : o.value\n                            return val\n                          })\n                        _vm.condition = $event.target.multiple\n                          ? $$selectedVal\n                          : $$selectedVal[0]\n                      }\n                    }\n                  },\n                  _vm._l(_vm.conditionList, function(item, index) {\n                    return _c(\n                      \"option\",\n                      { key: index, domProps: { value: item.y } },\n                      [_vm._v(_vm._s(item.c))]\n                    )\n                  }),\n                  0\n                )\n              ])\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.odometer\")))]),\n                  _c(\"b-form-input\", {\n                    attrs: {\n                      type: \"text\",\n                      placeholder:\n                        _vm.$t(\"m.common.enter\") + _vm.$t(\"m.common.c_mileage\")\n                    },\n                    model: {\n                      value: _vm.odometer,\n                      callback: function($$v) {\n                        _vm.odometer = $$v\n                      },\n                      expression: \"odometer\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { sm: \"4\" } },\n            [\n              _c(\n                \"b-form-group\",\n                [\n                  _c(\"label\", [_vm._v(_vm._s(_vm.$t(\"m.common.plate_num\")))]),\n                  _c(\"b-form-input\", {\n                    attrs: {\n                      type: \"text\",\n                      placeholder:\n                        _vm.$t(\"m.common.enter\") + _vm.$t(\"m.common.plate_num\")\n                    },\n                    model: {\n                      value: _vm.plate,\n                      callback: function($$v) {\n                        _vm.plate = $$v\n                      },\n                      expression: \"plate\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"upload-group text-center\" },\n        [\n          _c(\"img\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.photo,\n                expression: \"photo\"\n              }\n            ],\n            attrs: { src: _vm.photo, width: \"100%\" }\n          }),\n          _c(\"div\", [\n            _c(\"input\", {\n              attrs: {\n                type: \"button\",\n                id: \"btn\",\n                value: _vm.$t(\"m.common.upload_img\")\n              },\n              on: { click: _vm.clickInput }\n            }),\n            _c(\"input\", {\n              ref: \"upload\",\n              staticStyle: { opacity: \"0\", cursor: \"pointer\" },\n              attrs: {\n                type: \"file\",\n                id: \"uploadAvatar\",\n                accept: \"image/jpeg,image/png,image/jpg\"\n              },\n              on: {\n                change: function($event) {\n                  return _vm.savefile($event)\n                }\n              }\n            })\n          ]),\n          _c(\n            \"b-button\",\n            {\n              staticClass: \"btn btn-sm btn-success btn-syl\",\n              attrs: { disabled: _vm.showB },\n              on: { click: _vm.saveData }\n            },\n            [\n              _vm._v(\n                \"\\n            \" +\n                  _vm._s(_vm.$t(\"m.common.submit\")) +\n                  \"\\n        \"\n              )\n            ]\n          )\n        ],\n        1\n      ),\n      _c(\"model\", {\n        attrs: {\n          title: _vm.title,\n          content: _vm.content,\n          show: _vm.show,\n          buttonText: { btnFirst: \"ok\" }\n        },\n        on: {\n          closeRemindBox: function($event) {\n            _vm.show = false\n          }\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}