{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/gmapForAddress.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/gmapForAddress.vue","mtime":1577962918000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n#map {\n    height: 40vh;\n    .gm-style .gm-style-iw-d {\n        max-width: 280px!important;\n        img {\n            width: 100%;\n        }\n    }\n}\n",{"version":3,"sources":["gmapForAddress.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gmapForAddress.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"#map\">\n    </div>\n</template>\n\n<style lang=\"scss\">\n    #map {\n        height: 40vh;\n        .gm-style .gm-style-iw-d {\n            max-width: 280px!important;\n            img {\n                width: 100%;\n            }\n        }\n    }\n</style>\n\n<script>\n    import google from \"google\"\n    export default {\n        name: \"googleMap\",\n        props: [\"address\"],\n        data() {\n            return {\n                addres: \"\",\n                mapObj: null\n            }\n        },\n        watch: {\n            address: function (newVal) {\n                // console.log(1)\n                this.addres = newVal;\n                this.initMap()\n            }\n        },\n        methods: {\n            initMap(){\n                this.mapObj = new google.maps.Map(document.getElementById('map'), {\n                    zoom: 15,\n                    mapTypeId:google.maps.MapTypeId.SATELLITE,\n                });\n\n                this.geocoders = new google.maps.Geocoder();\n                this.geocoders.geocode({'address': this.addres}, (results, status) => {\n                    if (status == \"OK\") {\n                        this.mapObj.setCenter(results[0].geometry.location);\n                        new google.maps.Marker({\n                            map: this.mapObj,\n                            position: results[0].geometry.location,\n                            icon: \"https://cdn.shopify.com/s/files/1/0703/1149/files/60x60.png?854740\"\n                        });\n                    } else {\n                        console.log('Geocode was not successful for the following reason: ' + status);\n                    }\n                });\n\n            }\n        }\n    }\n</script>\n"]}]}