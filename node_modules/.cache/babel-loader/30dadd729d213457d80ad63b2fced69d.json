{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js!/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/vehicleDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/vehicleDetail.vue","mtime":1560421842000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpclient from '@/utils/httpclient';\nimport { getDateString as _getDateString, getDaysBetweenDate as _getDaysBetweenDate } from \"@/utils/date\";\nimport googleMap from '@/components/googleMap';\nexport default {\n  name: \"vehicleDetail\",\n  components: {\n    googleMap: googleMap\n  },\n  data: function data() {\n    return {\n      data: {},\n      showMap: false,\n      map: null,\n      tipTitle: '',\n      fields: {\n        operation: {\n          key: 'operationType',\n          label: 'Operation'\n        },\n        vehicle: {\n          key: 'vehicle',\n          label: 'Operator'\n        },\n        time: {\n          key: 'time',\n          label: 'Time'\n        }\n      },\n      items: [],\n      totalPages: null,\n      currentPage: null,\n      perPage: null,\n      rows: null\n    };\n  },\n  mounted: function mounted() {\n    var self = this;\n    httpclient.get(\"/api/v1/vehicle/detail/id?vehicleId=\" + this.$route.params.id, {}).then(function (response) {\n      self.data = response.data.data;\n      var year = self.data.year ? self.data.year : 'N/A';\n      var make = self.data.make ? self.data.make : 'N/A';\n      var model = self.data.model ? self.data.model : 'N/A';\n      var info = year == 'N/A' && make == 'N/A' && model == 'N/A' ? 'N/A' : year + ' ' + make + ' ' + model;\n      self.tipTitle = info;\n      self.map = {\n        lat: self.data.lastLocationLat ? self.data.lastLocationLat : 0,\n        lng: self.data.lastLocationLng ? self.data.lastLocationLng : 0,\n        area: self.data.areaCoordinates ? self.data.areaCoordinates : [],\n        vehicleInfo: info\n      };\n    }).catch(function (err) {\n      alert(err);\n    });\n    this.getVehicleOperatorList(1);\n  },\n  methods: {\n    getDateString: function getDateString(data) {\n      return _getDateString(data);\n    },\n    getDaysBetweenDate: function getDaysBetweenDate(data, time) {\n      return _getDaysBetweenDate(data, time);\n    },\n    getVehicleOperatorList: function getVehicleOperatorList(page) {\n      var _this = this;\n\n      var myVehicleId = this.$route.params.id;\n      var myLink = '/api/v1/operationlog/listbyvehicleid?pageNo=' + page + '&vehicleId=' + myVehicleId;\n      httpclient.get(myLink).then(function (res) {\n        var myData = res.data.data.datas;\n        _this.items = myData;\n        _this.currentPage = res.data.data.pageNo;\n        _this.perPage = res.data.data.pageSize;\n        _this.totalPages = res.data.data.totalPages;\n        _this.rows = res.data.data.rowCount;\n        var myArr = [];\n        myData.map(function (item, i) {\n          myArr.push({\n            operationType: item.operationType,\n            operator: item.userName,\n            time: _this.getDateString(item.createTime),\n            userId: item.userId\n          });\n        });\n        _this.items = myArr;\n      });\n    },\n    turnToPage: function turnToPage(p) {\n      this.getVehicleOperatorList(p);\n    },\n    changeFL: function changeFL(m) {\n      if (m === 'last') {\n        this.getVehicleOperatorList(this.totalPages);\n      } else if (m === 'first') {\n        this.getVehicleOperatorList(1);\n      }\n    },\n    nextPage: function nextPage() {\n      this.getVehicleOperatorList(this.currentPage + 1);\n    },\n    prevPage: function prevPage() {\n      this.getVehicleOperatorList(this.currentPage - 1);\n    }\n  }\n};",null]}