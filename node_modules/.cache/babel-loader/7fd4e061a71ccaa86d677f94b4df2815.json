{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js!/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/vehicle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/vehicle.vue","mtime":1560932052000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpclient from '@/utils/httpclient';\nimport googleMap from '@components/googleMap';\nexport default {\n  name: \"vehicle\",\n  components: {\n    googleMap: googleMap\n  },\n  inject: [\"reload\"],\n  data: function data() {\n    return {\n      tableFields: {\n        photoUrl: {\n          label: 'Photo',\n          class: 'text-center'\n        },\n        vehicle: {\n          label: 'Vehicle',\n          class: 'text-center'\n        },\n        park: {\n          label: 'Lot',\n          class: 'text-center'\n        },\n        battery: {\n          label: 'Voltage',\n          class: 'text-center'\n        },\n        online: {\n          label: 'Online/Offline',\n          class: 'text-center'\n        },\n        use: {\n          label: 'Available/In Use',\n          class: 'text-center'\n        },\n        price: {\n          label: 'Price',\n          class: 'text-center'\n        },\n        inventory: {\n          label: 'Inventory Age',\n          class: 'text-center'\n        },\n        action: {\n          label: 'Actions',\n          class: 'text-center'\n        }\n      },\n      data: null,\n      table: null,\n      showMap: false,\n      map: {},\n      rows: 0,\n      currentPage: 1,\n      total: 0,\n      perPage: 10,\n      showDelMap: false,\n      delId: '',\n      showEtip: false,\n      pageCount: 0,\n      gFData: [],\n      search: '',\n      queryData: {}\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var self = this;\n    this.axiosApi(self, 1, this.$route.query.filters ? JSON.parse(this.$route.query.filters) : []);\n    this.getFilter(); //初始化checkbox勾选\n\n    var myData = this.$route.query.filters ? JSON.parse(this.$route.query.filters) : [];\n\n    if (myData.length) {\n      myData.map(function (item) {\n        _this.queryData[item.key] = item.value;\n      });\n    }\n  },\n  methods: {\n    getFilter: function getFilter() {\n      var _this2 = this;\n\n      httpclient.post('/api/v1/vehiclesearch/filter').then(function (response) {\n        _this2.gFData = response.data.data;\n      }).catch(function () {});\n    },\n    searchData: function searchData() {\n      var search = [];\n      var keys = [];\n      this.$refs.checkbox.forEach(function (item) {\n        if (item.is_Checked) {\n          if (keys.includes(item.name)) {\n            var _arr = search;\n\n            for (var _i = 0; _i < _arr.length; _i++) {\n              var it = _arr[_i];\n              if (it.key == item.name) it.value.push(item.value);\n            }\n          } else {\n            search.push({\n              key: item.name,\n              value: [item.value]\n            });\n            keys.push(item.name);\n          }\n        }\n      });\n      this.axiosApi(this, 1, search);\n    },\n    axiosApi: function axiosApi(self, page, obj) {\n      var _this3 = this;\n\n      httpclient.post(\"/api/v1/vehiclesearch/searchnew?searchText=\".concat(this.search, \"&source=&pageNo=\").concat(page, \"&pageSize=10\"), {\n        filters: obj\n      }).then(function (response) {\n        self.data = response.data.data;\n        self.total = response.data.data.rowCount ? response.data.data.rowCount : 0;\n        self.currentPage = response.data.data.pageNo ? response.data.data.pageNo : 0;\n        self.pageCount = response.data.data.pageCount ? response.data.data.pageCount : 0;\n\n        _this3.filterData(self.data.vehicles);\n      }).catch(function (err) {\n        alert(err);\n      });\n    },\n    formatNumber: function formatNumber(nStr) {\n      nStr += '';\n      var x = nStr.split('.');\n      var x1 = x[0];\n      var x2 = x.length > 1 ? '.' + x[1] : '';\n      var rgx = /(\\d+)(\\d{3})/;\n\n      while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n      }\n\n      return x1 + x2;\n    },\n    changePage: function changePage(page) {\n      var self = this;\n      this.axiosApi(self, page, []);\n    },\n    apiDel: function apiDel() {\n      var _this4 = this;\n\n      httpclient.post('/api/v1/vehicle/delete', {\n        vehicleId: this.delId\n      }).then(function (response) {\n        if (response.data.code == 200) {\n          _this4.reload();\n        } else {\n          _this4.showEtip = true;\n        }\n      }).catch(function () {\n        _this4.showEtip = true;\n      });\n    },\n    showMapTip: function showMapTip(lat, lng, area, info) {\n      if (lat || area) {\n        this.map = {\n          lat: lat,\n          lng: lng,\n          area: area,\n          vehicleInfo: info\n        };\n        this.showMap = true;\n      }\n    },\n    hideModal: function hideModal() {\n      this.$refs['my-modal'].hide();\n    },\n    delData: function delData(id) {\n      this.delId = id;\n      this.showDelMap = true;\n    },\n    filterData: function filterData(data) {\n      var self = this;\n      this.table = data.map(function (item) {\n        var pack = item.outStatus == 1 ? item.parkingName : \"N/A\";\n        var battery = null;\n        var batteryClass = null;\n\n        if (item.currentVoltage) {\n          var numBat = item.currentVoltage.toFixed(1);\n          battery = item.currentVoltage.toFixed(1) + ' V';\n          batteryClass = numBat <= 11.7 ? 'badge-danger' : numBat > 11.7 && numBat <= 12.1 ? 'badge-warning' : 'badge-success';\n        } else {\n          battery = \"N/A\";\n          batteryClass = 'badge-secondary';\n        }\n\n        var onlineStatus = item.isOnline == 1 ? \"Online\" : \"Offline\";\n        var year = item.year ? item.year : 'N/A';\n        var make = item.make ? item.make : 'N/A';\n        var model = item.model ? item.model : 'N/A';\n        var info = year == 'N/A' && make == 'N/A' && model == 'N/A' ? 'N/A' : year + ' ' + make + ' ' + model;\n        var color = item.color ? item.color : 'N/A';\n        var trim = item.trim ? item.trim : 'N/A';\n        var colorTrim = color == 'N/A' && trim == 'N/A' ? 'N/A' : color + ' , ' + trim;\n        return {\n          \"photoUrl\": item.photoUrl ? item.photoUrl : require(\"@/assets/pages-img/placeholder.svg\"),\n          \"vehicle\": info,\n          \"colorTrim\": colorTrim,\n          \"stock\": item.stockNumber ? item.stockNumber : 'N/A',\n          \"park\": pack,\n          \"battery\": battery,\n          \"batteryClass\": batteryClass,\n          \"online\": onlineStatus,\n          \"use\": item.available == 0 ? 'Available' : 'In Use',\n          \"price\": item.price ? item.priceUnit + ' ' + self.formatNumber(item.price) : 'N/A',\n          \"inventory\": item.inventoryDays ? item.inventoryDays + ' Days' : 'N/A',\n          \"action\": \"<span>action</span>\",\n          \"vehicleId\": item.vehicleId,\n          \"unboundStatus\": item.isOnline == 3 ? 'Unbound' : '',\n          \"info\": info,\n          \"lat\": item.lastLocationLat,\n          \"lng\": item.lastLocationLng,\n          \"area\": item.areaCoordinates\n        };\n      });\n    }\n  }\n};",null]}