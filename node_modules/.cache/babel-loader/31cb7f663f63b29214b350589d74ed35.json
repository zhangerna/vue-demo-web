{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js!/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/shopEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/shopEdit.vue","mtime":1567594357000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpClient from \"@/utils/httpclient\";\nimport model from \"@/components/model\";\nexport default {\n  name: \"addShop\",\n  components: {\n    model: model\n  },\n  data: function data() {\n    return {\n      btnGroup: {\n        btnFirst: \"Cancel\",\n        btnSecond: 'OK'\n      },\n      showTip: false,\n      saveStatus: false,\n      title: \"\",\n      info: \"\",\n      name: \"\",\n      list: [],\n      country: '',\n      state: '',\n      city: '',\n      street: \"\",\n      cityE: false,\n      stateE: false,\n      countryE: false,\n      apartment: \"\",\n      zipCode: \"\",\n      zipE: false,\n      apartE: false,\n      streetE: false,\n      nameE: false,\n      hasSubmit: false,\n      managerE: false,\n      managerList: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.$route.params.id) {\n      httpClient.get(\"/api/v1/store/detail?storeId=\" + this.$route.params.id, {}).then(function (res) {\n        if (res.data.code == 200) {\n          httpClient.get(\"/api/v1/getprovicescity\").then(function (resp) {\n            if (resp.data.code == 200) {\n              _this.list = resp.data.data.countryList;\n\n              _this.filterCountry(res.data.data.countryEn, res.data.data.stateEn, res.data.data.cityEn);\n            }\n          });\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _getIterator(res.data.data.userList), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var item = _step.value;\n\n              _this.managerList.push({\n                email: item.userEmail,\n                phone: item.userPhone,\n                lastName: item.lastName,\n                firstName: item.firstName,\n                ori: true\n              });\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this.managerList.length == 0 ? _this.managerList.push({\n            email: \"\",\n            phone: \"\",\n            lastName: \"\",\n            firstName: \"\"\n          }) : '';\n          _this.name = res.data.data.storeName;\n          _this.street = res.data.data.streetAddress;\n          _this.apartment = res.data.data.storeAddress;\n          _this.zipCode = res.data.data.zipCode;\n        }\n      });\n    }\n  },\n  methods: {\n    filterCountry: function filterCountry(country, state, city) {\n      for (var i = 0; i < this.list.length; i++) {\n        if (this.list[i].countryName == country) {\n          this.country = i + 1;\n        }\n      }\n\n      if (this.country) {\n        for (var _i = 0; _i < this.list[this.country - 1].proviceList.length; _i++) {\n          if (this.list[this.country - 1].proviceList[_i].proviceName == state) {\n            this.state = _i + 1;\n          }\n        }\n      }\n\n      if (this.country && this.state) {\n        for (var k = 0; k < this.list[this.country - 1].proviceList[this.state - 1].cityList.length; k++) {\n          if (this.list[this.country - 1].proviceList[this.state - 1].cityList[k].cityName == city) {\n            this.city = k + 1;\n          }\n        }\n      }\n    },\n    addAdmin: function addAdmin() {\n      this.managerList.push({\n        email: \"\",\n        phone: \"\",\n        lastName: \"\",\n        firstName: \"\"\n      });\n    },\n    checkData: function checkData() {\n      this.hasSubmit = true;\n      this.nameE = this.name ? false : true;\n      this.zipE = this.zipCode ? false : true;\n      this.streetE = this.street ? false : true;\n      this.apartE = this.apartment ? false : true;\n      this.countryE = this.country ? false : true;\n      this.stateE = this.state ? false : true;\n      this.cityE = this.city ? false : true;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(this.managerList), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (!item.email || item.email.indexOf(\"@\") < 0 || !item.phone || !item.lastName || !item.firstName) {\n            this.managerE = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    updateData: function updateData() {\n      var _this2 = this;\n\n      this.checkData();\n\n      if (!this.nameE && !this.zipE && !this.streetE && !this.apartE && !this.managerE && !this.countryE && !this.stateE && !this.cityE) {\n        httpClient.post('/api/v1/store/update', {\n          insertSaasTenantStoreDTO: {\n            id: this.$route.params.id,\n            cityCode: this.list[this.country - 1]['proviceList'][this.state - 1]['cityList'][this.city - 1].cityId,\n            countryCode: this.list[this.country - 1].countryId,\n            stateCode: this.list[this.country - 1]['proviceList'][this.state - 1].provicesId,\n            storeAddress: this.apartment,\n            storeName: this.name,\n            streetAddress: this.street,\n            zipCode: this.zipCode\n          },\n          inviteUserParamDTO: this.managerList\n        }).then(function (res) {\n          //弹窗\n          if (res.data.code === 200 && res.data.data.result) {\n            _this2.saveStatus = true;\n          }\n        });\n      }\n    },\n    saveAndLink: function saveAndLink() {\n      this.$router.push('/shop-manager');\n    }\n  }\n};",null]}