{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/testReportDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/testReportDetail.vue","mtime":1576568278000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport echarts from \"echarts\";\nimport httpClient from \"@/utils/httpclient\";\nimport polygonMap from \"@/components/tripMap\";\nimport tableCard from \"./components/reportDetail/index.vue\";\nimport { emotion, speed, accele, turns, pong, initEmotion, insertTable } from \"./components/reportDetail/index\";\nimport { timeInspect, getDateString2, filterCardTime, getDateString3, getDateString4, getDateStringEnglish } from \"@/utils/date\";\nexport default {\n  name: \"testReport\",\n  inject: [\"reload\"],\n  components: {\n    polygonMap: polygonMap,\n    tableCard: tableCard\n  },\n  data: function data() {\n    return {\n      emotion: emotion,\n      speed: speed,\n      accele: accele,\n      turns: turns,\n      pong: pong,\n      speedTable: null,\n      accTable: null,\n      turnTable: null,\n      pongTable: null,\n      userDetail: {},\n      driveInfo: {},\n      area: null,\n      satisify: [{\n        name: this.$t(\"m.report.milege30\"),\n        id: 9\n      }, {\n        name: this.$t(\"m.report.static\"),\n        id: 10\n      }, {\n        name: this.$t(\"m.report.more60\"),\n        id: 2\n      }, {\n        name: this.$t(\"m.report.straight\"),\n        id: 14\n      }, {\n        name: this.$t(\"m.report.acceleration\"),\n        id: 12\n      }, {\n        name: this.$t(\"m.report.content_speed\"),\n        id: 11\n      }, {\n        name: this.$t(\"m.report.normal_speed\"),\n        id: 16\n      }, {\n        name: this.$t(\"m.report.turnCard\"),\n        id: 15\n      }, {\n        name: this.$t(\"m.report.pongPoint\"),\n        id: 8\n      }, {\n        name: this.$t(\"m.report.brake\"),\n        id: 13\n      }, {\n        name: this.$t(\"m.report.cut30\"),\n        id: 3\n      }],\n      emotionNetData: [],\n      reverseEmotionData: {},\n      userBehavior: {},\n      reportArray: [\"\", this.$t(\"m.report.outline_size\"), this.$t(\"m.report.modeling_aesthetics\"), this.$t(\"m.report.ride_comfort\"), this.$t(\"m.report.comfortable_seat\"), this.$t(\"m.report.sound_effects\"), this.$t(\"m.report.air_conditioning\"), this.$t(\"m.report.sound_effect\"), this.$t(\"m.report.feeling_wheel\"), this.$t(\"m.report.brake_force\"), this.$t(\"m.report.steering_flexibility\"), this.$t(\"m.report.view\"), this.$t(\"m.report.starting_acceleration\"), this.$t(\"m.report.halfway_acceleration\"), this.$t(\"m.report.dynamic_stability\"), this.$t(\"m.report.stability_denaturation\"), this.$t(\"m.report.automotive_interior\"), this.$t(\"m.report.technological_level\"), this.$t(\"m.report.interior_color\"), this.$t(\"m.report.internal_space\"), this.$t(\"m.report.operation_key\"), this.$t(\"m.report.overall_satisfaction\"), this.$t(\"m.report.suggestions_evaluation\")],\n      surveyReport: false,\n      surveyMsg: \"\",\n      showAdviseAlert: false,\n      questionnaireContent: \"\",\n      starId: 0,\n      starNum: 0,\n      surveyMsgId: 0\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // coordinatetype 1,WGS84全球坐标系  2,GCJ02火星坐标系  3,BD09百度坐标系\n    httpClient.get(\"/api/v1/clouddrive/report/detail?coordinatetype=1&orderid=\" + this.$route.params.id).then(function (response) {\n      if (response.data.code == 200) {\n        var data = response.data.data; // this.stars = response.data.data.surveyFeedbackDTO ? response.data.data.surveyFeedbackDTO[0].questionnaireContent :'';\n\n        _this.userDetail = data.userDetailDTO ? data.userDetailDTO : {};\n        _this.driveInfo = data.cloudDriveReportDTO.clouddriveTripDataDTO;\n        _this.area = {\n          area: data.cloudDriveReportDTO.tracesDataDTOList,\n          center: data.cloudDriveReportDTO.tracesDataDTOList[0]\n        };\n        _this.userBehavior = data.cloudDriveReportDTO.alarmPushDTOList;\n\n        _this.getEmotion(data.cloudDriveReportDTO.wholeEmotionDTO);\n\n        _this.getSpeed(data.cloudDriveReportDTO.emotionList, data.cloudDriveReportDTO.speedList, data.cloudDriveReportDTO.clouddriveTripDataDTO.maxSpeed);\n\n        _this.getAcceleration(data.cloudDriveReportDTO.emotionList, data.cloudDriveReportDTO.accelerationDataList, data.cloudDriveReportDTO.clouddriveTripDataDTO.maxAcceleration);\n\n        _this.getTurn(data.cloudDriveReportDTO.emotionList, data.cloudDriveReportDTO.turnDataDTOS); //碰撞点为0， 则不现实整个模块\n\n\n        _this.getPong(data.cloudDriveReportDTO.emotionList, data.cloudDriveReportDTO.accelerationDataList, data.cloudDriveReportDTO ? data.cloudDriveReportDTO.bumpyEventsNew : []);\n\n        data.cloudDriveReportDTO.clouddriveEmotionStatisticsDataDTO ? _this.initTable(data.cloudDriveReportDTO.clouddriveEmotionStatisticsDataDTO) : null; // 单人试驾报告\n\n        if (data.surveyFeedbackDTO) {\n          _this.surveyReport = data.surveyFeedbackDTO.slice(0, 20);\n          _this.starId = data.surveyFeedbackDTO.slice(20, 21)[0].subjectId;\n          _this.starNum = Number(data.surveyFeedbackDTO.slice(20, 21)[0].questionnaireContent);\n\n          if (data.surveyFeedbackDTO[21]) {\n            _this.surveyMsg = data.surveyFeedbackDTO.slice(21)[0].questionnaireContent;\n            _this.surveyMsgId = data.surveyFeedbackDTO.slice(21)[0].subjectId;\n          }\n        }\n      }\n    });\n  },\n  methods: {\n    initBaseData: function initBaseData(driveData) {\n      var driveDatas = [];\n      driveData.map(function (item) {\n        driveDatas.push(getDateString3(item.driveTime));\n      });\n      return {\n        driveDatas: driveDatas\n      };\n    },\n    initTable: function initTable(data) {\n      var _this2 = this;\n\n      var temp = {};\n      var sortData = [];\n      data.map(function (item) {\n        _this2.satisify.map(function (it) {\n          if (it.id == item.driveType) {\n            sortData.push({\n              id: it.id,\n              name: it.name,\n              value: (item.emotionNetWorth * 100).toFixed(1)\n            });\n          }\n        });\n\n        temp[item.driveType] = {\n          durationTime: item.durationTime,\n          durationTimeStatictics: (item.durationTimeStatictics * 100).toFixed(1),\n          neutralEmotionStatistics: (item.neutralEmotionStatistics * 100).toFixed(1),\n          positiveEmotionStatistics: (item.positiveEmotionStatistics * 100).toFixed(1),\n          negativeEmotionStatistics: (item.negativeEmotionStatistics * 100).toFixed(1),\n          emotionNetWorth: (item.emotionNetWorth * 100).toFixed(1)\n        };\n      });\n      this.speedTable = insertTable(\"speed\", [10, 3, 9, 2], temp);\n      this.accTable = insertTable(\"acc\", [11, 12, 13, 0], temp);\n      this.turnTable = insertTable(\"turn\", [14, 15, 0, 0], temp);\n      this.pongTable = insertTable(\"pong\", [16, 8, 0, 0], temp);\n      var emotionArray = sortData.sort(function (f, l) {\n        return l.value - f.value;\n      });\n      this.emotionNetData = JSON.parse(_JSON$stringify(emotionArray));\n      this.reverseEmotionData = emotionArray.reverse().slice(0, 3);\n    },\n    getPong: function getPong(data, driveData, eventData) {\n      var _this3 = this;\n\n      var eventList = [];\n      eventData.map(function (item) {\n        eventList.push({\n          xAxis: getDateString3(item.driveTime),\n          tooltip: {\n            trigger: \"item\",\n            formatter: function formatter(data) {\n              return data.data.xAxis + \"<br />\".concat(_this3.$t(\"m.report.pongPoint\"));\n            }\n          },\n          yAxis: 20\n        });\n      });\n\n      var _initEmotion = initEmotion(data),\n          emotionList = _initEmotion.emotionList,\n          area = _initEmotion.area,\n          line = _initEmotion.line;\n\n      this.pong.series.markArea.data = area;\n\n      var _this$initBaseData = this.initBaseData(driveData),\n          driveDatas = _this$initBaseData.driveDatas;\n\n      this.pong.xAxis.data = driveDatas;\n      this.pong.series.data = emotionList;\n      this.pong.series.markLine.data = line;\n      this.pong.series.markPoint.data = eventList;\n      echarts.init(document.getElementById(\"pong\")).setOption(this.pong);\n    },\n    getTurn: function getTurn(data, accData) {\n      var accList = [];\n      var yList = [];\n\n      var _this$defaultEmotion = this.defaultEmotion(data),\n          area = _this$defaultEmotion.area,\n          line = _this$defaultEmotion.line;\n\n      accData.map(function (item) {\n        accList.push(getDateString3(item.driveTime));\n        yList.push(item.turn);\n      });\n      this.turns.series.markArea.data = area;\n      this.turns.series.markLine.data = line;\n      this.turns.xAxis.data = accList;\n      this.turns.series.data = yList;\n      echarts.init(document.getElementById(\"turn\")).setOption(this.turns);\n    },\n    defaultEmotion: function defaultEmotion(data, max) {\n      var emotionList = [];\n      var area = [];\n      var line = [];\n      data.map(function (item) {\n        emotionList.push(item.emotion);\n\n        if (item.emotion == 10 || item.emotion == 0) {\n          line.push([{\n            xAxis: item.emotionStartTime ? getDateString3(item.emotionStartTime) : 0,\n            yAxis: 0,\n            itemStyle: {\n              color: \"#fbdc7f\",\n              width: 2\n            }\n          }, {\n            yAxis: 0,\n            xAxis: item.emotionEndTIme ? getDateString3(item.emotionEndTIme) : 0\n          }]);\n        } else {\n          area.push([{\n            xAxis: item.emotionStartTime ? getDateString3(item.emotionStartTime) : 0,\n            temp: item.emotion,\n            yAxis: max ? item.emotion == 20 ? 0 : Number(\"-\" + max) : item.emotion == 20 ? 0 : -10,\n            itemStyle: {\n              color: item.emotion == 20 ? \"#a2dab6\" : item.emotion == 30 ? \"#f8b2b1\" : \"#fbdc7f\"\n            }\n          }, {\n            yAxis: max ? item.emotion == 20 ? max : 0 : item.emotion == 20 ? 10 : 0,\n            xAxis: item.emotionEndTIme ? getDateString3(item.emotionEndTIme) : 0\n          }]);\n        }\n      });\n      return {\n        emotionList: emotionList,\n        area: area,\n        line: line\n      };\n    },\n    getAcceleration: function getAcceleration(data, accData, maxAcc) {\n      var _this$defaultEmotion2 = this.defaultEmotion(data, Math.ceil(maxAcc)),\n          area = _this$defaultEmotion2.area,\n          line = _this$defaultEmotion2.line;\n\n      var accList = [];\n      var yList = [];\n      accData.map(function (item) {\n        accList.push(getDateString3(item.driveTime));\n        yList.push(item.acceleration.toFixed(1));\n      });\n      this.accele.yAxis.min = \"-\" + Math.ceil(Number(maxAcc));\n      this.accele.yAxis.max = Math.ceil(Number(maxAcc));\n      this.accele.yAxis.interval = Math.ceil(Number(maxAcc));\n      this.accele.series.markArea.data = area;\n      this.accele.series.markLine.data = line;\n      this.accele.xAxis.data = accList;\n      this.accele.series.data = yList;\n      echarts.init(document.getElementById(\"acceleration\")).setOption(this.accele);\n    },\n    getSpeed: function getSpeed(data, speedData, highSpeed) {\n      var _initEmotion2 = initEmotion(data, \"speed\", highSpeed),\n          area = _initEmotion2.area,\n          line = _initEmotion2.line;\n\n      var speedList = [];\n      var yList = [];\n      speedData.map(function (item) {\n        speedList.push(getDateString3(item.driveTime));\n        yList.push(item.speed.toFixed(1));\n      });\n      this.speed.series.markArea.data = area;\n      this.speed.series.markLine.data = line;\n      this.speed.xAxis.data = speedList;\n      this.speed.yAxis.interval = Math.ceil(highSpeed / 2);\n      this.speed.yAxis.max = Math.ceil(highSpeed);\n      this.speed.series.data = yList;\n      echarts.init(document.getElementById(\"speed\")).setOption(this.speed);\n    },\n    getEmotion: function getEmotion(data) {\n      this.emotion.series[0].data[0].value = (data.positiveEmotionStatistics * 100).toFixed(1);\n      this.emotion.series[0].data[1].value = (data.negativeEmotionStatistics * 100).toFixed(1);\n      this.emotion.series[0].data[2].value = (data.neutralEmotionStatistics * 100).toFixed(1);\n      echarts.init(document.getElementById(\"emotion\")).setOption(this.emotion);\n    },\n    showAdvise: function showAdvise() {\n      if (this.surveyMsg === \"\") {\n        this.showAdviseAlert = false;\n      } else {\n        this.showAdviseAlert = true;\n      }\n    },\n    closeAdvise: function closeAdvise() {\n      this.showAdviseAlert = false;\n    },\n    filterCardTime: filterCardTime,\n    timeInspect: timeInspect,\n    getDateString2: getDateString2,\n    getDateString4: getDateString4,\n    getDateStringEnglish: getDateStringEnglish\n  }\n};",{"version":3,"sources":["testReportDetail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <b-card class=\"custom-header\">\n            <div slot=\"header\">\n                {{ $t(\"m.report.title\") }}\n                <div class=\"float-right\">{{ $t(\"m.report.create_time\") }}:{{ driveInfo.reportFinishTime ?\n                    getDateString4(driveInfo.reportFinishTime) : \"\" }}\n                </div>\n            </div>\n            <div class=\"content\">\n                <!--                客户信息-->\n                <b-card>\n                    <div slot=\"header\">\n                        {{ $t(\"m.report.user_title\") }}\n                        <div class=\"float-right\">\n                            {{ $t(\"m.report.userId\") }}:\n                            {{ userDetail.userServiceNum }}\n                        </div>\n                    </div>\n                    <div class=\"content\">\n                        <b-row style=\"position: relative\">\n                            <b-col sm=\"4\" style=\"overflow: hidden\">\n                                <img id=\"img-user\"\n                                     :src=\"userDetail.rotateFaceRecognitionUrl ? userDetail.rotateFaceRecognitionUrl : userDetail.faceRecognitionUrl\"\n                                     width=\"100%\" style=\"max-width: 250px\"/>\n                            </b-col>\n                            <b-col sm=\"4\">\n                                <p>{{ $t(\"m.admin.name\") }}:{{ userDetail.idCardUserName }}</p>\n                                <p>{{ $t(\"m.add_shop.manager_phone\") }}:{{ userDetail.userPhone }}</p>\n                                <p>{{ $t(\"m.cloud.birth_day\") }}:{{ userDetail.idCardBirthDate ?\n                                    filterCardTime(userDetail.idCardBirthDate) : \"\" }}</p>\n                                <p>{{ $t(\"m.report.age\") }}:{{ userDetail.userAge ? userDetail.userAge : \"\" }}</p>\n                                <p>{{ $t(\"m.report.id_card_valid\") }}:{{ userDetail.idCardExpireDate ?\n                                    filterCardTime(userDetail.idCardExpireDate.split(\"-\")[0]) : \"\" }}-{{\n                                    userDetail.idCardExpireDate ?\n                                    filterCardTime(userDetail.idCardExpireDate.split(\"-\")[1]) : \"\" }}</p>\n                                <p>\n                                    {{ $t(\"m.report.quasi_drive_type\") }}:\n                                    {{ userDetail.driveLicenseQuasiDrivingModel }}\n                                </p>\n                                <p>\n                                    {{ $t(\"m.report.appoint_address\") }}:\n                                    {{ userDetail.userConfirmAddress }}\n                                </p>\n                                <p>{{ $t(\"m.report.drive_age\") }}: {{ userDetail.driveAgeYear }}{{ $t(\"m.report.year\")\n                                    }}{{ userDetail.driveAgeMonth }}{{ $t(\"m.report.month\") }}</p>\n                            </b-col>\n                            <b-col sm=\"4\">\n                                <p>{{ $t(\"m.cloud.gender\") }}:{{ userDetail.driveLicenseGender ?\n                                    (userDetail.driveLicenseGender == 1 ? $t(\"m.common.boy\") : $t(\"m.common.girl\")) : \"\"\n                                    }}</p>\n                                <p>{{ $t(\"m.report.national\") }}:{{ userDetail.idCardEthnicGroup }}</p>\n                                <p>{{ $t(\"m.report.id_card_num\") }}:{{ userDetail.idCardNumber }}</p>\n                                <p>{{ $t(\"m.report.regist_address\") }}:{{ userDetail.idCardAddress }}</p>\n                                <p>\n                                    {{ $t(\"m.report.drive_date\") }}:\n                                    {{ userDetail.driveLicenseInitDate ? filterCardTime(userDetail.driveLicenseInitDate)\n                                    : \"\" }}\n                                </p>\n                                <p>\n                                    {{ $t(\"m.report.drive_valid\") }}:{{ userDetail.driveLicenseInitDate ?\n                                    filterCardTime(userDetail.driveLicenseInitDate) : \"\" }}\n                                    -\n                                    {{ userDetail.driveLicenseExpireDate ?\n                                    filterCardTime(userDetail.driveLicenseExpireDate) : \"\" }}\n                                </p>\n                                <p>\n                                    {{ $t(\"m.cloud.order_create_time\") }}:\n                                    {{ userDetail.orderCreateTime ? getDateStringEnglish(userDetail.orderCreateTime) :\n                                    \"\" }}\n                                </p>\n                                <p>{{ $t(\"m.report.phone_type\") }}:{{ userDetail.userAgent }}</p>\n                            </b-col>\n                        </b-row>\n                    </div>\n                </b-card>\n                <!--                试驾信息-->\n                <b-card>\n                    <div slot=\"header\">\n                        {{ $t(\"m.report.drive_title\") }}\n                        <div class=\"float-right\">\n                            {{ $t(\"m.report.orderNo\") }}:\n                            {{ userDetail.orderServiceNum }}\n                        </div>\n                    </div>\n                    <div class=\"content\">\n                        <b-row>\n                            <b-col sm=\"4\">\n                                <polygon-map :map=\"area\"></polygon-map>\n                            </b-col>\n                            <b-col sm=\"4\">\n                                <p>{{ $t(\"m.common.test_drive\") }}: {{ userDetail.year }}{{ userDetail.make }}{{\n                                    userDetail.model }}</p>\n                                <p>\n                                    {{ $t(\"m.report.vehicle_config\") }}:\n                                    {{ userDetail.vehicleTrim }}\n                                </p>\n                                <p>\n                                    {{ $t(\"m.lots.lot2\") }}:\n                                    {{ userDetail.parkingName }}\n                                </p>\n                                <p>\n                                    {{ $t(\"m.cloud.vehicle_store_name\") }}:\n                                    {{ userDetail.storeName }}\n                                </p>\n                                <p>\n                                    {{ $t(\"m.report.test_time\") }}:\n                                    {{ userDetail.orderTakeTime ? timeInspect(userDetail.orderTakeTime,\n                                    userDetail.orderReturnTime) : \"\" }}\n                                </p>\n                                <p>{{ $t(\"m.report.test_drive_mileage\") }}: {{ driveInfo.totalTrip ? driveInfo.totalTrip\n                                    : \"0\" }}{{ $t(\"m.report.km\") }}</p>\n                                <p>{{ $t(\"m.report.test_drive_avg_speed\") }}: {{ driveInfo.averageSpeed ?\n                                    driveInfo.averageSpeed.toFixed(2) : \"0\" }}{{ $t(\"m.report.speed_unit\") }}</p>\n                                <p>{{ $t(\"m.report.total_oil\") }}: {{ driveInfo.totalOilConsumption ?\n                                    driveInfo.totalOilConsumption.toFixed(2) : \"0\" }}{{ $t(\"m.report.ltre\") }}</p>\n                                <p>\n                                    {{ $t(\"m.report.is_pong\") }}:\n                                    {{ driveInfo.collisionStatus == 0 ? $t(\"m.report.col0\") : $t(\"m.report.col1\") }}\n                                </p>\n                            </b-col>\n                            <b-col sm=\"4\">\n                                <p>\n                                    {{ $t(\"m.cloud.plat_number\") }}:\n                                    {{ userDetail.plat }}\n                                </p>\n                                <p>\n                                    {{ $t(\"m.cloud.vehicle_c\") }}:\n                                    {{ userDetail.color }}\n                                </p>\n                                <p>\n                                    {{ $t(\"m.report.appoint_time\") }}:\n                                    {{ userDetail.appointmentStartTime ? getDateString2(userDetail.appointmentStartTime)\n                                    : 0 }}\n                                </p>\n                                <p>{{ $t(\"m.report.test_drive_duration\") }}: {{ userDetail.driveTime ?\n                                    (userDetail.driveTime / 1000 / 60).toFixed(0) : \"0\" }}{{ $t(\"m.report.min\") }}</p>\n                                <p>{{ $t(\"m.report.max_speed\") }}: {{ driveInfo.maxSpeed ? driveInfo.maxSpeed.toFixed(0)\n                                    : 0 }}{{ $t(\"m.report.speed_unit\") }}</p>\n                                <p>{{ $t(\"m.report.acc_speed\") }}: {{ driveInfo.maxAcceleration ?\n                                    driveInfo.maxAcceleration.toFixed(0) : 0 }}{{ $t(\"m.report.acc_unit\") }}</p>\n                                <p>{{ $t(\"m.report.a_oil\") }}: {{ driveInfo.averageOilConsumption ?\n                                    driveInfo.averageOilConsumption.toFixed(2) : 0 }}{{ $t(\"m.report.oilMile\") }}</p>\n                                <p>{{ $t(\"m.report.test_drive_times\") }}: {{ userDetail.driveTimes ?\n                                    userDetail.driveTimes : 0 }}{{ $t(\"m.report.times\") }}</p>\n                            </b-col>\n                        </b-row>\n                    </div>\n                </b-card>\n                <!--                试驾情绪综合分析-->\n                <b-card>\n                    <div slot=\"header\">\n                        {{ $t(\"m.report.space_title\") }}\n                    </div>\n                    <div class=\"content whole-emotion\">\n                        <b-row>\n                            <b-col sm=\"6\">\n                                <b-card style=\"height: 84%\">\n                                    <div slot=\"header\" style=\"font-weight:bolder\">\n                                        {{ $t(\"m.report.whole_emotion\") }}\n                                    </div>\n                                    <div class=\"content\">\n                                        <div id=\"emotion\"></div>\n                                    </div>\n                                </b-card>\n                            </b-col>\n                            <b-col sm=\"6\">\n                                <!--                                高兴情绪-->\n                                <table class=\"table table-responsive-sm table-bordered\">\n                                    <thead style=\"background: #f0f3f5\">\n                                    <tr>\n                                        <th>\n                                            {{ $t(\"m.report.project_sort\") }}\n                                        </th>\n                                        <th>\n                                            {{ $t(\"m.cloud.emotion_net_worth\") }}\n                                        </th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr v-for=\"(item, key) in emotionNetData\" :key=\"key\" v-if=\"key < 3\"\n                                        :class=\"key < 3 ? 'green-deep' : ''\">\n                                        <td>{{ item.name }}</td>\n                                        <td>{{ item.value }}%</td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                                <!--                                不高兴情绪   -->\n                                <table class=\"table table-responsive-sm table-bordered\">\n                                    <thead style=\"background: #f0f3f5\">\n                                    <tr>\n                                        <th>\n                                            {{ $t(\"m.report.no_sure_project_sort\") }}\n                                        </th>\n                                        <th>\n                                            {{ $t(\"m.cloud.emotion_net_worth\") }}\n                                        </th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr v-for=\"(item, key) in reverseEmotionData\" :key=\"key\"\n                                        :class=\"key < 3 ? ' red-deep' : ''\">\n                                        <td>{{ item.name }}</td>\n                                        <td>{{ item.value }}%</td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            </b-col>\n                        </b-row>\n                    </div>\n                    <div class=\"content\"></div>\n                </b-card>\n                <!--                用户行为统计-->\n                <b-card>\n                    <div slot=\"header\">\n                        {{ $t(\"m.report.user_behavior\") }}\n                    </div>\n                    <div class=\"content\">\n                        <table class=\"table table-responsive-sm table-bordered text-center\">\n                            <thead>\n                            <tr style=\"background: #f0f3f5\">\n                                <th>{{ $t(\"m.report.la_door\") }}</th>\n                                <th>{{ $t(\"m.report.ra_door\") }}</th>\n                                <th>{{ $t(\"m.report.lb_door\") }}</th>\n                                <th>{{ $t(\"m.report.rb_door\") }}</th>\n                                <th>{{ $t(\"m.report.trunk\") }}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr>\n                                <td>{{ userBehavior.lfDoor }}{{ $t(\"m.report.times\") }}</td>\n                                <td>{{ userBehavior.rfDoor }}{{ $t(\"m.report.times\") }}</td>\n                                <td>{{ userBehavior.laDoor }}{{ $t(\"m.report.times\") }}</td>\n                                <td>{{ userBehavior.raDoor }}{{ $t(\"m.report.times\") }}</td>\n                                <td>{{ userBehavior.trunk }}{{ $t(\"m.report.times\") }}</td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </b-card>\n                <!--            速度分析       -->\n                <b-card>\n                    <div slot=\"header\">\n                        {{ $t(\"m.report.power_title\") }}\n                    </div>\n                    <div class=\"content\">\n                        <div class=\"label-group row text-center\" style=\"width: 60%;margin: 0 auto\">\n                            <div class=\"col-sm-3 blue\"><i class=\"icon-style blue-icon\"></i>{{ $t(\"m.report.route_speed\")\n                                }}\n                            </div>\n                            <div class=\"col-sm-3 green\"><i class=\"icon-style green-icon\"></i>{{ $t(\"m.report.emotion20\")\n                                }}\n                            </div>\n                            <div class=\"col-sm-3 red\"><i class=\"icon-style red-icon\"></i>{{ $t(\"m.report.emotion30\") }}\n                            </div>\n                            <div class=\"col-sm-3 yellow\"><i class=\"icon-style yellow-icon\"></i>{{\n                                $t(\"m.report.emotion10\") }}\n                            </div>\n                        </div>\n                        <div id=\"speed\"></div>\n                        <div class=\"margin20\">\n                            <!--                            速度表格-->\n                            <tableCard v-if=\"speedTable\" type=\"speed\" :data=\"speedTable\"></tableCard>\n                        </div>\n                    </div>\n                </b-card>\n                <!--                加速度-->\n                <b-card>\n                    <div slot=\"header\">\n                        {{ $t(\"m.report.acc_title\") }}\n                    </div>\n                    <div class=\"content\">\n                        <div class=\"label-group row text-center\" style=\"width: 60%;margin: 0 auto\">\n                            <div class=\"col-sm-3 blue\"><i class=\"icon-style blue-icon\"></i>{{ $t(\"m.report.accele\") }}\n                            </div>\n                            <div class=\"col-sm-3 green\"><i class=\"icon-style green-icon\"></i>{{ $t(\"m.report.emotion20\")\n                                }}\n                            </div>\n                            <div class=\"col-sm-3 red\"><i class=\"icon-style red-icon\"></i>{{ $t(\"m.report.emotion30\") }}\n                            </div>\n                            <div class=\"col-sm-3 yellow\"><i class=\"icon-style yellow-icon\"></i>{{\n                                $t(\"m.report.emotion10\") }}\n                            </div>\n                        </div>\n                        <div id=\"acceleration\"></div>\n                        <div class=\"margin20\">\n                            <!--                            加速度表格-->\n                            <tableCard v-if=\"accTable\" type=\"acc\" :data=\"accTable\"></tableCard>\n                        </div>\n                    </div>\n                </b-card>\n                <!--                转弯曲线-->\n                <b-card>\n                    <div slot=\"header\">\n                        {{ $t(\"m.report.turnTitle\") }}\n                    </div>\n                    <div class=\"content\">\n                        <div class=\"label-group row text-center\" style=\"width: 60%;margin: 0 auto\">\n                            <div class=\"col-sm-3 blue\"><i class=\"icon-style blue-icon\"></i>{{ $t(\"m.report.turn\") }}\n                            </div>\n                            <div class=\"col-sm-3 green\"><i class=\"icon-style green-icon\"></i>{{ $t(\"m.report.emotion20\")\n                                }}\n                            </div>\n                            <div class=\"col-sm-3 red\"><i class=\"icon-style red-icon\"></i>{{ $t(\"m.report.emotion30\") }}\n                            </div>\n                            <div class=\"col-sm-3 yellow\"><i class=\"icon-style yellow-icon\"></i>{{\n                                $t(\"m.report.emotion10\") }}\n                            </div>\n                        </div>\n                        <div id=\"turn\"></div>\n                        <div class=\"margin20\">\n                            <!--                            转弯表格-->\n                            <tableCard v-if=\"turnTable\" type=\"turn\" :data=\"turnTable\"></tableCard>\n                        </div>\n                    </div>\n                </b-card>\n                <!--        颠簸点 -->\n                <b-card>\n                    <div slot=\"header\">\n                        {{ $t(\"m.report.pongTitle\") }}\n                    </div>\n                    <div class=\"content\">\n                        <div class=\"label-group row text-center\" style=\"width: 60%;margin: 0 auto\">\n                            <div class=\"col-sm-3\" style=\"color: red\"><i\n                                    style=\"background: red;height: 10px;width: 10px;display: inline-block;margin-right: 10px;\"></i>{{\n                                $t(\"m.report.pongPoint\") }}\n                            </div>\n                            <div class=\"col-sm-3 green\"><i class=\"icon-style green-icon\"></i>{{ $t(\"m.report.emotion20\")\n                                }}\n                            </div>\n                            <div class=\"col-sm-3 red\"><i class=\"icon-style red-icon\"></i>{{ $t(\"m.report.emotion30\") }}\n                            </div>\n                            <div class=\"col-sm-3 yellow\"><i class=\"icon-style yellow-icon\"></i>{{\n                                $t(\"m.report.emotion10\") }}\n                            </div>\n                        </div>\n                        <div id=\"pong\"></div>\n                        <div class=\"margin20\">\n                            <!--                            颠簸表格-->\n                            <tableCard v-if=\"pongTable\" type=\"pong\" :data=\"pongTable\"></tableCard>\n                        </div>\n                    </div>\n                </b-card>\n                <!-- 单人试驾报告 -->\n                <b-card>\n                    <div slot=\"header\">{{ $t(\"m.report.survey_title\") }}</div>\n                    <div class=\"content surveyReport\" v-if=\"surveyReport\">\n                        <div v-for=\"item in surveyReport\" :key=\"item.subjectId\">\n                            <div class=\"col-sm-6 float-left report-style\">\n                                <b-row>\n                                    <b-col sm=\"6\" md=\"6\" lg=\"6\">\n                                        <span class=\"float-left\">{{ item.subjectId }}.{{ reportArray[item.subjectId] }}</span>\n                                    </b-col>\n                                    <b-col sm=\"6\" md=\"6\" lg=\"6\">\n                                        <b-badge class=\"float-left badge-style success-color\"\n                                                 v-if=\"item.questionnaireContent === $t('m.report.very_satisfied')\">{{\n                                            item.questionnaireContent }}\n                                        </b-badge>\n                                        <b-badge class=\"float-left badge-style primary-color\"\n                                                 v-else-if=\"item.questionnaireContent === $t('m.report.satisfied')\">{{\n                                            item.questionnaireContent }}\n                                        </b-badge>\n                                        <b-badge class=\"float-left badge-style warning-color\"\n                                                 v-else-if=\"item.questionnaireContent === $t('m.report.common')\">{{\n                                            item.questionnaireContent }}\n                                        </b-badge>\n                                        <b-badge class=\"float-left badge-style danger-color\"\n                                                 v-else-if=\"item.questionnaireContent === $t('m.report.dissatisfied')\">\n                                            {{ item.questionnaireContent }}\n                                        </b-badge>\n                                        <b-badge class=\"float-left badge-style sec-color\"\n                                                 v-else-if=\"item.questionnaireContent === $t('m.report.no_evaluation')\">\n                                            {{ item.questionnaireContent }}\n                                        </b-badge>\n                                    </b-col>\n                                </b-row>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6 float-left report-style\">\n                            <b-row>\n                                <b-col sm=\"6\" md=\"6\" lg=\"6\">\n                                    <span class=\"float-left\">{{ starId + 1 }}.{{ reportArray[starId + 1] }}</span>\n                                </b-col>\n                                <b-col sm=\"6\" md=\"6\" lg=\"6\">\n                                    <div class=\"float-left\">\n                                        <i class=\"fa fa-star star-size\" v-for=\"item in starNum\" :key=\"item\"></i>\n                                    </div>\n                                </b-col>\n                            </b-row>\n                        </div>\n                        <div class=\"col-sm-6 float-left dis-relative report-style\">\n                            <b-row>\n                                <b-col sm=\"6\" md=\"6\" lg=\"6\">\n                                    <div class=\"float-left\">{{ surveyMsgId + 1 }}.{{ reportArray[surveyMsgId + 1] }}\n                                    </div>\n                                </b-col>\n                                <b-col sm=\"6\" md=\"6\" lg=\"6\">\n                                    <div class=\"float-left advise-style\" style=\"height: 300%\">\n                                        {{ surveyMsg ? surveyMsg : \"\" }}\n                                    </div>\n                                </b-col>\n                            </b-row>\n                        </div>\n                    </div>\n                    <div class=\"content surveyReport\" v-else>\n                        <div class=\"text-center no-feedback\">\n                            {{ $t(\"m.report.no_feedback\") }}\n                        </div>\n                    </div>\n                </b-card>\n            </div>\n        </b-card>\n    </div>\n</template>\n\n<script>\n    import echarts from \"echarts\";\n    import httpClient from \"@/utils/httpclient\";\n    import polygonMap from \"@/components/tripMap\";\n    import tableCard from \"./components/reportDetail/index.vue\";\n    import {emotion, speed, accele, turns, pong, initEmotion, insertTable} from \"./components/reportDetail/index\";\n    import {\n        timeInspect,\n        getDateString2,\n        filterCardTime,\n        getDateString3,\n        getDateString4,\n        getDateStringEnglish\n    } from \"@/utils/date\";\n\n    export default {\n        name: \"testReport\",\n        inject: [\"reload\"],\n        components: {\n            polygonMap,\n            tableCard\n        },\n        data() {\n            return {\n                emotion,\n                speed,\n                accele,\n                turns,\n                pong,\n                speedTable: null,\n                accTable: null,\n                turnTable: null,\n                pongTable: null,\n                userDetail: {},\n                driveInfo: {},\n                area: null,\n                satisify: [\n                    {\n                        name: this.$t(\"m.report.milege30\"),\n                        id: 9\n                    },\n                    {\n                        name: this.$t(\"m.report.static\"),\n                        id: 10\n                    },\n                    {\n                        name: this.$t(\"m.report.more60\"),\n                        id: 2\n                    },\n                    {\n                        name: this.$t(\"m.report.straight\"),\n                        id: 14\n                    },\n                    {\n                        name: this.$t(\"m.report.acceleration\"),\n                        id: 12\n                    },\n                    {\n                        name: this.$t(\"m.report.content_speed\"),\n                        id: 11\n                    },\n                    {\n                        name: this.$t(\"m.report.normal_speed\"),\n                        id: 16\n                    },\n                    {\n                        name: this.$t(\"m.report.turnCard\"),\n                        id: 15\n                    },\n                    {\n                        name: this.$t(\"m.report.pongPoint\"),\n                        id: 8\n                    },\n                    {\n                        name: this.$t(\"m.report.brake\"),\n                        id: 13\n                    },\n                    {\n                        name: this.$t(\"m.report.cut30\"),\n                        id: 3\n                    }\n                ],\n                emotionNetData: [],\n                reverseEmotionData: {},\n                userBehavior: {},\n                reportArray: [\"\", this.$t(\"m.report.outline_size\"), this.$t(\"m.report.modeling_aesthetics\"), this.$t(\"m.report.ride_comfort\"), this.$t(\"m.report.comfortable_seat\"), this.$t(\"m.report.sound_effects\"), this.$t(\"m.report.air_conditioning\"), this.$t(\"m.report.sound_effect\"), this.$t(\"m.report.feeling_wheel\"), this.$t(\"m.report.brake_force\"), this.$t(\"m.report.steering_flexibility\"), this.$t(\"m.report.view\"), this.$t(\"m.report.starting_acceleration\"), this.$t(\"m.report.halfway_acceleration\"), this.$t(\"m.report.dynamic_stability\"), this.$t(\"m.report.stability_denaturation\"), this.$t(\"m.report.automotive_interior\"), this.$t(\"m.report.technological_level\"), this.$t(\"m.report.interior_color\"), this.$t(\"m.report.internal_space\"), this.$t(\"m.report.operation_key\"), this.$t(\"m.report.overall_satisfaction\"), this.$t(\"m.report.suggestions_evaluation\")],\n                surveyReport: false,\n                surveyMsg: \"\",\n                showAdviseAlert: false,\n                questionnaireContent: \"\",\n                starId: 0,\n                starNum: 0,\n                surveyMsgId: 0\n            };\n        },\n        mounted() {\n            // coordinatetype 1,WGS84全球坐标系  2,GCJ02火星坐标系  3,BD09百度坐标系\n            httpClient.get(\"/api/v1/clouddrive/report/detail?coordinatetype=1&orderid=\" + this.$route.params.id).then(response => {\n                if (response.data.code == 200) {\n                    const {data} = response.data;\n                    // this.stars = response.data.data.surveyFeedbackDTO ? response.data.data.surveyFeedbackDTO[0].questionnaireContent :'';\n                    this.userDetail = data.userDetailDTO ? data.userDetailDTO : {};\n                    this.driveInfo = data.cloudDriveReportDTO.clouddriveTripDataDTO;\n                    this.area = {\n                        area: data.cloudDriveReportDTO.tracesDataDTOList,\n                        center: data.cloudDriveReportDTO.tracesDataDTOList[0]\n                    };\n                    this.userBehavior = data.cloudDriveReportDTO.alarmPushDTOList;\n                    this.getEmotion(data.cloudDriveReportDTO.wholeEmotionDTO);\n                    this.getSpeed(data.cloudDriveReportDTO.emotionList, data.cloudDriveReportDTO.speedList, data.cloudDriveReportDTO.clouddriveTripDataDTO.maxSpeed);\n                    this.getAcceleration(data.cloudDriveReportDTO.emotionList, data.cloudDriveReportDTO.accelerationDataList, data.cloudDriveReportDTO.clouddriveTripDataDTO.maxAcceleration);\n                    this.getTurn(data.cloudDriveReportDTO.emotionList, data.cloudDriveReportDTO.turnDataDTOS);\n                    //碰撞点为0， 则不现实整个模块\n                    this.getPong(data.cloudDriveReportDTO.emotionList, data.cloudDriveReportDTO.accelerationDataList, data.cloudDriveReportDTO ? data.cloudDriveReportDTO.bumpyEventsNew : []);\n                    data.cloudDriveReportDTO.clouddriveEmotionStatisticsDataDTO ? this.initTable(data.cloudDriveReportDTO.clouddriveEmotionStatisticsDataDTO) : null;\n                    // 单人试驾报告\n                    if (data.surveyFeedbackDTO) {\n                        this.surveyReport = data.surveyFeedbackDTO.slice(0, 20);\n                        this.starId = data.surveyFeedbackDTO.slice(20, 21)[0].subjectId;\n                        this.starNum = Number(data.surveyFeedbackDTO.slice(20, 21)[0].questionnaireContent);\n                        if (data.surveyFeedbackDTO[21]) {\n                            this.surveyMsg = data.surveyFeedbackDTO.slice(21)[0].questionnaireContent;\n                            this.surveyMsgId = data.surveyFeedbackDTO.slice(21)[0].subjectId;\n                        }\n                    }\n                }\n            });\n        },\n        methods: {\n            initBaseData(driveData) {\n                let driveDatas = [];\n                driveData.map(item => {\n                    driveDatas.push(getDateString3(item.driveTime));\n                });\n                return {\n                    driveDatas\n                };\n            },\n            initTable(data) {\n                let temp = {};\n                let sortData = [];\n                data.map(item => {\n                    this.satisify.map(it => {\n                        if (it.id == item.driveType) {\n                            sortData.push({\n                                id: it.id,\n                                name: it.name,\n                                value: (item.emotionNetWorth * 100).toFixed(1)\n                            });\n                        }\n                    });\n                    temp[item.driveType] = {\n                        durationTime: item.durationTime,\n                        durationTimeStatictics: (item.durationTimeStatictics * 100).toFixed(1),\n                        neutralEmotionStatistics: (item.neutralEmotionStatistics * 100).toFixed(1),\n                        positiveEmotionStatistics: (item.positiveEmotionStatistics * 100).toFixed(1),\n                        negativeEmotionStatistics: (item.negativeEmotionStatistics * 100).toFixed(1),\n                        emotionNetWorth: (item.emotionNetWorth * 100).toFixed(1)\n                    };\n                });\n                this.speedTable = insertTable(\"speed\", [10, 3, 9, 2], temp);\n                this.accTable = insertTable(\"acc\", [11, 12, 13, 0], temp);\n                this.turnTable = insertTable(\"turn\", [14, 15, 0, 0], temp);\n                this.pongTable = insertTable(\"pong\", [16, 8, 0, 0], temp);\n                let emotionArray = sortData.sort((f, l) => {\n                    return l.value - f.value;\n                });\n                this.emotionNetData = JSON.parse(JSON.stringify(emotionArray));\n                this.reverseEmotionData = emotionArray.reverse().slice(0, 3);\n            },\n            getPong(data, driveData, eventData) {\n                let eventList = [];\n                eventData.map(item => {\n                    eventList.push({\n                        xAxis: getDateString3(item.driveTime),\n                        tooltip: {\n                            trigger: \"item\",\n                            formatter: data => {\n                                return data.data.xAxis + `<br />${this.$t(\"m.report.pongPoint\")}`;\n                            }\n                        },\n                        yAxis: 20\n                    });\n                });\n                let {emotionList, area, line} = initEmotion(data);\n                this.pong.series.markArea.data = area;\n                let {driveDatas} = this.initBaseData(driveData);\n                this.pong.xAxis.data = driveDatas;\n                this.pong.series.data = emotionList;\n                this.pong.series.markLine.data = line;\n                this.pong.series.markPoint.data = eventList;\n                echarts.init(document.getElementById(\"pong\")).setOption(this.pong);\n            },\n            getTurn(data, accData) {\n                let accList = [];\n                let yList = [];\n                let {area, line} = this.defaultEmotion(data);\n                accData.map(item => {\n                    accList.push(getDateString3(item.driveTime));\n                    yList.push(item.turn);\n                });\n                this.turns.series.markArea.data = area;\n                this.turns.series.markLine.data = line;\n                this.turns.xAxis.data = accList;\n                this.turns.series.data = yList;\n                echarts.init(document.getElementById(\"turn\")).setOption(this.turns);\n            },\n            defaultEmotion(data, max) {\n                let emotionList = [];\n                let area = [];\n                let line = [];\n                data.map(item => {\n                    emotionList.push(item.emotion);\n                    if (item.emotion == 10 || item.emotion == 0) {\n                        line.push([\n                            {\n                                xAxis: item.emotionStartTime ? getDateString3(item.emotionStartTime) : 0,\n                                yAxis: 0,\n                                itemStyle: {\n                                    color: \"#fbdc7f\",\n                                    width: 2\n                                }\n                            },\n                            {\n                                yAxis: 0,\n                                xAxis: item.emotionEndTIme ? getDateString3(item.emotionEndTIme) : 0\n                            }\n                        ]);\n                    } else {\n                        area.push([\n                            {\n                                xAxis: item.emotionStartTime ? getDateString3(item.emotionStartTime) : 0,\n                                temp: item.emotion,\n                                yAxis: max ? (item.emotion == 20 ? 0 : Number(\"-\" + max)) : item.emotion == 20 ? 0 : -10,\n                                itemStyle: {\n                                    color: item.emotion == 20 ? \"#a2dab6\" : item.emotion == 30 ? \"#f8b2b1\" : \"#fbdc7f\"\n                                }\n                            },\n                            {\n                                yAxis: max ? (item.emotion == 20 ? max : 0) : item.emotion == 20 ? 10 : 0,\n                                xAxis: item.emotionEndTIme ? getDateString3(item.emotionEndTIme) : 0\n                            }\n                        ]);\n                    }\n                });\n                return {\n                    emotionList,\n                    area,\n                    line\n                };\n            },\n            getAcceleration(data, accData, maxAcc) {\n                let {area, line} = this.defaultEmotion(data, Math.ceil(maxAcc));\n                let accList = [];\n                let yList = [];\n                accData.map(item => {\n                    accList.push(getDateString3(item.driveTime));\n                    yList.push(item.acceleration.toFixed(1));\n                });\n                this.accele.yAxis.min = \"-\" + Math.ceil(Number(maxAcc));\n                this.accele.yAxis.max = Math.ceil(Number(maxAcc));\n                this.accele.yAxis.interval = Math.ceil(Number(maxAcc));\n                this.accele.series.markArea.data = area;\n                this.accele.series.markLine.data = line;\n                this.accele.xAxis.data = accList;\n                this.accele.series.data = yList;\n                echarts.init(document.getElementById(\"acceleration\")).setOption(this.accele);\n            },\n            getSpeed(data, speedData, highSpeed) {\n                let {area, line} = initEmotion(data, \"speed\", highSpeed);\n                let speedList = [];\n                let yList = [];\n                speedData.map(item => {\n                    speedList.push(getDateString3(item.driveTime));\n                    yList.push(item.speed.toFixed(1));\n                });\n                this.speed.series.markArea.data = area;\n                this.speed.series.markLine.data = line;\n                this.speed.xAxis.data = speedList;\n                this.speed.yAxis.interval = Math.ceil(highSpeed / 2);\n                this.speed.yAxis.max = Math.ceil(highSpeed);\n                this.speed.series.data = yList;\n                echarts.init(document.getElementById(\"speed\")).setOption(this.speed);\n            },\n            getEmotion(data) {\n                this.emotion.series[0].data[0].value = (data.positiveEmotionStatistics * 100).toFixed(1);\n                this.emotion.series[0].data[1].value = (data.negativeEmotionStatistics * 100).toFixed(1);\n                this.emotion.series[0].data[2].value = (data.neutralEmotionStatistics * 100).toFixed(1);\n                echarts.init(document.getElementById(\"emotion\")).setOption(this.emotion);\n            },\n            showAdvise() {\n                if (this.surveyMsg === \"\") {\n                    this.showAdviseAlert = false;\n                } else {\n                    this.showAdviseAlert = true;\n                }\n            },\n            closeAdvise() {\n                this.showAdviseAlert = false;\n            },\n            filterCardTime,\n            timeInspect,\n            getDateString2,\n            getDateString4,\n            getDateStringEnglish\n        }\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    #acceleration,\n    #emotion,\n    #speed,\n    #turn,\n    #pong {\n        height: 400px;\n    }\n\n    .whole-emotion {\n        .card-body {\n            padding: 0;\n\n            .breadcrumb {\n                padding: 7px 10px;\n                margin-bottom: 0;\n            }\n        }\n    }\n\n    .hot-link {\n        color: rgb(99, 194, 222);\n        cursor: pointer;\n    }\n\n    .blue {\n        color: #3b5998;\n    }\n\n    .green {\n        color: #a2dab6;\n    }\n\n    .green-deep {\n        color: #4dbd74;\n    }\n\n    .red-deep {\n        color: #f86c6b;\n    }\n\n    .yellow,\n    .fa-star {\n        color: #fbdc7f;\n    }\n\n    .margin20 {\n        margin-top: 20px;\n    }\n\n    .red {\n        color: #f8b2b1;\n    }\n\n    .space-holder {\n        margin-left: 10px;\n    }\n\n    .icon-style {\n        display: inline-block;\n        height: 10px;\n        width: 10px;\n        margin-right: 6px;\n    }\n\n    .blue-icon {\n        background: #3b5998;\n    }\n\n    .green-icon {\n        background: #a2dab6;\n    }\n\n    .yellow-icon {\n        background: #fbdc7f;\n    }\n\n    .red-icon {\n        background: #f8b2b1;\n    }\n\n    .no-feedback {\n        color: rgba(174, 182, 177, 0.767);\n        font-size: 0.875rem;\n    }\n\n    .badge-style {\n        width: 100px;\n        font-size: 0.75rem;\n        padding: 5px 20px;\n    }\n\n    .max-width {\n        max-width: 154px;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    .dis-relative {\n        display: relative;\n    }\n\n    .advise-alert {\n        width: 260px;\n        // height: 100px;\n        color: #ffffff;\n        position: absolute;\n        background-color: rgba(17, 16, 16, 0.7);\n        right: 3%;\n        bottom: 101%;\n        border-radius: 2px;\n        padding: 13px 10px;\n    }\n\n    .star-size {\n        font-size: 22px;\n        padding: 0px 3px;\n        color: #ffc107;\n    }\n\n    .surveyReport {\n        .col-sm-6 {\n            padding-left: 0;\n        }\n    }\n\n    .report-style {\n        padding: 8px 20px;\n    }\n\n    .success-color {\n        background-color: #4dbd74;\n        color: #ffffff;\n    }\n\n    .primary-color {\n        background-color: #63c2de;\n        color: #ffffff;\n    }\n\n    .warning-color {\n        background-color: #ffc107;\n        color: #ffffff;\n    }\n\n    .danger-color {\n        background-color: #f86c6b;\n        color: #ffffff;\n    }\n\n    .sec-color {\n        background-color: #c8ced3;\n    }\n</style>\n"],"sourceRoot":"src/views/dashboard/testDrive"}]}