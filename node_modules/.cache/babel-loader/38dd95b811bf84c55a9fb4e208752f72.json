{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/components/shop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/components/shop.vue","mtime":1576640374000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _getIterator from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport _Promise from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpclient from '@/utils/httpclient';\nimport echarts from 'echarts';\nimport { getDateString, getYMDFormart } from \"@/utils/date\";\nexport default {\n  name: \"mainI\",\n  data: function data() {\n    return {\n      weekly: \"week\",\n      daily: \"daily\",\n      dailyDate: \"\",\n      env: '',\n      salePersonDate: \"\",\n      card: {\n        \"inventory\": {\n          name: \"m.index.inventory\",\n          img: require('@assets/pages-img/inven-icon.svg'),\n          type: \"inventory\",\n          class: \"bg-primary\",\n          num: \"\",\n          filters: null,\n          key: '',\n          value: ''\n        },\n        \"offLots\": {\n          name: \"m.index.offlot\",\n          img: require('@assets/pages-img/off-lot.svg'),\n          type: \"off lot\",\n          class: \"bg-info\",\n          num: \"\",\n          filters: null,\n          key: '',\n          value: ''\n        },\n        \"extremelyLowPower\": {\n          name: \"m.index.low\",\n          img: require('@assets/pages-img/low-bat.svg'),\n          type: \"low battery\",\n          class: \"bg-warning\",\n          num: \"\",\n          filters: null,\n          key: '',\n          value: ''\n        },\n        \"offLine\": {\n          name: \"m.index.offline\",\n          img: require('@assets/pages-img/off-line.svg'),\n          type: \"offline\",\n          class: \"bg-danger\",\n          num: \"\",\n          filters: null,\n          key: '',\n          value: ''\n        }\n      },\n      option1: {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          y: \"20px\",\n          textStyle: {\n            color: [\"#000000\"]\n          },\n          data: [this.$t('m.index.l_low'), '11.7V - 12.1V', this.$t('m.index.l_above')]\n        },\n        series: [{\n          type: 'pie',\n          label: {\n            show: false\n          },\n          labelLine: {\n            show: false\n          },\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: [{\n            value: 0,\n            name: this.$t('m.index.l_low')\n          }, {\n            value: 0,\n            name: '11.7V - 12.1V'\n          }, {\n            value: 0,\n            name: this.$t('m.index.l_above')\n          }],\n          color: ['rgb(255,99,132)', 'rgb(255, 205, 86)', 'rgb(54, 162, 235)']\n        }]\n      },\n      option2: {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          y: \"20px\",\n          textStyle: {\n            color: [\"#000000\"]\n          },\n          data: [this.$t('m.index.r_lot'), this.$t('m.index.r_off')]\n        },\n        series: [{\n          label: {\n            show: false\n          },\n          labelLine: {\n            show: false\n          },\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: [{\n            value: 0,\n            name: this.$t('m.index.r_lot')\n          }, {\n            value: 0,\n            name: this.$t('m.index.r_off')\n          }],\n          color: ['rgb(54, 162, 235)', 'rgb(255,99,132)']\n        }]\n      },\n      showLog: false,\n      lastDate: null,\n      color: ['99,194,222,0.8', '248,108,107,0.8', '255,193,5,0.8', '32,168,216,0.8', '77,189,116,0.8'],\n      deaLoction: {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: [],\n          textStyle: {\n            color: [\"#000000\"]\n          }\n        },\n        grid: {\n          left: '1%',\n          right: '1%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"black\"\n            }\n          },\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: \"#73818f\"\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"black\"\n            }\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"#73818f\"\n            }\n          }\n        },\n        series: []\n      },\n      saleOption: {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: [{\n            name: this.$t('m.index.average_time'),\n            icon: \"roundRect\"\n          }, {\n            name: this.$t('m.index.average_num'),\n            icon: \"roundRect\"\n          }],\n          textStyle: {\n            color: [\"#000000\"]\n          }\n        },\n        grid: {\n          left: '1%',\n          right: '1%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"black\"\n            }\n          },\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: \"#73818f\"\n            }\n          }\n        },\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"black\"\n            }\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"#73818f\"\n            }\n          }\n        }, {\n          type: 'value',\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"black\"\n            }\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"#73818f\"\n            }\n          }\n        }],\n        series: [{\n          name: this.$t('m.index.average_time'),\n          type: 'line',\n          smooth: true,\n          yAxisIndex: 0,\n          data: [],\n          color: 'rgba(99,194,222, 0.8)',\n          backgroundColor: \"#73818f\"\n        }, {\n          name: this.$t('m.index.average_num'),\n          type: 'line',\n          yAxisIndex: 1,\n          smooth: true,\n          data: [],\n          color: 'rgba(248,108,107, 0.8)'\n        }]\n      },\n      tableFields: {\n        user: {\n          label: this.$t('m.index.user'),\n          class: \"text-left\"\n        },\n        action: {\n          label: this.$t('m.common.action'),\n          class: \"text-left\"\n        },\n        vehicle: {\n          label: this.$t('m.common.vehicle'),\n          class: \"text-left\"\n        },\n        time: {\n          label: this.$t('m.index.time_stamp'),\n          class: \"text-left\"\n        }\n      },\n      pie1: null,\n      pie2: null,\n      data: null\n    };\n  },\n  mounted: function mounted() {\n    this.env = process.env.VUE_APP_ENV;\n    this.$store.dispatch(\"clear_log_list\", []);\n    this.initData();\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      new _Promise(function (resolve, reject) {\n        httpclient.get(\"/api/v1/index\", {}).then(function (response) {\n          httpclient.get(\"/api/v1/vehicle/availableLogList\", {}).then(function (res) {\n            _this.filterData(response.data.data, res.data.data);\n\n            resolve();\n          }).catch(function () {\n            _this.filterData(response.data.data, []);\n\n            resolve();\n          });\n        }).catch(function (err) {\n          resolve();\n        });\n      }).then(function () {\n        _this.getSales(2);\n      }).then(function () {\n        _this.getDealData(1);\n      });\n    },\n    chooseDealDate: function chooseDealDate(type) {\n      this.daily = type;\n      var num = type == 'daily' ? 1 : type == 'week' ? 2 : 3;\n      this.getDealData(num);\n    },\n    getDealData: function getDealData(num) {\n      var _this2 = this;\n\n      httpclient.post(\"/api/v1/index/averageparkinglotdata\", {\n        timeType: num\n      }).then(function (res) {\n        _this2.filterDealData(res.data.data);\n      }).catch(function (err) {// alert(err)\n      });\n    },\n    filterDealData: function filterDealData(data) {\n      var _this3 = this;\n\n      this.deaLoction.series = [];\n      this.deaLoction.xAxis.data = [];\n      this.deaLoction.legend.data = [];\n      var firstTime = getYMDFormart(data[0].averageDrivingTime2[data[0].averageDrivingTime2.length - 1].data);\n      var lastTime = getYMDFormart(data[0].averageDrivingTime2[0].data);\n      this.dailyDate = \"\".concat(firstTime, \" - \").concat(lastTime);\n      data.map(function (item, key) {\n        _this3.deaLoction.legend.data.push({\n          name: item.parkingName,\n          icon: \"roundRect\"\n        });\n\n        var seData = [];\n        item.averageDrivingTime.reverse().map(function (it, k) {\n          seData.push(it.value);\n          key == 0 ? _this3.deaLoction.xAxis.data.push(it.data) : null;\n        });\n\n        _this3.deaLoction.series.push({\n          name: item.parkingName,\n          type: 'line',\n          smooth: true,\n          data: seData,\n          color: \"rgba(\".concat(_this3.color[key], \")\"),\n          backgroundColor: \"#73818f\"\n        });\n      });\n      echarts.init(document.getElementById(\"deaLocation\")).setOption(this.deaLoction);\n    },\n    filterSalesData: function filterSalesData(data) {\n      this.saleOption.xAxis.data = [];\n      this.saleOption.series[0].data = [];\n      this.saleOption.series[1].data = [];\n      var firstTime = getYMDFormart(data[data.length - 1].standardStartDate);\n      var lastTime = getYMDFormart(data[0].standardStartDate);\n      this.salePersonDate = \"\".concat(firstTime, \" - \").concat(lastTime);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(data.reverse()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          this.saleOption.xAxis.data.push(item.startDate);\n          this.saleOption.series[0].data.push(item.averageDrivingTime);\n          this.saleOption.series[1].data.push(item.averageDrivingNumber);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      echarts.init(document.getElementById(\"sale\")).setOption(this.saleOption);\n    },\n    getSales: function getSales(num) {\n      var _this4 = this;\n\n      httpclient.post(\"/api/v1/index/averagesalesdata\", {\n        timeType: num\n      }).then(function (res) {\n        _this4.filterSalesData(res.data.data);\n      }).catch(function (err) {// alert(err)\n      });\n    },\n    chooseSaleDate: function chooseSaleDate(type) {\n      this.weekly = type;\n      var num = type == 'month' ? 3 : 2;\n      this.getSales(num);\n    },\n    formatTime: function formatTime(val) {\n      //格式化时间（06/17/2019 19:08）\n      var mon = val.getMonth() + 1 > 9 ? val.getMonth() + 1 : '0' + (val.getMonth() + 1);\n      var data = val.getDate() > 9 ? val.getDate() : '0' + val.getDate();\n      var hour = val.getHours() > 9 ? val.getHours() : '0' + val.getHours();\n      var minute = val.getMinutes() > 9 ? val.getMinutes() : '0' + val.getMinutes();\n      return mon + '/' + data + '/' + val.getFullYear() + '  ' + hour + ':' + minute;\n    },\n    filterData: function filterData(data, loglist) {\n      var _this5 = this;\n\n      this.data = data;\n      this.showLog = loglist.map(function (item) {\n        return {\n          user: item.firstName + \" \" + item.lastName,\n          action: item.available == '1' ? _this5.$t('m.index.has_just') + _this5.$t('m.index.check_in') : _this5.$t('m.index.has_just') + _this5.$t('m.index.check_out'),\n          vehicle: \"\".concat(item.year ? item.year : 'N/A', \" \").concat(item.make ? item.make : 'N/A', \" \").concat(item.model ? item.model : 'N/A'),\n          time: getDateString(Number(item.createTime)),\n          vehicleId: item.vehicleId,\n          userId: item.checkUserId\n        };\n      });\n      this.$store.dispatch(\"save_log_list\", this.showLog);\n      this.lastDate = this.formatTime(new Date());\n      var batHealth = [\"extremelyLowPower\", \"lowPower\", \"commonPower\"];\n      var inventory = [\"inLots\", \"offLots\"];\n\n      for (var item in this.card) {\n        this.card[item][\"num\"] = data[item] ? data[item][\"num\"] : \"\";\n        this.card[item][\"filters\"] = data[item] ? data[item][\"filters\"] : \"\";\n        this.card[item][\"key\"] = data[item] ? data[item][\"filters\"][0].key : \"\";\n        this.card[item][\"value\"] = data[item] ? data[item][\"filters\"][0].value[0] : \"\";\n      }\n\n      for (var i in batHealth) {\n        this.option1.series[0].data[i].value = data[batHealth[i]][\"num\"];\n      }\n\n      for (var _i in inventory) {\n        this.option2.series[0].data[_i].value = data[inventory[_i]][\"num\"];\n      }\n\n      this.pie1 = echarts.init(document.getElementById(\"battery-health\"));\n      this.pie1.setOption(this.option1);\n      this.pie2 = echarts.init(document.getElementById(\"inventory-location\"));\n      this.pie2.setOption(this.option2);\n      var self = this;\n      this.pie1.on(\"click\", function (param) {\n        if (param.dataIndex == 0) {\n          self.$router.push({\n            name: \"VehicleList\",\n            query: {\n              filters: _JSON$stringify([{\n                key: \"battery\",\n                value: [\"1\"]\n              }])\n            }\n          });\n        } else if (param.dataIndex == 1) {\n          self.$router.push({\n            name: \"VehicleList\",\n            query: {\n              filters: _JSON$stringify([{\n                key: \"battery\",\n                value: [\"2\"]\n              }])\n            }\n          });\n        } else {\n          self.$router.push({\n            name: \"VehicleList\",\n            query: {\n              filters: _JSON$stringify([{\n                key: \"battery\",\n                value: [\"3\"]\n              }])\n            }\n          });\n        }\n      });\n      this.pie2.on(\"click\", function (param) {\n        if (param.dataIndex == 0) {\n          self.$router.push({\n            name: \"VehicleList\",\n            query: {\n              filters: '[' + _JSON$stringify(self.data.inLots.filters[0]) + ']'\n            }\n          });\n        } else {\n          self.$router.push({\n            name: \"VehicleList\",\n            query: {\n              filters: '[' + _JSON$stringify(self.data.offLots.filters[0]) + ']'\n            }\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["shop.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"animated fadeIn mainI\">\n        <b-row>\n            <b-col sm=\"6\" lg=\"3\" v-for=\"(item, index) in card\" :key=\"index\" class=\"card-hover\"\n                   @click='$router.push({name: \"VehicleList\",\n                   query: {filters:  `[{ \"key\":\"${item.key}\",\"value\":[\"${item.value}\"]}]` }})'>\n                <b-card no-body :class=\"item.class\">\n                    <b-card-body>\n                        <b-row>\n                            <b-col sm=\"6\" lg=\"6\" class=\"remove-padding\">\n                                <img  :src=\"item.img\">\n                            </b-col>\n                            <b-col sm=\"6\" lg=\"6\" class=\"text-center text-white remove-padding remind-number\">\n                                <div>\n                                    <p class=\"text-uppercase font-weight-bold text-muted\">{{ $t(item.name) }}</p>\n                                    <p class=\"text-uppercase text-value-lg font-weight-bold text-muted\">{{ item.num }}</p>\n                                </div>\n                            </b-col>\n                        </b-row>\n                    </b-card-body>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row v-if=\"showLog && showLog.length > 0\">\n            <b-col sm=\"12\" lg=\"12\">\n                <b-card\n                        header-tag=\"header\"\n                        footer-tag=\"footer\">\n                    <div slot=\"header\">\n                        <i class=\"fa fa-align-justify\"></i><strong>{{ $t('m.index.recent_title') }}</strong>\n                        <small class=\"text-muted last-update\" v-cloak>{{ $t('m.index.last_update') }}: {{ lastDate }}</small>\n                    </div>\n                    <b-table class=\"mb-0 table-outline\" small striped responsive=\"sm\" :items=\"$store.getters.logList\" hover :fields=\"tableFields\">\n                        <template slot=\"user\" slot-scope=\"data\">\n                            <span class=\"user-name\" @click=\"$router.push('/inventory/admin/detail/' + data.item.userId)\">{{ data.item.user }}</span>\n                        </template>\n                        <template slot=\"vehicle\" slot-scope=\"data\">\n                            <span class=\"user-name\" @click=\"$router.push('/inventory/vehicle/detail/' + data.item.vehicleId)\">{{ data.item.vehicle }}</span>\n                        </template>\n                    </b-table>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row columns class=\"pie-group\">\n            <b-col sm=\"6\" lg=\"6\">\n                <b-card :header=\"$t('m.index.battery')\" class=\"text-center\">\n                    <div style=\"height:400px\"  id=\"battery-health\">\n                    </div>\n                </b-card>\n            </b-col>\n            <b-col sm=\"6\" lg=\"6\">\n                <b-card :header=\"$t('m.index.l_location')\" class=\"text-center\">\n                    <div style=\"height:400px\"  id=\"inventory-location\">\n                    </div>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row v-if=\"env == 'en'\" >\n            <b-col sm=\"12\" lg=\"12\">\n                <b-card>\n                    <b-row>\n                        <b-col sm=\"6\" lg=\"6\">\n                            <h4>{{ $t('m.index.sale_title') }}</h4>\n                            <p class=\"text-muted\">{{ salePersonDate }}</p>\n                        </b-col>\n                        <b-col sm=\"6\" lg=\"6\" class=\"text-right\">\n                            <b-dropdown :text=\"weekly == 'week' ? $t('m.index.weeks') : $t('m.index.month')\" class=\"btn-group btn-group-toggle m-2 week-drop\">\n                                <b-dropdown-item>\n                                    <i v-if=\"weekly == 'week'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseSaleDate('week')\">\n                                        <h6>{{ $t('m.index.week_inter') }}</h6>\n                                        <p class=\"small text-muted mb-0\">{{ $t('m.index.week_des') }}</p>\n                                    </div>\n                                </b-dropdown-item>\n                                <b-dropdown-item>\n                                    <i v-if=\"weekly != 'week'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseSaleDate('month')\">\n                                        <h6>{{ $t('m.index.mon_inter') }}</h6>\n                                        <p class=\"small text-muted mb-0\">{{ $t('m.index.mon_des') }}</p>\n                                    </div>\n                                </b-dropdown-item>\n                            </b-dropdown>\n                            <div style=\"display: inline-block\" class=\"text-muted\">{{ $t('m.index.last') }} {{ weekly == 'week' ? '12 ' + $t('m.index.weeks') : '6 ' + $t('m.index.month') }}</div>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" lg=\"12\" id=\"sale\" style=\"height: 400px\">\n                        </b-col>\n                    </b-row>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row v-if=\"env == 'en'\">\n            <b-col sm=\"12\" lg=\"12\">\n                <b-card>\n                    <b-row>\n                        <b-col sm=\"6\" lg=\"6\">\n                            <h4>{{ $t('m.index.per_deal') }}</h4>\n                            <p class=\"text-muted\">{{ dailyDate }}</p>\n                        </b-col>\n                        <b-col sm=\"6\" lg=\"6\" class=\"text-right\">\n                            <b-dropdown :text=\"daily == 'daily' ? $t('m.index.daily') : (daily == 'week' ? $t('m.index.weeks') : $t('m.index.month'))\" class=\"btn-group btn-group-toggle m-2 week-drop\">\n                                <b-dropdown-item>\n                                    <i v-if=\"daily == 'daily'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseDealDate('daily')\">\n                                        <h6>{{ $t('m.index.daily_inter') }}</h6>\n                                        <p class=\"small text-muted mb-0\">{{ $t('m.index.daily_des') }}</p>\n                                    </div>\n                                </b-dropdown-item>\n                                <b-dropdown-item>\n                                    <i v-if=\"daily == 'week'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseDealDate('week')\">\n                                        <h6>{{ $t('m.index.week_inter') }}</h6>\n                                        <p class=\"small text-muted mb-0\">{{ $t('m.index.week_des') }}</p>\n                                    </div>\n                                </b-dropdown-item>\n                                <b-dropdown-item>\n                                    <i v-if=\"daily == 'month'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseDealDate('month')\">\n                                        <h6>{{ $t('m.index.mon_inter') }}</h6>\n                                        <p class=\"small text-muted mb-0\">{{ $t('m.index.mon_des') }}</p>\n                                    </div>\n                                </b-dropdown-item>\n                            </b-dropdown>\n                            <div style=\"display: inline-block\" class=\"text-muted\">{{ $t('m.index.last') }} {{ daily == 'week' ? '12 ' + $t('m.index.weeks') : (daily == 'daily') ? '30 ' + $t('m.index.daily') : '6 ' + $t('m.index.month') }}</div>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" lg=\"12\" id=\"deaLocation\" style=\"height: 400px\">\n                        </b-col>\n                    </b-row>\n                </b-card>\n            </b-col>\n        </b-row>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    .mainI {\n        .dropdown-item{\n            padding: 10px 30px;\n        }\n        .dropdown-item i{\n            margin-left: -24px;\n        }\n        .card {\n            width: 100%;\n        }\n        .remind-number{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n        .remove-padding {\n            padding: 0 4px;\n            p{\n                margin: 0;\n            }\n        }\n        strong, small {\n            margin-left: 10px;\n        }\n        .card-hover {\n            cursor: pointer;\n        }\n        .user-name {\n            color: #20a8d8;\n            cursor: pointer;\n        }\n        .table-outline td {\n            height: 40px;\n        }\n        .table {\n            th {\n                color: #73818f;\n            }\n        }\n        .week-drop {\n            button {\n                color: #73818f;\n                background-color: transparent;\n                background-image: none;\n                border-color: #73818f;\n            }\n        }\n        .pie-group {\n            #battery-health > div, #inventory-location > div{\n                margin: 0 auto;\n            }\n            h4 {\n                text-align: center;\n                color: #73818f;\n            }\n        }\n    }\n</style>\n\n<script>\n    import httpclient from '@/utils/httpclient';\n    import echarts from 'echarts';\n    import { getDateString, getYMDFormart } from \"@/utils/date\"\n\n    export default {\n        name: \"mainI\",\n        data() {\n            return {\n                weekly: \"week\",\n                daily: \"daily\",\n                dailyDate: \"\",\n                env:'',\n                salePersonDate: \"\",\n                card: {\n                    \"inventory\": {\n                        name: \"m.index.inventory\",\n                        img: require('@assets/pages-img/inven-icon.svg'),\n                        type: \"inventory\",\n                        class: \"bg-primary\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    },\n                    \"offLots\": {\n                        name: \"m.index.offlot\",\n                        img: require('@assets/pages-img/off-lot.svg'),\n                        type: \"off lot\",\n                        class: \"bg-info\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    },\n                    \"extremelyLowPower\": {\n                        name: \"m.index.low\",\n                        img: require('@assets/pages-img/low-bat.svg'),\n                        type: \"low battery\",\n                        class: \"bg-warning\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    },\n                    \"offLine\": {\n                        name: \"m.index.offline\",\n                        img: require('@assets/pages-img/off-line.svg'),\n                        type: \"offline\",\n                        class: \"bg-danger\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    }\n                },\n                option1 : {\n                    tooltip: {\n                        trigger: 'item'\n                    },\n                    legend: {\n                        y: \"20px\",\n                        textStyle: {\n                            color:[\"#000000\"],\n                        },\n                        data:[this.$t('m.index.l_low'), '11.7V - 12.1V', this.$t('m.index.l_above')]\n                    },\n                    series : [\n                        {\n                            type:'pie',\n                            label: {\n                                show: false\n                            },\n                            labelLine: {\n                                show: false\n                            },\n                            radius : '55%',\n                            center: ['50%', '60%'],\n                            data:[\n                                {value:0, name:this.$t('m.index.l_low')},\n                                {value:0, name:'11.7V - 12.1V'},\n                                {value:0, name:this.$t('m.index.l_above')}\n                            ],\n                            color: ['rgb(255,99,132)',\n                                'rgb(255, 205, 86)',\n                                'rgb(54, 162, 235)',]\n                        }\n                    ]\n                },\n                option2 : {\n                    tooltip: {\n                        trigger: 'item'\n                    },\n                    legend: {\n                        y: \"20px\",\n                        textStyle: {\n                            color:[\"#000000\"],\n                        },\n                        data:[this.$t('m.index.r_lot'), this.$t('m.index.r_off')]\n                    },\n                    series : [\n                        {\n                            label: {\n                                show: false\n                            },\n                            labelLine: {\n                                show: false\n                            },\n                            type:'pie',\n                            radius : '55%',\n                            center: ['50%', '60%'],\n                            data:[\n                                {value:0, name:this.$t('m.index.r_lot')},\n                                {value:0, name:this.$t('m.index.r_off')}\n                            ],\n                            color: ['rgb(54, 162, 235)',\n                                'rgb(255,99,132)']\n                        }\n                    ]\n                },\n                showLog: false,\n                lastDate: null,\n                color: ['99,194,222,0.8', '248,108,107,0.8', '255,193,5,0.8', '32,168,216,0.8', '77,189,116,0.8'],\n                deaLoction: {\n                    tooltip: {\n                        trigger: 'axis'\n                    },\n                    legend: {\n                        data:[],\n                        textStyle: {\n                            color:[\"#000000\"],\n                        }\n                    },\n                    grid: {\n                        left: '1%',\n                        right: '1%',\n                        bottom: '3%',\n                        containLabel: true\n                    },\n\n                    xAxis: {\n                        type: 'category',\n                        boundaryGap: false,\n                        splitLine: {\n                            show: true,\n                            lineStyle: {\n                                color: \"black\"\n                            }\n                        },\n                        data: [],\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#73818f\"\n                            }\n                        }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        splitLine: {\n                            show: true,\n                            lineStyle: {\n                                color: \"black\"\n                            }\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#73818f\"\n                            }\n                        }\n                    },\n                    series: []\n                },\n                saleOption: {\n                    tooltip: {\n                        trigger: 'axis'\n                    },\n                    legend: {\n                        data:[\n                            {\n                                name: this.$t('m.index.average_time'),\n                                icon: \"roundRect\"\n                            },\n                            {\n                                name: this.$t('m.index.average_num'),\n                                icon: \"roundRect\",\n\n                            }],\n                        textStyle: {\n                            color:[\"#000000\"],\n                        }\n                    },\n                    grid: {\n                        left: '1%',\n                        right: '1%',\n                        bottom: '3%',\n                        containLabel: true\n                    },\n\n                    xAxis: {\n                        type: 'category',\n                        boundaryGap: false,\n                        splitLine: {\n                            show: true,\n                            lineStyle: {\n                                color: \"black\"\n                            }\n                        },\n                        data: [],\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#73818f\"\n                            }\n                        }\n                    },\n                    yAxis: [\n                        {\n                            type: 'value',\n                            splitLine: {\n                                show: true,\n                                lineStyle: {\n                                    color: \"black\"\n                                }\n                            },\n                            axisLine: {\n                                lineStyle: {\n                                    color: \"#73818f\"\n                                }\n                            }\n                        },\n                        {\n                            type: 'value',\n                            splitLine: {\n                                show: true,\n                                lineStyle: {\n                                    color: \"black\"\n                                }\n                            },\n                            axisLine: {\n                                lineStyle: {\n                                    color: \"#73818f\"\n                                }\n                            }\n                        }\n                    ],\n                    series: [\n                        {\n                            name: this.$t('m.index.average_time'),\n                            type:'line',\n                            smooth: true,\n                            yAxisIndex: 0,\n                            data:[],\n                            color: 'rgba(99,194,222, 0.8)',\n                            backgroundColor: \"#73818f\"\n                        },\n                        {\n                            name:this.$t('m.index.average_num'),\n                            type:'line',\n                            yAxisIndex: 1,\n                            smooth: true,\n                            data:[],\n                            color: 'rgba(248,108,107, 0.8)'\n                        }\n                    ]\n                },\n                tableFields: {\n                    user: {\n                        label: this.$t('m.index.user'),\n                        class: \"text-left\"\n                    },\n                    action: {\n                        label: this.$t('m.common.action'),\n                        class: \"text-left\"\n                    },\n                    vehicle: {\n                        label: this.$t('m.common.vehicle'),\n                        class: \"text-left\"\n                    },\n                    time: {\n                        label: this.$t('m.index.time_stamp'),\n                        class: \"text-left\"\n                    }\n                },\n                pie1: null,\n                pie2: null,\n                data: null\n            }\n        },\n        mounted() {\n            this.env = process.env.VUE_APP_ENV;\n            this.$store.dispatch(\"clear_log_list\", []);\n            this.initData();\n        },\n        methods: {\n            initData() {\n                new Promise((resolve, reject) => {\n                    httpclient.get(\"/api/v1/index\", {}).then((response) => {\n                        httpclient.get(\"/api/v1/vehicle/availableLogList\", {}).then((res) => {\n                            this.filterData(response.data.data, res.data.data)\n                            resolve();\n                        }).catch(() => {\n                            this.filterData(response.data.data, []);\n                            resolve();\n                        });\n                    }).catch((err) => {\n                        resolve();\n                    });\n                }).then(() => {\n                    this.getSales(2);\n                }).then(() => {\n                    this.getDealData(1)\n                })\n\n            },\n            chooseDealDate(type){\n                this.daily = type;\n                let num = (type == 'daily') ? 1: (type == 'week' ? 2 : 3);\n                this.getDealData(num)\n            },\n            getDealData(num) {\n                httpclient.post(\"/api/v1/index/averageparkinglotdata\", {timeType: num}).then((res) => {\n                    this.filterDealData(res.data.data);\n                }).catch((err) => {\n                    // alert(err)\n                })\n            },\n            filterDealData(data) {\n                this.deaLoction.series = [];\n                this.deaLoction.xAxis.data = [];\n                this.deaLoction.legend.data = [];\n                let firstTime = getYMDFormart(data[0].averageDrivingTime2[data[0].averageDrivingTime2.length - 1].data);\n                let lastTime = getYMDFormart(data[0].averageDrivingTime2[0].data);\n                this.dailyDate = `${firstTime} - ${lastTime}`;\n                data.map((item, key) => {\n                    this.deaLoction.legend.data.push({\n                        name: item.parkingName,\n                        icon: \"roundRect\"\n                    });\n                    let seData = [];\n                    item.averageDrivingTime.reverse().map((it, k) => {\n                        seData.push(it.value);\n                        key == 0 ? this.deaLoction.xAxis.data.push(it.data) : null;\n                    });\n                    this.deaLoction.series.push({\n                        name: item.parkingName,\n                        type:'line',\n                        smooth: true,\n                        data: seData,\n                        color: `rgba(${this.color[key]})`,\n                        backgroundColor: \"#73818f\"\n                    })\n\n                });\n                echarts.init(document.getElementById(\"deaLocation\")).setOption(this.deaLoction);\n            },\n            filterSalesData(data) {\n                this.saleOption.xAxis.data = [];\n                this.saleOption.series[0].data = [];\n                this.saleOption.series[1].data = [];\n                let firstTime = getYMDFormart(data[data.length - 1].standardStartDate);\n                let lastTime = getYMDFormart(data[0].standardStartDate);\n                this.salePersonDate = `${firstTime} - ${lastTime}`;\n                for (let item of data.reverse()) {\n                    this.saleOption.xAxis.data.push(item.startDate);\n                    this.saleOption.series[0].data.push(item.averageDrivingTime);\n                    this.saleOption.series[1].data.push(item.averageDrivingNumber);\n                }\n                echarts.init(document.getElementById(\"sale\")).setOption(this.saleOption);\n            },\n            getSales(num) {\n                httpclient.post(\"/api/v1/index/averagesalesdata\", {timeType: num}).then((res) => {\n                    this.filterSalesData(res.data.data);\n                }).catch((err) => {\n                    // alert(err)\n                })\n            },\n            chooseSaleDate(type) {\n                this.weekly = type;\n                let num = (type == 'month') ? 3 : 2;\n                this.getSales(num)\n            },\n            formatTime(val) {//格式化时间（06/17/2019 19:08）\n                let mon = (val.getMonth() + 1) > 9 ? (val.getMonth() + 1) : '0' + (val.getMonth() + 1);\n                let data = val.getDate() > 9 ? val.getDate() : '0' + val.getDate();\n                let hour = val.getHours() > 9 ? val.getHours() : '0' + val.getHours();\n                let minute = val.getMinutes() > 9 ? val.getMinutes() : '0' + val.getMinutes();\n                return mon + '/' + data + '/' + val.getFullYear() + '  ' + hour + ':' + minute\n            },\n            filterData(data, loglist) {\n                this.data = data;\n                this.showLog = loglist.map(item => {\n                    return {\n                        user: item.firstName + \" \" + item.lastName,\n                        action: item.available == '1' ? this.$t('m.index.has_just') + this.$t('m.index.check_in') : this.$t('m.index.has_just') + this.$t('m.index.check_out'),\n                        vehicle: `${item.year ? item.year : 'N/A'} ${item.make ? item.make : 'N/A'} ${item.model ? item.model : 'N/A'}`,\n                        time: getDateString(Number(item.createTime)),\n                        vehicleId: item.vehicleId,\n                        userId: item.checkUserId\n                    }\n                });\n                this.$store.dispatch(\"save_log_list\", this.showLog);\n\n                this.lastDate = this.formatTime(new Date());\n                let batHealth = [\"extremelyLowPower\", \"lowPower\", \"commonPower\"];\n                let inventory = [\"inLots\", \"offLots\"];\n\n                for (let item in this.card) {\n                    this.card[item][\"num\"] = data[item] ? data[item][\"num\"] : \"\";\n                    this.card[item][\"filters\"] = data[item] ? data[item][\"filters\"] : \"\";\n                    this.card[item][\"key\"] = data[item] ? data[item][\"filters\"][0].key: \"\";\n                    this.card[item][\"value\"] = data[item] ? data[item][\"filters\"][0].value[0]: \"\";\n                }\n\n                for (let i in batHealth){\n                    this.option1.series[0].data[i].value = data[batHealth[i]][\"num\"]\n                }\n                for (let i in inventory){\n                    this.option2.series[0].data[i].value = data[inventory[i]][\"num\"];\n                }\n                this.pie1 = echarts.init(document.getElementById(\"battery-health\"));\n                this.pie1.setOption(this.option1);\n                this.pie2 = echarts.init(document.getElementById(\"inventory-location\"));\n                this.pie2.setOption(this.option2);\n                let self = this;\n                this.pie1.on(\"click\", function (param) {\n                    if (param.dataIndex == 0) {\n                        self.$router.push({name: \"VehicleList\",\n                            query: {filters:  JSON.stringify([{key:\"battery\",value:[\"1\"]}]) }})\n                    } else if(param.dataIndex == 1) {\n                        self.$router.push({name: \"VehicleList\",\n                            query: {filters:  JSON.stringify([{key:\"battery\",value:[\"2\"]}]) }})\n                    } else {\n                        self.$router.push({name: \"VehicleList\",\n                            query: {filters:  JSON.stringify([{key:\"battery\",value:[\"3\"]}]) }})\n                    }\n                });\n                this.pie2.on(\"click\", function (param) {\n                    if (param.dataIndex == 0) {\n                        self.$router.push({name: \"VehicleList\",\n                            query: {filters:  '[' + JSON.stringify(self.data.inLots.filters[0]) + ']' }})\n                    } else {\n                        self.$router.push({name: \"VehicleList\",\n                            query: {filters: '[' + JSON.stringify(self.data.offLots.filters[0]) + ']' }})\n                    }\n                });\n\n            }\n        }\n\n    }\n</script>\n"],"sourceRoot":"src/views/dashboard/dashboardMain/components"}]}