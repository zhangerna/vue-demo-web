{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js!/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/addShop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/addShop.vue","mtime":1567594357000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpClient from \"@/utils/httpclient\";\nimport model from \"@/components/model\";\nexport default {\n  name: \"addShop\",\n  components: {\n    model: model\n  },\n  data: function data() {\n    return {\n      btnGroup: {\n        btnSecond: this.$t('m.tip.b_ok')\n      },\n      showTip: false,\n      title: \"\",\n      info: \"\",\n      name: \"\",\n      list: [],\n      country: '',\n      state: '',\n      city: '',\n      street: \"\",\n      cityE: false,\n      stateE: false,\n      countryE: false,\n      apartment: \"\",\n      zipCode: \"\",\n      buttonStatus: false,\n      zipE: false,\n      apartE: false,\n      streetE: false,\n      nameE: false,\n      hasSubmit: false,\n      managerE: false,\n      managerList: [{\n        email: \"\",\n        phone: \"\",\n        lastName: \"\",\n        firstName: \"\"\n      }]\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    httpClient.get(\"/api/v1/getprovicescity\").then(function (res) {\n      if (res.data.code == 200) {\n        _this.list = res.data.data.countryList;\n      }\n    });\n  },\n  methods: {\n    closeBox: function closeBox(type) {\n      if (type) {\n        // window.location.reload();\n        this.$router.push('/shop-manager');\n      }\n    },\n    addAdmin: function addAdmin() {\n      this.managerList.push({\n        email: \"\",\n        phone: \"\",\n        lastName: \"\",\n        firstName: \"\"\n      });\n    },\n    checkData: function checkData() {\n      this.hasSubmit = true;\n      this.nameE = this.name ? false : true;\n      this.zipE = this.zipCode ? false : true;\n      this.streetE = this.street ? false : true;\n      this.apartE = this.apartment ? false : true;\n      this.countryE = this.country ? false : true;\n      this.stateE = this.state ? false : true;\n      this.cityE = this.city ? false : true;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(this.managerList), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (!item.email || item.email.indexOf(\"@\") < 0 || !item.phone || !item.lastName || !item.firstName) {\n            this.managerE = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    insertData: function insertData() {\n      var _this2 = this;\n\n      this.buttonStatus = true;\n      this.checkData();\n\n      if (!this.nameE && !this.zipE && !this.streetE && !this.apartE && !this.managerE && !this.countryE && !this.stateE && !this.cityE) {\n        httpClient.post('/api/v1/store/insert', {\n          insertSaasTenantStoreDTO: {\n            cityCode: this.list[this.country - 1]['proviceList'][this.state - 1]['cityList'][this.city - 1].cityId,\n            countryCode: this.list[this.country - 1].countryId,\n            stateCode: this.list[this.country - 1]['proviceList'][this.state - 1].provicesId,\n            storeAddress: this.apartment,\n            storeName: this.name,\n            streetAddress: this.street,\n            zipCode: this.zipCode\n          },\n          inviteUserParamDTO: this.managerList\n        }).then(function (res) {\n          _this2.showTip = true;\n          _this2.title = _this2.$t('m.tip.suc');\n          _this2.info = _this2.$t('m.tip.save_succ');\n        });\n      } else {\n        this.buttonStatus = false;\n      }\n    }\n  }\n};",null]}