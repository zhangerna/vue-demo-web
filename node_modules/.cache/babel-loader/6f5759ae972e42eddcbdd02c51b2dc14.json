{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/alerts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/alerts.vue","mtime":1560922526000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpclient from '@/utils/httpclient';\nimport { getDateString } from \"../../../utils/date\";\nexport default {\n  name: \"alerts\",\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      show: false,\n      tableFields: {\n        alertType: {\n          label: \"Alert Type\",\n          class: \"text-center\"\n        },\n        vehicle: {\n          label: \"Vehicle\",\n          class: \"text-center\"\n        },\n        stockNo: {\n          label: \"Stock NO.\",\n          class: \"text-center\"\n        },\n        time: {\n          label: \"Time\",\n          class: \"text-center\"\n        },\n        status: {\n          label: \"Status\",\n          class: \"text-center\"\n        },\n        action: {\n          label: \"Actions\",\n          class: \"text-center\"\n        }\n      },\n      data: null,\n      table: null,\n      pageCount: 0,\n      updateInfo: ''\n    };\n  },\n  mounted: function mounted() {\n    this.axiosData(this.currentPage);\n  },\n  methods: {\n    axiosData: function axiosData(pageNo) {\n      var _this = this;\n\n      httpclient.post(\"/api/v1/alert/list?pageNo=\".concat(pageNo, \"&pageSize=10\")).then(function (response) {\n        console.log(response);\n        _this.currentPage = response.data.data.pageNo;\n        _this.total = response.data.data.rowCount;\n        _this.data = response.data.data;\n        _this.pageCount = response.data.data.totalPages;\n\n        _this.filterData();\n      });\n    },\n    filterData: function filterData() {\n      this.table = this.data.datas.map(function (item) {\n        var year = item.year ? item.year : 'N/A';\n        var make = item.make ? item.make : 'N/A';\n        var model = item.model ? item.model : 'N/A';\n        return {\n          \"alertType\": item.alertTypeName,\n          \"vehicle\": \"\".concat(year, \" \").concat(make, \" \").concat(model),\n          \"stockNo\": item.stockNum ? item.stockNum : 'N/A',\n          \"time\": item.createTime ? getDateString(item.createTime) : 'N/A',\n          \"status\": item.alertStatus,\n          'id': item.id\n        };\n      });\n    },\n    changeFL: function changeFL(type) {\n      this.axiosData(type == 'f' ? 1 : this.pageCount);\n    },\n    prevPage: function prevPage() {\n      this.axiosData(this.currentPage > 1 ? this.currentPage - 1 : 1);\n    },\n    nextPage: function nextPage() {\n      this.axiosData(this.currentPage >= this.pageCount ? this.currentPage : this.currentPage + 1);\n    },\n    changePage: function changePage(page) {\n      console.log(page);\n      this.axiosData(page);\n    },\n    reload: function reload() {\n      window.location.reload();\n    },\n    updateVehicle: function updateVehicle(id) {\n      var self = this;\n      httpclient.post('/api/v1/alert/update/status', {\n        alertId: id\n      }).then(function (response) {\n        if (response.data.code == 200) {\n          self.updateInfo = 'The alert status has been modified';\n          self.show = true;\n        } else {\n          self.updateInfo = 'update error';\n          self.show = true;\n        }\n      }).catch(function (error) {});\n    }\n  }\n};",{"version":3,"sources":["alerts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"animated fadeIn alerts\">\n        <b-card>\n            <div slot=\"header\">\n                <i class='nav-icon cui cui-bell'></i>\n                <span>Alerts</span>\n            </div>\n            <b-table class=\"mb-0 table-outline\" small striped responsive=\"sm\" :items=\"table\" hover :fields=\"tableFields\" head-variant=\"light\">\n                <template slot=\"status\" slot-scope=\"data\">\n                    <span class=\"badge badge-pill\" :class=\"data.item.status == 1 ? 'badge-success' : 'badge-danger'\">\n                        {{ data.item.status == 1 ? 'Solved' : 'Unsolved' }}\n                    </span>\n                </template>\n                <template slot=\"action\" slot-scope=\"data\">\n                    <div class=\"btn btn-sm btn-info m-1\" @click=\"$router.push('/alerts/detail/'+data.item.id)\">\n                        <i class=\"fa fa-eye\"></i>\n                    </div>\n                    <template v-if=\"data.item.status == 1\">\n                        <div class=\"btn btn-sm btn-update btn-secondary\" disabled>\n                            <i class=\"cui fa fa-wrench\"></i>\n                        </div>\n                    </template>\n                    <template v-else>\n                        <div class=\"btn btn-sm btn-update btn-success\" @click=\"updateVehicle(data.item.id)\">\n                            <i class=\"cui fa fa-wrench\"></i>\n                        </div>\n                    </template>\n                </template>\n            </b-table>\n\n            <b-row v-if=\"total > 0\">\n                <b-col sm=\"4\" lg=\"4\">\n                    <div class=\"dataTables_info\" id=\"DataTables0\" role=\"status\" aria-live=\"polite\">\n                        Showing {{10 * (currentPage - 1) + 1 }} to {{currentPage === pageCount? total :currentPage * 10 }} of {{total}} entries\n                    </div>\n                </b-col>\n                <b-col sm=\"8\" lg=\"8\">\n                    <b-pagination align=\"right\" :total-rows=\"total\" v-model=\"currentPage\" :per-page=\"pageSize\" @input=\" changePage(currentPage)\"></b-pagination>\n                </b-col>\n\n            </b-row>\n\n\n        </b-card>\n        <b-modal ref=\"my-modal\" hide-footer title=\"Success\" v-model=\"show\" @ok=\"show = false\">\n            <div>Update Success! </div>\n            <b-button class=\"btn btn-primary\" style=\"float: right\" @click=\"reload()\">Ok</b-button>\n        </b-modal>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    .card-header span{\n        margin-left: 10px;\n    }\n    .alerts {\n        .bv-d-xs-down-none {\n            display: none;\n        }\n        .modal {\n            .modal-body button {\n                color: #fff;\n                background-color: #20a8d8;\n                border-color: #20a8d8;\n            }\n        }\n    }\n</style>\n\n<script>\n    import httpclient from '@/utils/httpclient';\n    import { getDateString } from \"../../../utils/date\";\n\n    export default {\n        name: \"alerts\",\n        data() {\n            return {\n                currentPage: 1,\n                pageSize: 10,\n                total: 0,\n                show: false,\n                tableFields: {\n                    alertType: {\n                        label: \"Alert Type\",\n                        class: \"text-center\"\n                    },\n                    vehicle: {\n                        label: \"Vehicle\",\n                        class: \"text-center\"\n                    },\n                    stockNo: {\n                        label: \"Stock NO.\",\n                        class: \"text-center\"\n                    },\n                    time: {\n                        label: \"Time\",\n                        class: \"text-center\"\n                    },\n                    status: {\n                        label: \"Status\",\n                        class: \"text-center\"\n                    },\n                    action: {\n                        label: \"Actions\",\n                        class: \"text-center\"\n                    }\n                },\n                data: null,\n                table: null,\n                pageCount: 0,\n                updateInfo: ''\n            }\n        },\n        mounted(){\n            this.axiosData(this.currentPage);\n        },\n        methods: {\n            axiosData(pageNo) {\n                httpclient.post(`/api/v1/alert/list?pageNo=${pageNo}&pageSize=10`)\n                    .then(response => {\n                        console.log(response);\n                        this.currentPage = response.data.data.pageNo;\n                        this.total = response.data.data.rowCount;\n                        this.data = response.data.data;\n                        this.pageCount = response.data.data.totalPages;\n                        this.filterData();\n                    })\n            },\n            filterData() {\n                this.table = this.data.datas.map((item) => {\n                   let year = item.year ? item.year : 'N/A';\n                   let make = item.make ? item.make : 'N/A';\n                   let model = item.model ? item.model : 'N/A';\n                    return {\n                        \"alertType\" : item.alertTypeName,\n                        \"vehicle\": `${year} ${make} ${model}`,\n                        \"stockNo\": item.stockNum ? item.stockNum : 'N/A',\n                        \"time\": item.createTime ? getDateString(item.createTime) : 'N/A',\n                        \"status\": item.alertStatus,\n                        'id': item.id\n                    }\n                });\n            },\n            changeFL(type) {\n                this.axiosData(type == 'f' ? 1 : this.pageCount)\n            },\n            prevPage(){\n                this.axiosData(this.currentPage > 1  ? this.currentPage - 1 : 1)\n            },\n            nextPage(){\n                this.axiosData(this.currentPage >= this.pageCount  ? this.currentPage : this.currentPage + 1)\n            },\n            changePage(page) {\n                console.log(page);\n                this.axiosData(page);\n            },\n            reload() {\n                window.location.reload();\n            },\n            updateVehicle(id) {\n                let self = this;\n                httpclient.post('/api/v1/alert/update/status', {\n                    alertId: id\n                }).then(response => {\n                    if (response.data.code == 200) {\n                        self.updateInfo = 'The alert status has been modified';\n                        self.show = true;\n                    } else {\n                        self.updateInfo = 'update error';\n                        self.show = true;\n                    }\n                }).catch(error => {\n                })\n            }\n        }\n    }\n</script>"],"sourceRoot":"src/views/dashboard/dashboardMain"}]}