{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js!/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/testVehicle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/testDrive/testVehicle.vue","mtime":1569555094000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpClient from \"@/utils/httpclient\";\nimport myMap from '@components/map';\nexport default {\n  name: \"shopManager\",\n  components: {\n    myMap: myMap\n  },\n  inject: ['reload'],\n  data: function data() {\n    return {\n      map: {},\n      showMap: false,\n      tableFields: {\n        photo: {\n          label: this.$t('m.vehicle.photo'),\n          class: \"text-center\"\n        },\n        info: {\n          label: this.$t('m.sold_vehicle.info'),\n          class: \"text-center\"\n        },\n        point: {\n          label: this.$t('m.cloud.point'),\n          class: \"text-center\"\n        },\n        status: {\n          label: this.$t('m.cloud.status'),\n          class: \"text-center\"\n        },\n        actions: {\n          label: this.$t('m.vehicle.actions'),\n          class: \"Actions\"\n        }\n      },\n      table: null,\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      totalPages: 0,\n      showChangeTip: false,\n      curStatus: 'all',\n      curVehicleId: '',\n      curLot: 'all',\n      curParkId: '',\n      changeErrorTip: false,\n      lotList: [],\n      allStatus: [{\n        id: \"10\",\n        name: this.$t('m.cloud.ready')\n      }, {\n        id: \"20\",\n        name: this.$t('m.cloud.test_drive')\n      }, {\n        id: \"30\",\n        name: this.$t('m.cloud.w_accept')\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.initData(this.currentPage);\n  },\n  methods: {\n    initData: function initData(page) {\n      var _this = this;\n\n      httpClient.get(\"/api/v1/clouddrive/vehicle/pagelist?pageNo=\".concat(page, \"&pageSize=\").concat(this.pageSize).concat(!this.curStatus || this.curStatus == 'all' ? '' : '&drivingStatus=' + this.curStatus)).then(function (response) {\n        if (response.data.code == 200 && response.data.data.datas) {\n          _this.total = response.data.data.rowCount;\n\n          _this.filterData(response.data.data);\n\n          _this.totalPages = response.data.data.totalPages;\n        } else {\n          _this.table = [];\n        }\n      });\n      httpClient.get(\"/api/v1/clouddrive/parkinglot/list\").then(function (res) {\n        if (res.data.code == 200) {\n          _this.lotList = res.data.data;\n        }\n      });\n    },\n    changePoint: function changePoint() {\n      var _this2 = this;\n\n      if (this.curLot && this.curLot != 'all') {\n        httpClient.post(\"/api/v1/clouddrive/vehicle/transferparking\", {\n          isRemove: this.curLot == \"remove\" ? 1 : '',\n          receiveParkingId: this.curLot == \"remove\" ? '' : this.curLot,\n          vehicleId: this.curVehicleId,\n          orgParkingid: this.curParkId\n        }).then(function (res) {\n          if (res.data.code == 200 && res.data.data.result) {\n            window.location.reload();\n          } else {\n            _this2.changeErrorTip = true;\n          }\n        });\n      }\n    },\n    openMap: function openMap(lat, lng) {\n      if (lat) {\n        this.map = {\n          lat: lat,\n          lng: lng,\n          area: [],\n          vehicleInfo: {}\n        };\n        this.showMap = true;\n      }\n    },\n    showChangePoint: function showChangePoint(vehicleId, parkId) {\n      this.curParkId = parkId;\n      this.curVehicleId = vehicleId;\n      this.showChangeTip = true;\n    },\n    filterData: function filterData(data) {\n      this.table = data.datas.map(function (item) {\n        return {\n          photo: item.photoPath ? item.photoPath : require(\"@/assets/pages-img/placeholder.svg\"),\n          year: item.year,\n          make: item.make,\n          model: item.model,\n          alias: item.alias,\n          color: item.color,\n          trim: item.trim,\n          stock: item.stockNumber,\n          plat: item.plat,\n          point: item.parkingName,\n          status: item.orderStatus,\n          vehicleId: item.vehicleId,\n          vehicleStatus: item.testDrivingStatus,\n          parkingId: item.parkingLotId,\n          orderId: item.orderId,\n          id: item.id,\n          lat: item.lastLocationLat,\n          lng: item.lastLocationLng\n        };\n      });\n    },\n    searchStatus: function searchStatus() {\n      this.initData(this.currentPage);\n    },\n    prevPage: function prevPage() {\n      this.initData(this.currentPage > 1 ? this.currentPage - 1 : 1);\n    },\n    nextPage: function nextPage() {\n      this.initData(this.currentPage >= this.pageCount ? this.currentPage : this.currentPage + 1);\n    },\n    changePage: function changePage(page) {\n      this.initData(page);\n    },\n    verifyCar: function verifyCar(id) {\n      var _this3 = this;\n\n      httpClient.get(\"/api/v1/clouddrive/order/check?orderId=\".concat(id)).then(function (res) {\n        if (res.data.code == 200 && res.data.data.result) {\n          _this3.reload();\n        } else {\n          alert(res.data.data.content);\n        }\n      });\n    }\n  }\n};",null]}