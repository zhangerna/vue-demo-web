{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js!/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/admin.vue","mtime":1560923470000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpClient from '@/utils/httpclient';\nimport Alert from '@components/model';\nexport default {\n  name: 'user',\n  components: {\n    Alert: Alert\n  },\n  data: function data() {\n    return {\n      fields: {\n        Username: {\n          key: 'Username',\n          label: 'Username'\n        },\n        userEmail: {\n          key: 'Email',\n          label: 'Email'\n        },\n        city: {\n          key: 'Phone',\n          label: 'Phone'\n        },\n        Role: {\n          key: 'Role',\n          label: 'Role'\n        },\n        Dealership: {\n          key: 'Dealership',\n          label: 'Dealership'\n        },\n        status: {\n          label: 'Active/Inactive'\n        },\n        action: {\n          label: 'Action'\n        }\n      },\n      items: null,\n      data: null,\n      currentPage: 1,\n      rows: 1,\n      perPage: 1,\n      totalPages: 1,\n      adminId: 0,\n      deleteUser: false,\n      showAlerts: {\n        title: '',\n        content: '',\n        show: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.getList(1);\n    this.adminId = this.$store.state.userInfo.userId;\n  },\n  methods: {\n    getList: function getList(num) {\n      var _this = this;\n\n      var url = 'https://api-saas-qa.zus.ai/api/v1/listUserDeatil?pageNo=' + num + '&pageSize=10';\n      httpClient.post(url).then(function (res) {\n        _this.rows = res.data.data.rowCount;\n        _this.currentPage = res.data.data.pageNo;\n        _this.perPage = res.data.data.pageSize;\n        _this.totalPages = res.data.data.totalPages;\n        console.log(res);\n        _this.data = res.data.data.datas;\n        var myData = res.data.data.datas;\n        var myItems = [];\n        myData.map(function (item, i) {\n          myItems.push({\n            Username: item.firstName + ' ' + item.lastName,\n            Email: item.userEmail,\n            Phone: item.phone,\n            Role: item.role,\n            userId: item.userId,\n            status: item.status,\n            Dealership: item.storeName,\n            \"Active/InActive\": item.status === 1 ? 'Active' : 'InActive',\n            Action: ''\n          });\n        });\n        _this.items = myItems;\n      });\n    },\n    turnToPage: function turnToPage(p) {\n      this.getList(p);\n    },\n    delData: function delData(userid) {\n      var _this2 = this;\n\n      httpClient.post('https://api-saas-qa.zus.ai/api/v1/user/delete', {\n        userId: userid\n      }).then(function (res) {\n        if (res.data.data === true) {\n          _this2.getList(1, 10);\n        }\n\n        console.log(res);\n      }).catch(function (err) {});\n    },\n    openBox: function openBox(clickId) {\n      var passData = {\n        title: 'Are you sure to delete the user?',\n        show: true,\n        content: '',\n        buttonText: {\n          btnFirst: 'Cancel',\n          btnSecond: 'OK',\n          userId: clickId\n        }\n      };\n      this.closeRemind(passData);\n    },\n    closeRemind: function closeRemind(data) {\n      this.showAlerts.show = data.show;\n      this.showAlerts.title = data.title;\n      this.showAlerts.content = data.content;\n      this.showAlerts.buttonText = data.buttonText;\n    },\n    closeBox: function closeBox(data, ids) {\n      this.showAlerts.show = !this.showAlerts.show;\n      this.deleteUser = data !== 'Cancel';\n\n      if (this.deleteUser === true) {\n        this.delData(ids);\n      }\n    }\n  }\n};",null]}