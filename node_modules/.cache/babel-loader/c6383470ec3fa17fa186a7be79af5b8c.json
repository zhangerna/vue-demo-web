{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/mainI.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/mainI.vue","mtime":1561016599000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _getIterator from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport _Promise from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpclient from '@/utils/httpclient';\nimport echarts from 'echarts';\nimport { getDateString, getYMDFormart } from \"@/utils/date\";\nexport default {\n  name: \"mainI\",\n  data: function data() {\n    return {\n      weekly: \"week\",\n      daily: \"daily\",\n      dailyDate: \"\",\n      salePersonDate: \"\",\n      card: {\n        \"inventory\": {\n          img: require('@assets/pages-img/inven-icon.svg'),\n          type: \"inventory\",\n          class: \"bg-primary\",\n          num: \"\",\n          filters: null,\n          key: '',\n          value: ''\n        },\n        \"offLots\": {\n          img: require('@assets/pages-img/off-lot.svg'),\n          type: \"off lot\",\n          class: \"bg-info\",\n          num: \"\",\n          filters: null,\n          key: '',\n          value: ''\n        },\n        \"extremelyLowPower\": {\n          img: require('@assets/pages-img/low-bat.svg'),\n          type: \"low battery\",\n          class: \"bg-warning\",\n          num: \"\",\n          filters: null,\n          key: '',\n          value: ''\n        },\n        \"offLine\": {\n          img: require('@assets/pages-img/off-line.svg'),\n          type: \"offline\",\n          class: \"bg-danger\",\n          num: \"\",\n          filters: null,\n          key: '',\n          value: ''\n        }\n      },\n      option1: {\n        legend: {\n          y: \"20px\",\n          textStyle: {\n            color: [\"#fff\"]\n          },\n          data: ['11.7V or lower', '11.7V - 12.1V', 'Above 12.1V']\n        },\n        series: [{\n          type: 'pie',\n          label: {\n            show: false\n          },\n          labelLine: {\n            show: false\n          },\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: [{\n            value: 0,\n            name: '11.7V or lower'\n          }, {\n            value: 0,\n            name: '11.7V - 12.1V'\n          }, {\n            value: 0,\n            name: 'Above 12.1V'\n          }],\n          color: ['rgb(255,99,132)', 'rgb(255, 205, 86)', 'rgb(54, 162, 235)']\n        }]\n      },\n      option2: {\n        legend: {\n          y: \"20px\",\n          textStyle: {\n            color: [\"#fff\"]\n          },\n          data: ['On Lot', 'Off Lot']\n        },\n        series: [{\n          label: {\n            show: false\n          },\n          labelLine: {\n            show: false\n          },\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: [{\n            value: 0,\n            name: 'On Lot'\n          }, {\n            value: 0,\n            name: 'Off Lot'\n          }],\n          color: ['rgb(54, 162, 235)', 'rgb(255,99,132)']\n        }]\n      },\n      showLog: false,\n      lastDate: null,\n      color: ['99,194,222,0.8', '248,108,107,0.8', '255,193,5,0.8', '32,168,216,0.8', '77,189,116,0.8'],\n      deaLoction: {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: [],\n          textStyle: {\n            color: [\"#fff\"]\n          }\n        },\n        grid: {\n          left: '1%',\n          right: '1%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"black\"\n            }\n          },\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: \"#73818f\"\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"black\"\n            }\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"#73818f\"\n            }\n          }\n        },\n        series: []\n      },\n      saleOption: {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: [{\n            name: \"Average Time(min)\",\n            icon: \"roundRect\"\n          }, {\n            name: \"Average Number\",\n            icon: \"roundRect\"\n          }],\n          textStyle: {\n            color: [\"#fff\"]\n          }\n        },\n        grid: {\n          left: '1%',\n          right: '1%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"black\"\n            }\n          },\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: \"#73818f\"\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"black\"\n            }\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"#73818f\"\n            }\n          }\n        },\n        series: [{\n          name: 'Average Time(min)',\n          type: 'line',\n          stack: '总量',\n          smooth: true,\n          data: [],\n          color: 'rgba(99,194,222, 0.8)',\n          backgroundColor: \"#73818f\"\n        }, {\n          name: 'Average Number',\n          type: 'line',\n          stack: '总量',\n          smooth: true,\n          data: [],\n          color: 'rgba(248,108,107, 0.8)'\n        }]\n      },\n      tableFields: {\n        user: {\n          label: \"User\",\n          class: \"text-left\"\n        },\n        action: {\n          label: \"Action\",\n          class: \"text-left\"\n        },\n        vehicle: {\n          label: \"Vehicle\",\n          class: \"text-left\"\n        },\n        time: {\n          label: \"TimeStamp\",\n          class: \"text-left\"\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      new _Promise(function (resolve, reject) {\n        httpclient.get(\"/api/v1/index\", {}).then(function (response) {\n          resolve(response.data.data);\n        }).catch(function (err) {\n          reject(err);\n          alert(err);\n        });\n      }).then(function (data) {\n        httpclient.get(\"/api/v1/vehicle/availableLogList\", {}).then(function (res) {\n          _this.filterData(data, res.data.data);\n        }).catch(function (err) {\n          alert(err);\n        });\n      }).then(function () {\n        _this.getSales(2);\n      }).then(function () {\n        _this.getDealData(1);\n      });\n    },\n    chooseDealDate: function chooseDealDate(type) {\n      this.daily = type;\n      var num = type == 'daily' ? 1 : type == 'week' ? 2 : 3;\n      this.getDealData(num);\n    },\n    getDealData: function getDealData(num) {\n      var _this2 = this;\n\n      httpclient.post(\"/api/v1/index/averageparkinglotdata\", {\n        timeType: num\n      }).then(function (res) {\n        _this2.filterDealData(res.data.data);\n      }).catch(function (err) {\n        alert(err);\n      });\n    },\n    filterDealData: function filterDealData(data) {\n      var _this3 = this;\n\n      this.deaLoction.series = [];\n      this.deaLoction.xAxis.data = [];\n      this.deaLoction.legend.data = [];\n      var firstTime = getYMDFormart(data[0].averageDrivingTime2[data[0].averageDrivingTime2.length - 1].data);\n      var lastTime = getYMDFormart(data[0].averageDrivingTime2[0].data);\n      this.dailyDate = \"\".concat(firstTime, \" - \").concat(lastTime);\n      data.map(function (item, key) {\n        _this3.deaLoction.legend.data.push({\n          name: item.parkingName,\n          icon: \"roundRect\"\n        });\n\n        var seData = [];\n        item.averageDrivingTime.reverse().map(function (it, k) {\n          seData.push(it.value);\n          key == 0 ? _this3.deaLoction.xAxis.data.push(it.data) : null;\n        });\n\n        _this3.deaLoction.series.push({\n          name: item.parkingName,\n          type: 'line',\n          smooth: true,\n          data: seData,\n          color: \"rgba(\".concat(_this3.color[key], \")\"),\n          backgroundColor: \"#73818f\"\n        });\n      });\n      echarts.init(document.getElementById(\"deaLocation\")).setOption(this.deaLoction);\n    },\n    filterSalesData: function filterSalesData(data) {\n      this.saleOption.xAxis.data = [];\n      this.saleOption.series[0].data = [];\n      this.saleOption.series[1].data = [];\n      var firstTime = getYMDFormart(data[data.length - 1].standardStartDate);\n      var lastTime = getYMDFormart(data[0].standardStartDate);\n      this.salePersonDate = \"\".concat(firstTime, \" - \").concat(lastTime);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(data.reverse()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          this.saleOption.xAxis.data.push(item.startDate);\n          this.saleOption.series[0].data.push(item.averageDrivingTime);\n          this.saleOption.series[1].data.push(item.averageDrivingNumber);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      echarts.init(document.getElementById(\"sale\")).setOption(this.saleOption);\n    },\n    getSales: function getSales(num) {\n      var _this4 = this;\n\n      httpclient.post(\"/api/v1/index/averagesalesdata\", {\n        timeType: num\n      }).then(function (res) {\n        _this4.filterSalesData(res.data.data);\n      }).catch(function (err) {\n        alert(err);\n      });\n    },\n    chooseSaleDate: function chooseSaleDate(type) {\n      this.weekly = type;\n      var num = type == 'month' ? 3 : 2;\n      this.getSales(num);\n    },\n    formatTime: function formatTime(val) {\n      //格式化时间（06/17/2019 19:08）\n      var mon = val.getMonth() + 1 > 9 ? val.getMonth() + 1 : '0' + (val.getMonth() + 1);\n      var data = val.getDate() > 9 ? val.getDate() : '0' + val.getDate();\n      var hour = val.getHours() > 9 ? val.getHours() : '0' + val.getHours();\n      var minute = val.getMinutes() > 9 ? val.getMinutes() : '0' + val.getMinutes();\n      return mon + '/' + data + '/' + val.getFullYear() + '  ' + hour + ':' + minute;\n    },\n    filterData: function filterData(data, loglist) {\n      this.showLog = loglist.map(function (item) {\n        return {\n          user: item.firstName + \" \" + item.lastName,\n          action: item.available == '1' ? 'has just checked in' : 'has just checked out',\n          vehicle: \"\".concat(item.year ? item.year : 'N/A', \" \").concat(item.make ? item.make : 'N/A', \" \").concat(item.model ? item.model : 'N/A'),\n          time: getDateString(Number(item.createTime)),\n          vehicleId: item.vehicleId,\n          userId: item.checkUserId\n        };\n      });\n      this.$store.dispatch(\"save_log_list\", this.showLog);\n      this.lastDate = this.formatTime(new Date());\n      var batHealth = [\"extremelyLowPower\", \"lowPower\", \"commonPower\"];\n      var inventory = [\"inLots\", \"offLots\"];\n\n      for (var item in this.card) {\n        this.card[item][\"num\"] = data[item] ? data[item][\"num\"] : \"\";\n        this.card[item][\"filters\"] = data[item] ? data[item][\"filters\"] : \"\";\n        this.card[item][\"key\"] = data[item][\"filters\"] ? data[item][\"filters\"][0].key : \"\";\n        this.card[item][\"value\"] = data[item][\"filters\"] ? data[item][\"filters\"][0].value[0] : \"\";\n      }\n\n      for (var i in batHealth) {\n        this.option1.series[0].data[i].value = data[batHealth[i]][\"num\"];\n      }\n\n      for (var _i in inventory) {\n        this.option2.series[0].data[_i].value = data[inventory[_i]][\"num\"];\n      }\n\n      echarts.init(document.getElementById(\"battery-health\")).setOption(this.option1);\n      echarts.init(document.getElementById(\"inventory-location\")).setOption(this.option2);\n    }\n  }\n};",{"version":3,"sources":["mainI.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"animated fadeIn mainI\">\n        <b-row>\n            <b-col sm=\"6\" lg=\"3\" v-for=\"(item, index) in card\" :key=\"index\" class=\"card-hover\"\n                   @click='$router.push({name: \"vehicle\",\n                   query: {filters:  `[{ \"key\":\"${item.key}\",\"value\":[\"${item.value}\"]}]` }})'>\n                <b-card no-body :class=\"item.class\">\n                    <b-card-body>\n                        <b-row>\n                            <b-col sm=\"6\" lg=\"6\" class=\"remove-padding\">\n                                <img  :src=\"item.img\">\n                            </b-col>\n                            <b-col sm=\"6\" lg=\"6\" class=\"text-center text-white remove-padding\">\n                                <p class=\"text-uppercase font-weight-bold text-muted\">{{ index === 'extremelyLowPower' ? 'LOW BATTERY' : (index === 'offLots' ? 'OFF LOT' : index) }}</p>\n                                <p class=\"text-uppercase text-value-lg font-weight-bold text-muted\">{{ item.num }}</p>\n                            </b-col>\n                        </b-row>\n                    </b-card-body>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row v-if=\"showLog && showLog.length > 0\">\n            <b-col sm=\"12\" lg=\"12\">\n                <b-card\n                    header-tag=\"header\"\n                    footer-tag=\"footer\">\n                    <div slot=\"header\">\n                        <i class=\"fa fa-align-justify\"></i><strong>Recent Activities</strong>\n                        <small class=\"text-muted last-update\" v-cloak>Last update: {{ lastDate }}</small>\n                    </div>\n                    <b-table class=\"mb-0 table-outline\" small striped responsive=\"sm\" :items=\"$store.getters.logList\" hover :fields=\"tableFields\">\n                        <template slot=\"user\" slot-scope=\"data\">\n                            <span class=\"user-name\" @click=\"$router.push('/admin-detail/' + data.item.userId)\">{{ data.item.user }}</span>\n                        </template>\n                        <template slot=\"vehicle\" slot-scope=\"data\">\n                            <span class=\"user-name\" @click=\"$router.push('/vehicle/detail/' + data.item.vehicleId)\">{{ data.item.vehicle }}</span>\n                        </template>\n                    </b-table>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row columns class=\"pie-group\">\n            <b-col sm=\"6\" lg=\"6\">\n                <b-card header=\"Battery Health\" class=\"text-center\">\n                    <div style=\"height:400px\"  id=\"battery-health\">\n                    </div>\n                </b-card>\n            </b-col>\n            <b-col sm=\"6\" lg=\"6\">\n                <b-card header=\"Inventory Location\" class=\"text-center\">\n                    <div style=\"height:400px\"  id=\"inventory-location\">\n                    </div>\n                </b-card>\n            </b-col>\n        </b-row>\n        <b-row>\n            <b-col sm=\"12\" lg=\"12\">\n                <b-card>\n                    <b-row>\n                        <b-col sm=\"6\" lg=\"6\">\n                            <h4>Salesperson Test Drive Analysis</h4>\n                            <p class=\"text-muted\">{{ salePersonDate }}</p>\n                        </b-col>\n                        <b-col sm=\"6\" lg=\"6\" class=\"text-right\">\n                            <b-dropdown :text=\"weekly == 'week' ? 'Weeks' : 'Months'\" class=\"btn-group btn-group-toggle m-2 week-drop\">\n                                <b-dropdown-item>\n                                    <i v-if=\"weekly == 'week'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseSaleDate('week')\">\n                                        <h6>Weekly interval</h6>\n                                        <p class=\"small text-muted mb-0\">Data aggregated to every week, starting on Monday</p>\n                                    </div>\n                                </b-dropdown-item>\n                                <b-dropdown-item>\n                                    <i v-if=\"weekly != 'week'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseSaleDate('month')\">\n                                        <h6>Monthly interval</h6>\n                                        <p class=\"small text-muted mb-0\">Data aggregated to every calendar-month</p>\n                                    </div>\n                                </b-dropdown-item>\n                            </b-dropdown>\n                            <div style=\"display: inline-block\" class=\"text-muted\">Last {{ weekly == 'week' ? '12 Weeks' : '6 Months' }}</div>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" lg=\"12\" id=\"sale\" style=\"height: 400px\">\n                        </b-col>\n                    </b-row>\n                </b-card>\n            </b-col>\n        </b-row>\n\n        <b-row>\n            <b-col sm=\"12\" lg=\"12\">\n                <b-card>\n                    <b-row>\n                        <b-col sm=\"6\" lg=\"6\">\n                            <h4>Total Number of Test Drives Per Dealership Location</h4>\n                            <p class=\"text-muted\">{{ dailyDate }}</p>\n                        </b-col>\n                        <b-col sm=\"6\" lg=\"6\" class=\"text-right\">\n                            <b-dropdown :text=\"daily == 'daily' ? 'Daily' : (daily == 'week' ? 'Weekly' : 'Monthly')\" class=\"btn-group btn-group-toggle m-2 week-drop\">\n                                <b-dropdown-item>\n                                    <i v-if=\"daily == 'daily'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseDealDate('daily')\">\n                                        <h6>Daily interval</h6>\n                                        <p class=\"small text-muted mb-0\">Data aggregated to every day</p>\n                                    </div>\n                                </b-dropdown-item>\n                                <b-dropdown-item>\n                                    <i v-if=\"daily == 'week'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseDealDate('week')\">\n                                        <h6>Weekly interval</h6>\n                                        <p class=\"small text-muted mb-0\">Data aggregated to every week, starting on Monday</p>\n                                    </div>\n                                </b-dropdown-item>\n                                <b-dropdown-item>\n                                    <i v-if=\"daily == 'month'\" class=\"fa fa-check mt-3 mr-1 float-left\"></i>\n                                    <div @click=\"chooseDealDate('month')\">\n                                        <h6>Monthly interval</h6>\n                                        <p class=\"small text-muted mb-0\">Data aggregated to every calendar-month</p>\n                                    </div>\n                                </b-dropdown-item>\n                            </b-dropdown>\n                            <div style=\"display: inline-block\" class=\"text-muted\">Last {{ daily == 'week' ? '12 Weeks' : (daily == 'daily') ? '30 Days' : '6 Months' }}</div>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" lg=\"12\" id=\"deaLocation\" style=\"height: 400px\">\n                        </b-col>\n                    </b-row>\n                </b-card>\n            </b-col>\n        </b-row>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    .mainI {\n        .card {\n            width: 100%;\n        }\n        .remove-padding {\n            padding: 0 4px;\n        }\n        strong, small {\n            margin-left: 10px;\n        }\n        .card-hover {\n            cursor: pointer;\n        }\n        .user-name {\n            color: #20a8d8;\n            cursor: pointer;\n        }\n        .table-outline td {\n            height: 40px;\n        }\n        .table {\n            th {\n                color: #73818f;\n            }\n        }\n        .week-drop {\n            button {\n                color: #73818f;\n                background-color: transparent;\n                background-image: none;\n                border-color: #73818f;\n            }\n        }\n        .pie-group {\n            #battery-health > div, #inventory-location > div{\n                margin: 0 auto;\n            }\n            h4 {\n                text-align: center;\n                color: #73818f;\n            }\n        }\n    }\n</style>\n\n<script>\n    import httpclient from '@/utils/httpclient';\n    import echarts from 'echarts';\n    import { getDateString, getYMDFormart } from \"@/utils/date\"\n\n    export default {\n        name: \"mainI\",\n        data() {\n            return {\n                weekly: \"week\",\n                daily: \"daily\",\n                dailyDate: \"\",\n                salePersonDate: \"\",\n                card: {\n                    \"inventory\": {\n                        img: require('@assets/pages-img/inven-icon.svg'),\n                        type: \"inventory\",\n                        class: \"bg-primary\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    },\n                    \"offLots\": {\n                        img: require('@assets/pages-img/off-lot.svg'),\n                        type: \"off lot\",\n                        class: \"bg-info\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    },\n                    \"extremelyLowPower\": {\n                        img: require('@assets/pages-img/low-bat.svg'),\n                        type: \"low battery\",\n                        class: \"bg-warning\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    },\n                    \"offLine\": {\n                        img: require('@assets/pages-img/off-line.svg'),\n                        type: \"offline\",\n                        class: \"bg-danger\",\n                        num: \"\",\n                        filters: null,\n                        key:'',\n                        value:''\n                    }\n                },\n                option1 : {\n                    legend: {\n                        y: \"20px\",\n                        textStyle: {\n                            color:[\"#fff\"],\n                        },\n                        data:['11.7V or lower', '11.7V - 12.1V', 'Above 12.1V']\n                    },\n                    series : [\n                        {\n                            type:'pie',\n                            label: {\n                                show: false\n                            },\n                            labelLine: {\n                                show: false\n                            },\n                            radius : '55%',\n                            center: ['50%', '60%'],\n                            data:[\n                                {value:0, name:'11.7V or lower'},\n                                {value:0, name:'11.7V - 12.1V'},\n                                {value:0, name:'Above 12.1V'}\n                            ],\n                            color: ['rgb(255,99,132)',\n                                'rgb(255, 205, 86)',\n                                'rgb(54, 162, 235)',]\n                        }\n                    ]\n                },\n                option2 : {\n                    legend: {\n                        y: \"20px\",\n                        textStyle: {\n                            color:[\"#fff\"],\n                        },\n                        data:['On Lot', 'Off Lot']\n                    },\n                    series : [\n                        {\n                            label: {\n                                show: false\n                            },\n                            labelLine: {\n                                show: false\n                            },\n                            type:'pie',\n                            radius : '55%',\n                            center: ['50%', '60%'],\n                            data:[\n                                {value:0, name:'On Lot'},\n                                {value:0, name:'Off Lot'}\n                            ],\n                            color: ['rgb(54, 162, 235)',\n                                'rgb(255,99,132)']\n                        }\n                    ]\n                },\n                showLog: false,\n                lastDate: null,\n                color: ['99,194,222,0.8', '248,108,107,0.8', '255,193,5,0.8', '32,168,216,0.8', '77,189,116,0.8'],\n                deaLoction: {\n                    tooltip: {\n                        trigger: 'axis'\n                    },\n                    legend: {\n                        data:[],\n                        textStyle: {\n                            color:[\"#fff\"],\n                        }\n                    },\n                    grid: {\n                        left: '1%',\n                        right: '1%',\n                        bottom: '3%',\n                        containLabel: true\n                    },\n\n                    xAxis: {\n                        type: 'category',\n                        boundaryGap: false,\n                        splitLine: {\n                            show: true,\n                            lineStyle: {\n                                color: \"black\"\n                            }\n                        },\n                        data: [],\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#73818f\"\n                            }\n                        }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        splitLine: {\n                            show: true,\n                            lineStyle: {\n                                color: \"black\"\n                            }\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#73818f\"\n                            }\n                        }\n                    },\n                    series: []\n                },\n                saleOption: {\n                    tooltip: {\n                        trigger: 'axis'\n                    },\n                    legend: {\n                        data:[\n                            {\n                                name: \"Average Time(min)\",\n                                icon: \"roundRect\"\n                            },\n                            {\n                                name: \"Average Number\",\n                                icon: \"roundRect\",\n\n                            }],\n                        textStyle: {\n                            color:[\"#fff\"],\n                        }\n                    },\n                    grid: {\n                        left: '1%',\n                        right: '1%',\n                        bottom: '3%',\n                        containLabel: true\n                    },\n\n                    xAxis: {\n                        type: 'category',\n                        boundaryGap: false,\n                        splitLine: {\n                            show: true,\n                            lineStyle: {\n                                color: \"black\"\n                            }\n                        },\n                        data: [],\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#73818f\"\n                            }\n                        }\n                    },\n                    yAxis: {\n                        type: 'value',\n                        splitLine: {\n                            show: true,\n                            lineStyle: {\n                                color: \"black\"\n                            }\n                        },\n                        axisLine: {\n                            lineStyle: {\n                                color: \"#73818f\"\n                            }\n                        }\n                    },\n                    series: [\n                        {\n                            name:'Average Time(min)',\n                            type:'line',\n                            stack: '总量',\n                            smooth: true,\n                            data:[],\n                            color: 'rgba(99,194,222, 0.8)',\n                            backgroundColor: \"#73818f\"\n                        },\n                        {\n                            name:'Average Number',\n                            type:'line',\n                            stack: '总量',\n                            smooth: true,\n                            data:[],\n                            color: 'rgba(248,108,107, 0.8)'\n                        }\n                    ]\n                },\n                tableFields: {\n                    user: {\n                        label: \"User\",\n                        class: \"text-left\"\n                    },\n                    action: {\n                        label: \"Action\",\n                        class: \"text-left\"\n                    },\n                    vehicle: {\n                        label: \"Vehicle\",\n                        class: \"text-left\"\n                    },\n                    time: {\n                        label: \"TimeStamp\",\n                        class: \"text-left\"\n                    }\n                }\n        }\n        },\n        mounted() {\n            this.initData();\n        },\n        methods: {\n            initData() {\n                new Promise((resolve, reject) => {\n                    httpclient.get(\"/api/v1/index\", {}).then((response) => {\n                        resolve(response.data.data);\n                    }).catch((err) => {\n                        reject(err);\n                        alert(err)\n                    });\n                }).then((data) =>  {\n                    httpclient.get(\"/api/v1/vehicle/availableLogList\", {}).then((res) => {\n                        this.filterData(data, res.data.data)\n                    }).catch((err) => {\n                        alert(err)\n                    })\n                }).then(() => {\n                    this.getSales(2);\n                }).then(() => {\n                    this.getDealData(1)\n                })\n\n            },\n            chooseDealDate(type){\n                this.daily = type;\n                let num = (type == 'daily') ? 1: (type == 'week' ? 2 : 3);\n                this.getDealData(num)\n            },\n            getDealData(num) {\n                httpclient.post(\"/api/v1/index/averageparkinglotdata\", {timeType: num}).then((res) => {\n                    this.filterDealData(res.data.data);\n                }).catch((err) => {\n                    alert(err)\n                })\n            },\n            filterDealData(data) {\n                this.deaLoction.series = [];\n                this.deaLoction.xAxis.data = [];\n                this.deaLoction.legend.data = [];\n                let firstTime = getYMDFormart(data[0].averageDrivingTime2[data[0].averageDrivingTime2.length - 1].data);\n                let lastTime = getYMDFormart(data[0].averageDrivingTime2[0].data);\n                this.dailyDate = `${firstTime} - ${lastTime}`;\n                data.map((item, key) => {\n                    this.deaLoction.legend.data.push({\n                        name: item.parkingName,\n                        icon: \"roundRect\"\n                    });\n                    let seData = [];\n                    item.averageDrivingTime.reverse().map((it, k) => {\n                        seData.push(it.value);\n                        key == 0 ? this.deaLoction.xAxis.data.push(it.data) : null;\n                    });\n                    this.deaLoction.series.push({\n                        name: item.parkingName,\n                        type:'line',\n                        smooth: true,\n                        data: seData,\n                        color: `rgba(${this.color[key]})`,\n                        backgroundColor: \"#73818f\"\n                    })\n\n                });\n                echarts.init(document.getElementById(\"deaLocation\")).setOption(this.deaLoction);\n            },\n            filterSalesData(data) {\n                this.saleOption.xAxis.data = [];\n                this.saleOption.series[0].data = [];\n                this.saleOption.series[1].data = [];\n                let firstTime = getYMDFormart(data[data.length - 1].standardStartDate);\n                let lastTime = getYMDFormart(data[0].standardStartDate);\n                this.salePersonDate = `${firstTime} - ${lastTime}`;\n                for (let item of data.reverse()) {\n                    this.saleOption.xAxis.data.push(item.startDate);\n                    this.saleOption.series[0].data.push(item.averageDrivingTime);\n                    this.saleOption.series[1].data.push(item.averageDrivingNumber);\n                }\n                echarts.init(document.getElementById(\"sale\")).setOption(this.saleOption);\n            },\n            getSales(num) {\n                httpclient.post(\"/api/v1/index/averagesalesdata\", {timeType: num}).then((res) => {\n                    this.filterSalesData(res.data.data);\n                }).catch((err) => {\n                    alert(err)\n                })\n            },\n            chooseSaleDate(type) {\n                this.weekly = type;\n                let num = (type == 'month') ? 3 : 2;\n                this.getSales(num)\n            },\n            formatTime(val) {//格式化时间（06/17/2019 19:08）\n                let mon = (val.getMonth() + 1) > 9 ? (val.getMonth() + 1) : '0' + (val.getMonth() + 1);\n                let data = val.getDate() > 9 ? val.getDate() : '0' + val.getDate();\n                let hour = val.getHours() > 9 ? val.getHours() : '0' + val.getHours();\n                let minute = val.getMinutes() > 9 ? val.getMinutes() : '0' + val.getMinutes();\n                return mon + '/' + data + '/' + val.getFullYear() + '  ' + hour + ':' + minute\n            },\n            filterData(data, loglist) {\n                this.showLog = loglist.map(item => {\n                    return {\n                        user: item.firstName + \" \" + item.lastName,\n                        action: item.available == '1' ? 'has just checked in' : 'has just checked out',\n                        vehicle: `${item.year ? item.year : 'N/A'} ${item.make ? item.make : 'N/A'} ${item.model ? item.model : 'N/A'}`,\n                        time: getDateString(Number(item.createTime)),\n                        vehicleId: item.vehicleId,\n                        userId: item.checkUserId\n                    }\n                });\n                this.$store.dispatch(\"save_log_list\", this.showLog);\n\n                this.lastDate = this.formatTime(new Date());\n                let batHealth = [\"extremelyLowPower\", \"lowPower\", \"commonPower\"];\n                let inventory = [\"inLots\", \"offLots\"];\n\n                for (let item in this.card) {\n                    this.card[item][\"num\"] = data[item] ? data[item][\"num\"] : \"\";\n                    this.card[item][\"filters\"] = data[item] ? data[item][\"filters\"] : \"\";\n                    this.card[item][\"key\"] = data[item][\"filters\"] ? data[item][\"filters\"][0].key: \"\";\n                    this.card[item][\"value\"] = data[item][\"filters\"] ? data[item][\"filters\"][0].value[0]: \"\";\n                }\n\n                for (let i in batHealth){\n                    this.option1.series[0].data[i].value = data[batHealth[i]][\"num\"]\n                }\n                for (let i in inventory){\n                    this.option2.series[0].data[i].value = data[inventory[i]][\"num\"];\n                }\n                echarts.init(document.getElementById(\"battery-health\")).setOption(this.option1);\n                echarts.init(document.getElementById(\"inventory-location\")).setOption(this.option2);\n\n            }\n        }\n\n    }\n</script>"],"sourceRoot":"src/views/dashboard/dashboardMain"}]}