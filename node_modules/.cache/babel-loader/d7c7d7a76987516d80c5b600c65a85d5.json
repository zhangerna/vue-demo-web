{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js!/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/googleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/googleMap.vue","mtime":1559615944000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _getIterator from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport google from \"google\";\nexport default {\n  name: \"googleMap\",\n  props: [\"map\"],\n  data: function data() {\n    return {\n      mapInfo: null,\n      mapObj: null,\n      marker: null,\n      polygon: null,\n      markers: []\n    };\n  },\n  watch: {\n    map: function map(newVal) {\n      this.mapInfo = newVal;\n      this.initMap();\n    }\n  },\n  methods: {\n    addMarker: function addMarker(position, title, contentString) {\n      var infoWindow = new google.maps.InfoWindow({\n        content: contentString\n      });\n      var marker = new google.maps.Marker({\n        position: position,\n        map: this.mapObj,\n        animation: google.maps.Animation.DROP,\n        title: title\n      });\n      this.markers.push(marker);\n      marker.addListener('click', function () {\n        infoWindow.open(this.mapObj, marker);\n      });\n    },\n    initMap: function initMap() {\n      var _this = this;\n\n      var coords = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(this.mapInfo[\"area\"]), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          coords.push({\n            lat: Number(item.split(\",\")[1]),\n            lng: Number(item.split(\",\")[0])\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.mapObj = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 15,\n        center: {\n          lng: this.mapInfo.lng,\n          lat: this.mapInfo.lat\n        },\n        mapTypeId: google.maps.MapTypeId.SATELLITE\n      });\n\n      if (this.mapInfo.showMult) {\n        this.mapInfo.vehicleInfo.map(function (item) {\n          var position = {\n            lat: item.lastLocationLat,\n            lng: item.lastLocationLng\n          };\n          var title = \"\".concat(item.year, \" \").concat(item.make, \" \").concat(item.model);\n          var contentString = \"<a href='/vehicle-detail/\".concat(item.vehicleId, \"'>\\n                        <img src=\\\"\").concat(item.photoPath, \"\\\" width=\\\"40%\\\">\\n                        <h5 id=\\\"firstHeading\\\" class=\\\"firstHeading\\\">\").concat(item.year, \" \").concat(item.make, \" \").concat(item.model, \"</h5>\\n                        </a>\");\n\n          _this.addMarker(position, title, contentString);\n        });\n      } else {\n        this.marker = new google.maps.Marker({\n          position: {\n            lng: this.mapInfo.lng,\n            lat: this.mapInfo.lat\n          },\n          map: this.mapObj,\n          title: this.mapInfo.vehicleInfo\n        });\n      }\n\n      this.polygon = new google.maps.Polygon({\n        paths: coords,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35\n      });\n      this.polygon.setMap(this.mapObj);\n      new google.maps.drawing.DrawingManager({\n        drawingControl: true,\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [google.maps.drawing.OverlayType.POLYGON]\n        },\n        circleOptions: {\n          fillColor: '#ffff00',\n          fillOpacity: 1,\n          strokeWeight: 5,\n          clickable: false,\n          editable: true,\n          zIndex: 1\n        },\n        polygonOptions: {\n          strokeColor: \"#FF0000\",\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: \"#FF0000\",\n          fillOpacity: 0.35,\n          editable: true\n        }\n      });\n    }\n  }\n};",null]}