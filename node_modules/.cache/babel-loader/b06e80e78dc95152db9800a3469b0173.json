{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/gmapForAddress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/gmapForAddress.vue","mtime":1577090258000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\nimport google from \"google\";\nexport default {\n  name: \"googleMap\",\n  props: [\"address\"],\n  data: function data() {\n    return {\n      addres: \"\",\n      mapObj: null\n    };\n  },\n  watch: {\n    address: function address(newVal) {\n      this.initMap(newVal);\n    }\n  },\n  methods: {\n    initMap: function initMap(addres) {\n      var _this = this;\n\n      this.mapObj = new google.maps.Map(document.getElementById('map'), {\n        zoom: 15\n      });\n      this.geocoders = new google.maps.Geocoder();\n      this.geocoders.geocode({\n        'address': addres\n      }, function (results, status) {\n        if (status == \"OK\") {\n          _this.mapObj.setCenter(results[0].geometry.location);\n\n          new google.maps.Marker({\n            map: _this.mapObj,\n            position: results[0].geometry.location,\n            icon: \"https://cdn.shopify.com/s/files/1/0703/1149/files/60x60.png?854740\"\n          });\n        } else {\n          console.log('Geocode was not successful for the following reason: ' + status);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["gmapForAddress.vue"],"names":[],"mappings":";;;;;AAMA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA,CAAA,SAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,iBAAA,MAAA,EAAA;AACA,WAAA,OAAA,CAAA,MAAA;AACA;AAHA,GATA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,MADA,EACA;AAAA;;AACA,WAAA,MAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,QAAA,CAAA,cAAA,CAAA,KAAA,CAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA,CAAA;AAGA,WAAA,SAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,WAAA,SAAA,CAAA,OAAA,CAAA;AAAA,mBAAA;AAAA,OAAA,EAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,YAAA,MAAA,IAAA,IAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,QAAA;;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA;AACA,YAAA,GAAA,EAAA,KAAA,CAAA,MADA;AAEA,YAAA,QAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,QAFA;AAGA,YAAA,IAAA,EAAA;AAHA,WAAA;AAKA,SAPA,MAOA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,0DAAA,MAAA;AACA;AACA,OAXA;AAaA;AAnBA;AAdA,CAAA","sourcesContent":["<template>\n    <div id=\"map\">\n    </div>\n</template>\n\n<script>\n    import google from \"google\"\n    export default {\n        name: \"googleMap\",\n        props: [\"address\"],\n        data() {\n            return {\n                addres: \"\",\n                mapObj: null\n            }\n        },\n        watch: {\n            address: function (newVal) {\n                this.initMap(newVal)\n            }\n        },\n        methods: {\n            initMap(addres){\n                this.mapObj = new google.maps.Map(document.getElementById('map'), {\n                    zoom: 15\n                });\n                this.geocoders = new google.maps.Geocoder();\n                this.geocoders.geocode({'address': addres}, (results, status) => {\n                    if (status == \"OK\") {\n                        this.mapObj.setCenter(results[0].geometry.location);\n                        new google.maps.Marker({\n                            map: this.mapObj,\n                            position: results[0].geometry.location,\n                            icon: \"https://cdn.shopify.com/s/files/1/0703/1149/files/60x60.png?854740\"\n                        });\n                    } else {\n                        console.log('Geocode was not successful for the following reason: ' + status);\n                    }\n                });\n\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    #map {\n        height: 40vh;\n        .gm-style .gm-style-iw-d {\n            max-width: 280px!important;\n            img {\n                width: 100%;\n            }\n        }\n    }\n</style>\n"],"sourceRoot":"src/components"}]}