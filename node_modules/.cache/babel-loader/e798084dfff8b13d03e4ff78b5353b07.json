{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js!/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/register/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/register/index.vue","mtime":1561520910000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar city = null;\nimport httpClient from \"@/utils/httpclient\";\nimport model from \"@/components/model\";\n\nif (process.env.NODE_ENV == 'production') {\n  city = require(\"@/static/cityList.js\");\n} else {\n  city = require(\"@/static/cityListDev.js\");\n}\n\nexport default {\n  name: \"register\",\n  components: {\n    model: model\n  },\n  data: function data() {\n    return {\n      show: false,\n      btnGroup: {\n        btnFirst: \"Cancel\",\n        btnSecond: 'OK'\n      },\n      content: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmP: \"\",\n      phone: \"\",\n      dGroup: \"\",\n      dName: \"\",\n      country: \"United States\",\n      state: \"Alabama\",\n      city: \"Abanda\",\n      check: true,\n      cityList: city.cityList,\n      street: \"\",\n      apartment: \"\",\n      zipCode: \"\",\n      disable: true,\n      firstE: false,\n      lastE: false,\n      passwordE: false,\n      confirmpE: false,\n      status: true,\n      emailE: false,\n      phoneE: false,\n      dGroupE: false,\n      dNameE: false,\n      streetE: false,\n      apartE: false,\n      zipE: false\n    };\n  },\n  watch: {\n    state: function state() {\n      this.city = this.cityList[this.country][this.state][0];\n    },\n    firstName: function firstName(newV) {\n      this.firstName = newV;\n      this.checkInput();\n    },\n    lastName: function lastName(newV) {\n      this.lastName = newV;\n      this.checkInput();\n    }\n  },\n  methods: {\n    choiceRule: function choiceRule() {\n      this.check = !this.check;\n      this.checkInput();\n    },\n    checkInput: function checkInput() {\n      this.status = true;\n\n      if (!this.firstName || !this.lastName || !this.email || !this.password || !this.confirmP || !this.phone || !this.dGroup || !this.dName || !this.country || !this.state || !this.city || !this.check) {\n        this.disable = true;\n        this.status = false;\n      }\n\n      !this.firstName ? this.firstE = true : this.firstE = false;\n      !this.lastName ? this.lastE = true : this.lastE = false;\n      !this.email || this.email && this.email.indexOf(\"@\") < 0 ? this.emailE = true : this.emailE = false;\n      !this.phone || this.phone && this.phone.length > 15 ? this.phoneE = true : this.phoneE = false;\n      !this.dGroup ? this.dGroupE = true : this.dGroupE = false;\n      !this.dName ? this.dNameE = true : this.dNameE = false;\n      this.checkPassword();\n      this.checkConfirmPa();\n\n      if (this.status) {\n        this.disable = false;\n      }\n    },\n    checkPassword: function checkPassword() {\n      if (this.password && this.password.length < 6) {\n        this.passwordE = true;\n        this.status = false;\n      } else {\n        this.passwordE = false;\n      }\n    },\n    checkConfirmPa: function checkConfirmPa() {\n      if (this.confirmP && this.confirmP.length < 6 || this.password != this.confirmP) {\n        this.confirmpE = true;\n        this.status = false;\n      } else {\n        this.confirmpE = false;\n      }\n    },\n    submitData: function submitData() {\n      var _this = this;\n\n      this.checkInput();\n\n      if (this.status) {\n        httpClient.post('/api/v1/manager/reg', {\n          userEmail: this.email,\n          password: this.password,\n          firstName: this.firstName,\n          lastName: this.lastName,\n          phone: this.phone,\n          storeName: this.dName,\n          storeAddress: this.apartment,\n          tenantName: this.dGroup,\n          country: this.country,\n          state: this.state,\n          city: this.city,\n          streetAddress: this.street,\n          zipCode: this.zipCode\n        }).then(function (response) {\n          if (response.data.data && response.data.data == \"ok\" && response.data.code == 200) {\n            _this.$router.push(\"/register-success\");\n          } else {\n            _this.show = true;\n            _this.content = response.data.msg;\n          }\n        }).catch(function (error) {\n          window.location.reload();\n        });\n      }\n    }\n  }\n};",null]}