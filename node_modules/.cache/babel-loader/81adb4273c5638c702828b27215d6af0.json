{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/tripGMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/tripGMap.vue","mtime":1577962918000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _getIterator from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport google from \"google\";\nexport default {\n  name: \"googleMap\",\n  props: [\"map\"],\n  data: function data() {\n    return {\n      mapInfo: null,\n      mapObj: null,\n      marker: null,\n      polygon: null,\n      markers: []\n    };\n  },\n  watch: {\n    map: function map(newVal) {\n      // console.log(newVal);\n      this.mapInfo = newVal;\n      this.initMap();\n    }\n  },\n  methods: {\n    addMarker: function addMarker(position, title, contentString) {\n      var infoWindow = new google.maps.InfoWindow({\n        content: contentString\n      });\n      var marker = new google.maps.Marker({\n        position: position,\n        map: this.mapObj,\n        animation: google.maps.Animation.DROP,\n        title: title,\n        icon: \"https://cdn.shopify.com/s/files/1/0703/1149/files/Location.png?807016\"\n      });\n      this.markers.push(marker);\n      marker.addListener('click', function () {\n        infoWindow.open(this.mapObj, marker);\n      });\n    },\n    initMap: function initMap() {\n      var _this = this;\n\n      var coords = []; // console.log(this.mapInfo[\"area\"]);\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(this.mapInfo[\"area\"]), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          coords.push({\n            lat: Number(item.split(\",\")[1]),\n            lng: Number(item.split(\",\")[0])\n          });\n        } // console.log(this.mapInfo.lng);\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.mapObj = new google.maps.Map(document.getElementById('map'), {\n        zoom: 15,\n        center: {\n          lng: Number(this.mapInfo.lng),\n          lat: Number(this.mapInfo.lat)\n        }\n      });\n\n      if (this.mapInfo.showMult) {\n        this.mapInfo.vehicleInfo.map(function (item) {\n          var position = {\n            lat: item.lastLocationLat,\n            lng: item.lastLocationLng\n          };\n          var title = \"\".concat(item.year ? item.year : 'N/A', \" \").concat(item.make ? item.make : 'N/A', \" \").concat(item.model ? item.model : 'N/A');\n          var contentString = \"<a href='/vehicle/detail/\".concat(item.vehicleId, \"'>\\n                        <img style=\\\"background: #3a4149\\\" src=\\\"\").concat(item.photoPath ? item.photoPath : '/img/placeholder.5367544d.svg', \"\\\" width=\\\"40%\\\">\\n                        <h5 id=\\\"firstHeading\\\" class=\\\"firstHeading\\\">\").concat(item.year ? item.year : 'N/A', \" \").concat(item.make ? item.make : 'N/A', \" \").concat(item.model ? item.model : 'N/A', \"</h5>\\n                        </a>\");\n\n          _this.addMarker(position, title, contentString);\n        });\n      } else {\n        this.marker = new google.maps.Marker({\n          position: {\n            lng: Number(this.mapInfo.lng),\n            lat: Number(this.mapInfo.lat)\n          },\n          map: this.mapObj,\n          icon: {\n            url: \"https://cdn.shopify.com/s/files/1/0703/1149/files/Location.png?807016\",\n            scaledSize: new google.maps.Size(30, 30)\n          }\n        });\n      }\n\n      this.polygon = new google.maps.Polygon({\n        paths: coords,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35\n      });\n      this.polygon.setMap(this.mapObj);\n      new google.maps.drawing.DrawingManager({\n        drawingControl: true,\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [google.maps.drawing.OverlayType.POLYGON]\n        },\n        circleOptions: {\n          fillColor: '#ffff00',\n          fillOpacity: 1,\n          strokeWeight: 5,\n          clickable: false,\n          editable: true,\n          zIndex: 1\n        },\n        polygonOptions: {\n          strokeColor: \"#FF0000\",\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: \"#FF0000\",\n          fillOpacity: 0.35,\n          editable: true\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["tripGMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"map\"></div>\n</template>\n\n<style lang=\"scss\">\n    #map {\n        height: 70vh;\n        .gm-style .gm-style-iw-d {\n            max-width: 280px!important;\n            img {\n                width: 100%;\n            }\n        }\n    }\n</style>\n\n<script>\n    import google from \"google\"\n    export default {\n        name: \"googleMap\",\n        props: [\"map\"],\n        data() {\n            return {\n                mapInfo: null,\n                mapObj: null,\n                marker: null,\n                polygon: null,\n                markers: []\n\n            }\n        },\n        watch: {\n            map: function (newVal) {\n                // console.log(newVal);\n                this.mapInfo = newVal;\n                this.initMap()\n            }\n        },\n        methods: {\n            addMarker(position, title, contentString) {\n                let infoWindow = new google.maps.InfoWindow({\n                    content:contentString\n                });\n                var marker = new google.maps.Marker({\n                    position: position,\n                    map: this.mapObj,\n                    animation: google.maps.Animation.DROP,\n                    title: title,\n                    icon: \"https://cdn.shopify.com/s/files/1/0703/1149/files/Location.png?807016\",\n                });\n                this.markers.push(marker);\n                marker.addListener('click', function () {\n                    infoWindow.open(this.mapObj, marker);\n                })\n            },\n            initMap(){\n                let coords = [];\n                // console.log(this.mapInfo[\"area\"]);\n                for (let item of this.mapInfo[\"area\"]) {\n                    coords.push({lat: Number(item.split(\",\")[1]), lng: Number(item.split(\",\")[0]) })\n                }\n                // console.log(this.mapInfo.lng);\n                this.mapObj = new google.maps.Map(document.getElementById('map'), {\n                    zoom: 15,\n                    center: {lng: Number(this.mapInfo.lng), lat: Number(this.mapInfo.lat)},\n                });\n                if (this.mapInfo.showMult) {\n                    this.mapInfo.vehicleInfo.map(item => {\n                        let position = {lat: item.lastLocationLat, lng: item.lastLocationLng};\n                        let title = `${item.year? item.year :'N/A'} ${item.make? item.make :'N/A'} ${item.model? item.model:'N/A'}`;\n                        let contentString = `<a href='/vehicle/detail/${item.vehicleId}'>\n                            <img style=\"background: #3a4149\" src=\"${item.photoPath ? item.photoPath : '/img/placeholder.5367544d.svg'}\" width=\"40%\">\n                            <h5 id=\"firstHeading\" class=\"firstHeading\">${item.year ? item.year :'N/A'} ${item.make ? item.make :'N/A'} ${item.model ? item.model:'N/A'}</h5>\n                            </a>`;\n                        this.addMarker(position, title, contentString);\n                    })\n                } else {\n                    this.marker = new google.maps.Marker({\n                        position: {lng: Number(this.mapInfo.lng), lat: Number(this.mapInfo.lat)},\n                        map: this.mapObj,\n                        icon: {\n                            url: \"https://cdn.shopify.com/s/files/1/0703/1149/files/Location.png?807016\",\n                            scaledSize: new google.maps.Size(30, 30)\n                        }\n                    });\n                }\n                this.polygon = new google.maps.Polygon({\n                    paths: coords,\n                    strokeColor: '#FF0000',\n                    strokeOpacity: 0.8,\n                    strokeWeight: 2,\n                    fillColor: '#FF0000',\n                    fillOpacity: 0.35\n                });\n                this.polygon.setMap(this.mapObj);\n                new google.maps.drawing.DrawingManager({\n                    drawingControl: true,\n                    drawingControlOptions: {\n                        position: google.maps.ControlPosition.TOP_CENTER,\n                        drawingModes: [\n                            google.maps.drawing.OverlayType.POLYGON\n                        ]\n                    },\n\n                    circleOptions: {\n                        fillColor: '#ffff00',\n                        fillOpacity: 1,\n                        strokeWeight: 5,\n                        clickable: false,\n                        editable: true,\n                        zIndex: 1\n                    },\n\n                    polygonOptions: {\n                        strokeColor: \"#FF0000\",\n                        strokeOpacity: 0.8,\n                        strokeWeight: 2,\n                        fillColor: \"#FF0000\",\n                        fillOpacity: 0.35,\n                        editable: true,\n                    }\n                });\n\n\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"src/components"}]}