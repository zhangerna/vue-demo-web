{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/account.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/account.vue","mtime":1576648074000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { HeaderDropdown as AppHeaderDropdown } from '@coreui/vue';\nimport httpClient from '@/utils/httpclient';\nimport { filterLastFirstName } from '@/utils/db';\nexport default {\n  name: \"dropAccount\",\n  components: {\n    AppHeaderDropdown: AppHeaderDropdown\n  },\n  inject: ['reload'],\n  data: function data() {\n    return {\n      lang: null,\n      env: null\n    };\n  },\n  mounted: function mounted() {\n    this.env = process.env.VUE_APP_ENV;\n\n    if (this.$i18n.locale == 'en-US') {\n      this.lang = \"English\";\n    } else {\n      this.lang = '简体中文';\n    }\n  },\n  methods: {\n    filterLastFirstName: filterLastFirstName,\n    logOut: function logOut() {\n      httpClient.post('/api/v1/logout').then(function (response) {\n        if (response.data.code == 200) {\n          localStorage.removeItem('user_info');\n          window.location.href = '/login';\n        }\n      });\n    },\n    changeLang: function changeLang(type) {\n      if (type == 'en') {\n        this.lang = 'English';\n        this.$i18n.locale = \"en-US\";\n        localStorage.setItem('lang', \"en-US\");\n      } else {\n        this.lang = '简体中文';\n        this.$i18n.locale = \"zh-CN\";\n        localStorage.setItem('lang', \"zh-CN\");\n      }\n\n      this.reload();\n    }\n  }\n};",{"version":3,"sources":["account.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,SAAA,cAAA,IAAA,iBAAA,QAAA,aAAA;AACA,OAAA,UAAA,MAAA,oBAAA;AACA,SAAA,mBAAA,QAAA,YAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AADA,GAFA;AAKA,EAAA,MAAA,EAAA,CAAA,QAAA,CALA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,GAAA,EAAA;AAFA,KAAA;AAIA,GAXA;AAYA,EAAA,OAZA,qBAYA;AACA,SAAA,GAAA,GAAA,OAAA,CAAA,GAAA,CAAA,WAAA;;AACA,QAAA,KAAA,KAAA,CAAA,MAAA,IAAA,OAAA,EAAA;AACA,WAAA,IAAA,GAAA,SAAA;AACA,KAFA,MAEA;AACA,WAAA,IAAA,GAAA,MAAA;AACA;AACA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,mBAAA,EAAA,mBADA;AAEA,IAAA,MAFA,oBAEA;AACA,MAAA,UAAA,CAAA,IAAA,CAAA,gBAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,UAAA,YAAA,CAAA,UAAA,CAAA,WAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,QAAA;AACA;AACA,OALA;AAMA,KATA;AAUA,IAAA,UAVA,sBAUA,IAVA,EAUA;AACA,UAAA,IAAA,IAAA,IAAA,EAAA;AACA,aAAA,IAAA,GAAA,SAAA;AACA,aAAA,KAAA,CAAA,MAAA,GAAA,OAAA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,MAAA,EAAA,OAAA;AACA,OAJA,MAIA;AACA,aAAA,IAAA,GAAA,MAAA;AACA,aAAA,KAAA,CAAA,MAAA,GAAA,OAAA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,MAAA,EAAA,OAAA;AACA;;AACA,WAAA,MAAA;AACA;AArBA;AApBA,CAAA","sourcesContent":["<template>\n    <AppHeaderDropdown right no-caret class=\"saas-header\">\n        <template slot=\"header\">\n            <b-dropdown v-if=\"lang && env != 'cn'\" :text=\"lang\" class=\"m-2\" size=\"sm\"  id=\"change-lang\">\n                <b-dropdown-item @click=\"changeLang('en')\">\n                    <span>English</span>\n                </b-dropdown-item>\n                <b-dropdown-item @click=\"changeLang('zh')\">\n                    <span>简体中文</span>\n                </b-dropdown-item>\n            </b-dropdown>\n            <span>{{ filterLastFirstName($i18n.locale, $store.state.userInfo.firstName, $store.state.userInfo.lastName)  }}</span>\n            <img :src=\"$store.state.userInfo.avatarUrl\" class=\"img-avatar object-cover\">\n        </template>\n        <template slot=\"dropdown\">\n            <b-dropdown-header tag=\"div\" class=\"text-center\">\n                <strong>\n                    {{ $t('m.dashboard.account') }}\n                </strong>\n            </b-dropdown-header>\n            <b-dropdown-item @click=\"$router.push('/profile')\">\n                <i class=\"fa fa-user\"></i>\n                {{ $t('m.dashboard.profile') }}\n            </b-dropdown-item>\n            <b-dropdown-header class=\"text-center\">\n                {{ $t('m.dashboard.setting') }}\n            </b-dropdown-header>\n            <b-dropdown-item @click=\"logOut\">\n                <i class=\"fa fa-lock\"></i>\n                {{ $t('m.dashboard.logout') }}\n            </b-dropdown-item>\n        </template>\n    </AppHeaderDropdown>\n</template>\n\n<script>\n    import {HeaderDropdown as AppHeaderDropdown} from '@coreui/vue'\n    import httpClient from '@/utils/httpclient';\n    import { filterLastFirstName } from '@/utils/db';\n    export default {\n        name: \"dropAccount\",\n        components: {\n            AppHeaderDropdown\n        },\n        inject: ['reload'],\n        data() {\n            return {\n                lang: null,\n                env: null\n            }\n        },\n        mounted() {\n            this.env = process.env.VUE_APP_ENV;\n            if (this.$i18n.locale == 'en-US') {\n                this.lang = \"English\";\n            } else {\n                this.lang = '简体中文';\n            }\n        },\n        methods: {\n            filterLastFirstName,\n            logOut() {\n                httpClient.post('/api/v1/logout').then(response => {\n                    if (response.data.code == 200) {\n                        localStorage.removeItem('user_info');\n                        window.location.href = '/login'\n                    }\n                })\n            },\n            changeLang(type) {\n                if (type == 'en') {\n                    this.lang = 'English';\n                    this.$i18n.locale = \"en-US\";\n                    localStorage.setItem('lang', \"en-US\");\n                } else {\n                    this.lang = '简体中文';\n                    this.$i18n.locale = \"zh-CN\";\n                    localStorage.setItem('lang', \"zh-CN\");\n                }\n                this.reload();\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .img-avatar {\n        height: 35px;\n        width: 35px;\n        border-radius: 50%;\n    }\n    .saas-header {\n        padding: 4px 10px;\n        #change-lang__BV_toggle_ {\n            color: #73818f!important;\n            background-color: transparent!important;\n            border-color: #73818f;\n        }\n    }\n    .object-cover {\n        object-fit: contain;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}