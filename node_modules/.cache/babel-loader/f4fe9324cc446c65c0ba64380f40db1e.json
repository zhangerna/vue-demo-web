{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/socket.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/socket.vue","mtime":1576482964000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _Promise from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _toConsumableArray from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpClient from \"@/utils/httpclient\";\nimport { getDateString } from \"@/utils/date\";\nimport SockJs from 'sockjs-client';\nexport default {\n  name: \"socketWarn\",\n  data: function data() {\n    return {\n      topics: ['queue.saas.alertPushMsgTopic', 'queue.saas.checkInRecordTopic'],\n      topics3: '',\n      socketUrl: process.env.VUE_APP_SOCKET_URL,\n      maxConnect: 10,\n      connect: 0,\n      data: null,\n      alertData: [],\n      sockObj: null,\n      timeOut: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.GLOBAL.APP_ENV == 'cn' ? this.getTopic().then(function (data) {\n      _this.topics3 = data;\n      var topics = [].concat(_toConsumableArray(_this.topics), [data]);\n\n      _this.getToken(data, topics);\n    }) : this.getToken(this.topics);\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this.timeOut);\n    this.sockObj.close();\n  },\n  methods: {\n    getToken: function getToken(data, topics) {\n      var _this2 = this;\n\n      httpClient.post('/api/v1/socketToken', {\n        topics: topics\n      }).then(function (response) {\n        if (response.data.data && response.data.code == 200) {\n          _this2.topics.push(data);\n\n          _this2.$store.dispatch('save_socket_data', response.data.data);\n\n          _this2.initSocket(response.data.data);\n        }\n      });\n    },\n    getTopic: function getTopic() {\n      return new _Promise(function (resolve, reject) {\n        httpClient.get('/api/v1/clouddrive/notice/topic').then(function (response) {\n          if (response.data.data && response.data.code == 200) {\n            resolve(response.data.data);\n          } else {\n            reject();\n          }\n        });\n      });\n    },\n    hide: function hide(key) {\n      this.alertData.splice(key, 1);\n    },\n    alertMessage: function alertMessage(message) {\n      var _this3 = this;\n\n      var year = message.year ? message.year : 'N/A';\n      var make = message.make ? message.make : 'N/A';\n      var model = message.model ? message.model : 'N/A';\n      var vehicleInfo = !message.year && !message.make && !message.model ? 'N/A' : \"\".concat(year, \" \").concat(make, \" \").concat(model);\n      var stockNum = message.stockNum ? message.stockNum : 'N/A';\n      var voltage = message.pushTypeDesc;\n      this.alertData.push({\n        title: message.alertTypeName,\n        id: message.alertId,\n        desc: \"\".concat(stockNum, \" | \").concat(vehicleInfo, \" \").concat(message.alertDescription, \" \").concat(voltage ? voltage : '', \" now\")\n      });\n      setTimeout(function () {\n        _this3.hide(_this3.alertData.length - 1);\n      }, 5000);\n    },\n    filterMessage: function filterMessage(data) {\n      var tempData = [{\n        user: data.firstName + \" \" + data.lastName,\n        action: data.available == '1' ? this.$t('m.index.has_just') + this.$t('m.index.check_in') : this.$t('m.index.has_just') + this.$t('m.index.check_out'),\n        vehicle: \"\".concat(data.year ? data.year : 'N/A', \" \").concat(data.make ? data.make : 'N/A', \" \").concat(data.model ? data.model : 'N/A'),\n        time: getDateString(Number(data.createTime)),\n        vehicleId: data.vehicleId,\n        userId: data.checkUserId\n      }];\n      this.$store.dispatch('save_log_list', tempData);\n    },\n    initSocket: function initSocket(respData) {\n      var self = this;\n      this.sockObj = new SockJs(this.socketUrl + '/echo/?token=' + encodeURIComponent(respData.token));\n\n      this.sockObj.onopen = function () {\n        self.connect += 1;\n      };\n\n      this.sockObj.onmessage = function (e) {\n        var message = JSON.parse(e.data);\n\n        switch (message.topic) {\n          case self.topics[0] + respData.storeId + respData.tenantId:\n            self.alertMessage(JSON.parse(message.message));\n            break;\n\n          case self.topics[1] + respData.storeId + respData.tenantId:\n            self.filterMessage(JSON.parse(message.message));\n\n          case self.topics[2]:\n            self.$store.dispatch('update_number', message.message);\n\n          default:\n            break;\n        }\n      };\n\n      this.sockObj.onclose = function () {\n        if (self.connect < self.maxConnect) {\n          self.timeOut = setTimeout(function () {\n            self.initSocket(self.$store.getters.socketData);\n          }, self.connect * 20000);\n        }\n      };\n    }\n  }\n};",{"version":3,"sources":["socket.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"toast-container\" class=\"toast-top-right\" v-show=\"alertData.length > 0\">\n        <div class=\"toast toast-error\" aria-live=\"polite\" v-for=\"(item, key) in alertData\" :key=\"key\">\n            <span class=\"fa fa-warning\"></span>\n            <h4 class=\"toast-title\">{{item.title}}</h4>\n            <div class=\"toast-message\" @click=\"$router.push('/inventory/alerts/detail/' + item.id)\">{{item.desc}}</div>\n            <i class=\"fa fa-close\" @click=\"hide(key)\"></i>\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    #toast-container {\n        position: fixed;\n        z-index: 999999;\n        right: 24px;\n        top: 10px;\n        .toast-error {\n            background-color: #bd362f;\n        }\n        .toast {\n            span {\n                font-size: 24px;\n                position: absolute;\n                left: 4%;\n                top: 34%;\n            }\n            i {\n                position: absolute;\n                right: 5%;\n                top: 35%;\n                font-size: 15px;\n                color: darkslategrey;\n            }\n            position: relative;\n            pointer-events: auto;\n            overflow: hidden;\n            margin: 0 0 6px;\n            padding: 15px 15px 15px 50px;\n            width: 300px;\n            -moz-border-radius: 3px;\n            -webkit-border-radius: 3px;\n            border-radius: 3px;\n            background-position: 15px center;\n            background-repeat: no-repeat;\n            -moz-box-shadow: 0 0 12px #999;\n            -webkit-box-shadow: 0 0 12px #999;\n            box-shadow: 0 0 12px #999;\n            color: #fff;\n            opacity: .8;\n            -ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=80);\n            filter: alpha(opacity=80);\n        }\n        .toast-title {\n            font-weight: bold;\n        }\n        .toast-message {\n            word-wrap: break-word;\n            cursor: pointer;\n        }\n    }\n    #toast-container * {\n        box-sizing: border-box;\n    }\n</style>\n\n<script>\n    import httpClient from \"@/utils/httpclient\";\n    import { getDateString } from \"@/utils/date\";\n    import SockJs from 'sockjs-client';\n    export default {\n        name: \"socketWarn\",\n        data() {\n            return {\n                topics: [\n                    'queue.saas.alertPushMsgTopic',\n                    'queue.saas.checkInRecordTopic'\n                ],\n                topics3: '',\n                socketUrl: process.env.VUE_APP_SOCKET_URL,\n                maxConnect: 10,\n                connect: 0,\n                data: null,\n                alertData: [],\n                sockObj: null,\n                timeOut: null\n            }\n        },\n        mounted() {\n            this.GLOBAL.APP_ENV == 'cn' ?\n                this.getTopic().then((data) => {\n                    this.topics3 = data;\n                    let topics = [...this.topics, data];\n                    this.getToken(data, topics);\n                }) : this.getToken(this.topics);\n        },\n        beforeDestroy: function(){\n            clearTimeout(this.timeOut);\n            this.sockObj.close();\n        },\n        methods:{\n            getToken(data, topics) {\n                httpClient.post('/api/v1/socketToken', {\n                    topics: topics\n                }).then(response => {\n                    if (response.data.data && response.data.code == 200) {\n                        this.topics.push(data);\n                        this.$store.dispatch('save_socket_data', response.data.data);\n                        this.initSocket(response.data.data);\n                    }\n                });\n            },\n            getTopic() {\n                return new Promise((resolve, reject) => {\n                    httpClient.get('/api/v1/clouddrive/notice/topic').then(response => {\n                        if (response.data.data && response.data.code == 200) {\n                            resolve(response.data.data);\n                        } else {\n                            reject();\n                        }\n                    })\n                });\n\n            },\n            hide(key) {\n                this.alertData.splice(key, 1);\n            },\n            alertMessage(message) {\n                let year = message.year ? message.year : 'N/A';\n                let make = message.make ? message.make : 'N/A';\n                let model = message.model ? message.model : 'N/A';\n                let vehicleInfo = (!message.year && !message.make && !message.model) ? 'N/A' : `${year} ${make} ${model}`;\n                let stockNum = message.stockNum ? message.stockNum : 'N/A';\n                let voltage = message.pushTypeDesc;\n                this.alertData.push({\n                    title: message.alertTypeName,\n                    id: message.alertId,\n                    desc: `${stockNum} | ${vehicleInfo} ${message.alertDescription} ${voltage ? voltage : ''} now`\n                });\n                setTimeout(() => {\n                    this.hide(this.alertData.length - 1);\n                }, 5000);\n            },\n            filterMessage(data) {\n                let tempData = [{\n                    user: data.firstName + \" \" + data.lastName,\n                    action: data.available == '1' ? this.$t('m.index.has_just') + this.$t('m.index.check_in') : this.$t('m.index.has_just') + this.$t('m.index.check_out'),\n                    vehicle: `${data.year ? data.year : 'N/A'} ${data.make ? data.make : 'N/A'} ${data.model ? data.model : 'N/A'}`,\n                    time: getDateString(Number(data.createTime)),\n                    vehicleId: data.vehicleId,\n                    userId: data.checkUserId\n                }];\n                this.$store.dispatch('save_log_list', tempData);\n            },\n            initSocket(respData) {\n                let self = this;\n                this.sockObj = new SockJs(this.socketUrl + '/echo/?token=' + encodeURIComponent(respData.token));\n                this.sockObj.onopen = function () {\n                    self.connect += 1;\n                };\n                this.sockObj.onmessage = function (e) {\n                    let message = JSON.parse(e.data);\n                    switch (message.topic) {\n                        case self.topics[0] + respData.storeId + respData.tenantId:\n                            self.alertMessage(JSON.parse(message.message));\n                            break;\n                        case self.topics[1] + respData.storeId + respData.tenantId:\n                            self.filterMessage(JSON.parse(message.message));\n                        case self.topics[2]:\n                            self.$store.dispatch('update_number', message.message);\n                        default:\n                            break;\n                    }\n                };\n                this.sockObj.onclose = function () {\n                    if (self.connect < self.maxConnect) {\n                        self.timeOut = setTimeout(() => {\n                            self.initSocket(self.$store.getters.socketData)\n                        }, self.connect * 20000);\n                    }\n                }\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"src/components"}]}