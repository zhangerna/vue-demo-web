{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/src/utils/coordtransform.js","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/utils/coordtransform.js","mtime":1577962918000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nvar PI = 3.1415926535897932384626;\nvar ee = 0.00669342162296594323;\nvar a = 6378245.0;\n\nvar transformlat = function transformlat(lng, lat) {\n  lat = +lat;\n  lng = +lng;\n  var ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng));\n  ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n  ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;\n  ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;\n  return ret;\n};\n\nvar out_of_china = function out_of_china(lng, lat) {\n  lat = +lat;\n  lng = +lng; // 纬度3.86~53.55,经度73.66~135.05\n\n  return !(lng > 73.66 && lng < 135.05 && lat > 3.86 && lat < 53.55);\n};\n\nvar transformlng = function transformlng(lng, lat) {\n  lat = +lat;\n  lng = +lng;\n  var ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));\n  ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n  ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;\n  ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;\n  return ret;\n}; // 地球坐标转全球坐标\n\n\nexport function wgs84ToGcjo2(lng, lat) {\n  lat = +lat;\n  lng = +lng;\n\n  if (out_of_china(lng, lat)) {\n    return [lng, lat];\n  } else {\n    var dlat = transformlat(lng - 105.0, lat - 35.0);\n    var dlng = transformlng(lng - 105.0, lat - 35.0);\n    var radlat = lat / 180.0 * PI;\n    var magic = Math.sin(radlat);\n    magic = 1 - ee * magic * magic;\n    var sqrtmagic = Math.sqrt(magic);\n    dlat = dlat * 180.0 / (a * (1 - ee) / (magic * sqrtmagic) * PI);\n    dlng = dlng * 180.0 / (a / sqrtmagic * Math.cos(radlat) * PI);\n    var mglat = lat + dlat;\n    var mglng = lng + dlng;\n    return [mglng, mglat];\n  }\n} // 火星坐标转地球坐标\n\nexport function gcj02towgs84(lng, lat) {\n  lat = +lat;\n  lng = +lng;\n\n  if (out_of_china(lng, lat)) {\n    return {};\n  } else {\n    var dlat = transformlat(lng - 105.0, lat - 35.0);\n    var dlng = transformlng(lng - 105.0, lat - 35.0);\n    var radlat = lat / 180.0 * PI;\n    var magic = Math.sin(radlat);\n    magic = 1 - ee * magic * magic;\n    var sqrtmagic = Math.sqrt(magic);\n    dlat = dlat * 180.0 / (a * (1 - ee) / (magic * sqrtmagic) * PI);\n    dlng = dlng * 180.0 / (a / sqrtmagic * Math.cos(radlat) * PI);\n    var mglat = lat + dlat;\n    var mglng = lng + dlng;\n    return {\n      \"lng\": lng * 2 - mglng,\n      \"lat\": lat * 2 - mglat\n    };\n  }\n} // 计算多点中心坐标点\n\nexport function calCenter(lnglatarr) {\n  var total = lnglatarr.length;\n  var X = 0,\n      Y = 0,\n      Z = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _getIterator(lnglatarr), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var lnglat = _step.value;\n      var lng = lnglat.lng * Math.PI / 180;\n      var lat = lnglat.lat * Math.PI / 180;\n      var x, y, z;\n      x = Math.cos(lat) * Math.cos(lng);\n      y = Math.cos(lat) * Math.sin(lng);\n      z = Math.sin(lat);\n      X += x;\n      Y += y;\n      Z += z;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  X = X / total;\n  Y = Y / total;\n  Z = Z / total;\n  var Lng = Math.atan2(Y, X);\n  var Hyp = Math.sqrt(X * X + Y * Y);\n  var Lat = Math.atan2(Z, Hyp);\n  return [Lng, Lat];\n}",{"version":3,"sources":["/Users/nonda/nonda/nonda-saas-web/src/utils/coordtransform.js"],"names":["PI","ee","a","transformlat","lng","lat","ret","Math","sqrt","abs","sin","out_of_china","transformlng","wgs84ToGcjo2","dlat","dlng","radlat","magic","sqrtmagic","cos","mglat","mglng","gcj02towgs84","calCenter","lnglatarr","total","length","X","Y","Z","lnglat","x","y","z","Lng","atan2","Hyp","Lat"],"mappings":"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","sourcesContent":["const PI = 3.1415926535897932384626;\nconst ee = 0.00669342162296594323;\nconst a = 6378245.0;\n\nlet transformlat = (lng, lat) => {\n    lat = +lat;\n    lng = +lng;\n    var ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;\n    return ret\n};\n\nlet out_of_china = (lng, lat) => {\n    lat = +lat;\n    lng = +lng;\n    // 纬度3.86~53.55,经度73.66~135.05\n    return !(lng > 73.66 && lng < 135.05 && lat > 3.86 && lat < 53.55);\n};\n\nlet transformlng = (lng, lat) => {\n    lat = +lat;\n    lng = +lng;\n    var ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;\n    return ret\n};\n\n// 地球坐标转全球坐标\nexport function wgs84ToGcjo2(lng, lat) {\n    lat = +lat;\n    lng = +lng;\n    if (out_of_china(lng, lat)) {\n        return [lng, lat]\n    } else {\n        var dlat = transformlat(lng - 105.0, lat - 35.0);\n        var dlng = transformlng(lng - 105.0, lat - 35.0);\n        var radlat = lat / 180.0 * PI;\n        var magic = Math.sin(radlat);\n        magic = 1 - ee * magic * magic;\n        var sqrtmagic = Math.sqrt(magic);\n        dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n        dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n        var mglat = lat + dlat;\n        var mglng = lng + dlng;\n        return [mglng, mglat]\n    }\n}\n\n// 火星坐标转地球坐标\nexport function gcj02towgs84(lng, lat) {\n    lat = +lat;\n    lng = +lng;\n    if (out_of_china(lng, lat)) {\n        return {}\n    } else {\n        var dlat = transformlat(lng - 105.0, lat - 35.0);\n        var dlng = transformlng(lng - 105.0, lat - 35.0);\n        var radlat = lat / 180.0 * PI;\n        var magic = Math.sin(radlat);\n        magic = 1 - ee * magic * magic;\n        var sqrtmagic = Math.sqrt(magic);\n        dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n        dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n        var mglat = lat + dlat;\n        var mglng = lng + dlng;\n        return {\"lng\" : lng * 2 - mglng, \"lat\":lat * 2 - mglat}\n    }\n}\n\n// 计算多点中心坐标点\n\nexport function calCenter(lnglatarr) {\n    var total = lnglatarr.length;\n    var X=0,Y=0,Z=0;\n    for (const lnglat of lnglatarr) {\n        var lng = lnglat.lng * Math.PI / 180;\n        var lat = lnglat.lat * Math.PI / 180;\n        var x,y,z;\n        x = Math.cos(lat) * Math.cos(lng);\n        y = Math.cos(lat) * Math.sin(lng);\n        z = Math.sin(lat);\n        X += x;\n        Y += y;\n        Z += z;\n    }\n    X = X/total;\n    Y = Y/total;\n    Z = Z/total;\n\n    var Lng = Math.atan2(Y,X);\n    var Hyp = Math.sqrt(X*X + Y*Y);\n    var Lat = Math.atan2(Z,Hyp);\n    return [Lng, Lat]\n}\n\n"]}]}