{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/inventory/shopEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/inventory/shopEdit.vue","mtime":1576494995000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"/Users/nonda/nonda/nonda-saas-web/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpClient from \"@/utils/httpclient\";\nimport model from \"@/components/model\";\nexport default {\n  name: \"addShop\",\n  components: {\n    model: model\n  },\n  data: function data() {\n    return {\n      btnGroup: {\n        btnFirst: this.$t(\"m.tip.b_cancel\"),\n        btnSecond: this.$t(\"m.tip.confirm\")\n      },\n      showTip: false,\n      saveStatus: false,\n      title: \"\",\n      info: \"\",\n      name: \"\",\n      list: [],\n      country: \"\",\n      state: \"\",\n      city: \"\",\n      area: \"\",\n      getCountry: \"\",\n      getState: \"\",\n      getCity: \"\",\n      getArea: \"\",\n      street: \"\",\n      areaE: false,\n      cityE: false,\n      stateE: false,\n      countryE: false,\n      apartment: \"\",\n      zipCode: \"\",\n      zipE: false,\n      apartE: false,\n      streetE: false,\n      nameE: false,\n      hasSubmit: false,\n      managerE: false,\n      managerList: []\n    };\n  },\n  mounted: function mounted() {\n    if (this.$route.params.id) {\n      this.getCityList();\n    }\n  },\n  methods: {\n    getCityList: function getCityList() {\n      var _this = this;\n\n      httpClient.get(\"/api/v1/store/detail?storeId=\" + this.$route.params.id, {}).then(function (res) {\n        if (res.data.code == 200) {\n          _this.getCountry = res.data.data.country; // console.log(res.data.data.country)\n          // this.country = res.data.data.country\n\n          _this.getState = res.data.data.state;\n          _this.getCity = res.data.data.city;\n          _this.getArea = res.data.data.area || \"N/A\";\n          httpClient.get(\"/api/v1/getprovicescitynew\").then(function (resp) {\n            if (resp.data.code == 200) {\n              _this.list = resp.data.data.countryList;\n\n              _this.list.splice(1);\n\n              _this.filterCountry(res.data.data.countryEn, res.data.data.stateEn, res.data.data.cityEn);\n\n              _this.list.map(function (item, index) {\n                if (item.countryName == _this.getCountry) {\n                  _this.country = index + 1;\n                  item.proviceList.map(function (item, index) {\n                    if (item.proviceName == _this.getState) {\n                      _this.state = index + 1;\n                      item.cityList.map(function (item, index) {\n                        if (item.cityName == _this.getCity) {\n                          _this.city = index + 1;\n                          item.areaDTOList.map(function (item, index) {\n                            if (item.areaName == _this.getArea) {\n                              _this.area = index + 1;\n                            }\n                          });\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          });\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _getIterator(res.data.data.userList), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var item = _step.value;\n\n              _this.managerList.push({\n                email: item.userEmail,\n                phone: item.userPhone,\n                lastName: item.lastName,\n                firstName: item.firstName,\n                ori: true\n              });\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this.managerList.length == 0 ? _this.managerList.push({\n            email: \"\",\n            phone: \"\",\n            lastName: \"\",\n            firstName: \"\"\n          }) : \"\";\n          _this.name = res.data.data.storeName;\n          _this.street = res.data.data.streetAddress;\n          _this.apartment = res.data.data.storeAddress;\n          _this.zipCode = res.data.data.zipCode;\n        }\n      });\n    },\n    reduceAdmin: function reduceAdmin(index) {\n      this.managerList.splice(index, 1);\n    },\n    filterCountry: function filterCountry(country, state, city) {\n      for (var i = 0; i < this.list.length; i++) {\n        if (this.list[i].countryName == country) {\n          this.country = i + 1;\n        }\n      }\n\n      if (this.country) {\n        for (var _i = 0; _i < this.list[this.country - 1].proviceList.length; _i++) {\n          if (this.list[this.country - 1].proviceList[_i].proviceName == state) {\n            this.state = _i + 1;\n          }\n        }\n      }\n\n      if (this.country && this.state) {\n        for (var k = 0; k < this.list[this.country - 1].proviceList[this.state - 1].cityList.length; k++) {\n          if (this.list[this.country - 1].proviceList[this.state - 1].cityList[k].cityName == city) {\n            this.city = k + 1;\n          }\n        }\n      }\n    },\n    addAdmin: function addAdmin() {\n      this.managerList.push({\n        email: \"\",\n        phone: \"\",\n        lastName: \"\",\n        firstName: \"\"\n      });\n    },\n    checkData: function checkData() {\n      this.hasSubmit = true;\n      this.nameE = this.name ? false : true;\n      this.zipE = this.zipCode ? false : true;\n      this.streetE = this.street ? false : true;\n      this.apartE = this.apartment ? false : true;\n      this.countryE = this.country ? false : true;\n      this.stateE = this.state ? false : true;\n      this.cityE = this.city ? false : true;\n      this.areaE = this.area ? false : true;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(this.managerList), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (!item.email || item.email.indexOf(\"@\") < 0 || !item.phone || !item.lastName || !item.firstName) {\n            this.managerE = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    updateData: function updateData() {\n      var _this2 = this;\n\n      this.checkData();\n\n      if (!this.nameE && !this.zipE && !this.streetE && !this.apartE && !this.managerE && !this.countryE && !this.stateE && !this.cityE && !this.areaE) {\n        httpClient.post(\"/api/v1/store/update\", {\n          insertSaasTenantStoreDTO: {\n            id: this.$route.params.id,\n            areaCode: this.list[this.country - 1][\"proviceList\"][this.state - 1][\"cityList\"][this.city - 1][\"areaDTOList\"][this.area - 1].areaId,\n            cityCode: this.list[this.country - 1][\"proviceList\"][this.state - 1][\"cityList\"][this.city - 1].cityId,\n            countryCode: this.list[this.country - 1].countryId,\n            stateCode: this.list[this.country - 1][\"proviceList\"][this.state - 1].provicesId,\n            storeAddress: this.apartment,\n            storeName: this.name,\n            streetAddress: this.street,\n            zipCode: this.zipCode\n          },\n          inviteUserParamDTO: this.managerList\n        }).then(function (res) {\n          //弹窗\n          if (res.data.code === 200 && res.data.data.result) {\n            _this2.saveStatus = true;\n          }\n        });\n      } else {\n        alert(\"请检查输入数据\");\n      }\n    },\n    saveAndLink: function saveAndLink() {\n      this.$router.push(\"/inventory/shop-manager/list\");\n    }\n  }\n};",{"version":3,"sources":["shopEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"animated fadeIn add-shop\">\n        <b-card>\n            <div slot=\"header\">\n                {{ $t(\"m.shop.edit_shop\") }}\n            </div>\n            <div class=\"container\">\n                <div class=\"content\">\n                    <b-row>\n                        <b-col sm=\"12\" md=\"12\">\n                            <div class=\"warn-info text-left\">\n                                <p>{{ $t(\"m.tip.note\") }}: 1.{{ $t(\"m.edit_shop.p1\") }}</p>\n                                <p class=\"content-p\">2.{{ $t(\"m.edit_shop.p2\") }}</p>\n                                <p class=\"content-p\">3.{{ $t(\"m.edit_shop.p3\") }}</p>\n                            </div>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" md=\"12\">\n                            <b-form-group>\n                                <label>\n                                    <strong class=\"text-muted\">{{ $t(\"m.shop.shop_name\") }}</strong>\n                                </label>\n                                <b-form-input type=\"text\" :class=\"nameE ? 'is-invalid' : ''\"\n                                              v-model=\"name\"></b-form-input>\n                            </b-form-group>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" md=\"12\">\n                            <b-form-group>\n                                <b-row>\n                                    <b-col sm=\"3\">\n                                        <label>\n                                            <strong class=\"text-muted\">{{ $t(\"m.add_shop.country\") }}</strong>\n                                        </label>\n                                        <select class=\" form-control\" v-model=\"country\"\n                                                :class=\"countryE ? 'is-invalid' : ''\">\n                                            <option value=\"\" disabled selected>{{ $t('m.add_shop.please_select') }}\n                                            </option>\n                                            <option v-for=\"(item, key) in list\" :key=\"key\" :value=\"key + 1\">{{\n                                                $i18n.locale == \"en-US\" ? item.countryName : item.countryCName }}\n                                            </option>\n                                        </select>\n                                    </b-col>\n                                    <b-col sm=\"3\">\n                                        <label>\n                                            <strong class=\"text-muted\">{{ $t(\"m.add_shop.state\") }}</strong>\n                                        </label>\n                                        <select class=\"form-control\" v-model=\"state\"\n                                                :class=\"stateE ? 'is-invalid' : ''\">\n                                            <option value=\"\" disabled selected>{{ $t('m.add_shop.please_select') }}\n                                            </option>\n                                            <option v-for=\"(item, key) in country ? list[country - 1]['proviceList'] : []\"\n                                                    :value=\"key + 1\" :key=\"key\">{{ $i18n.locale == \"en-US\" ?\n                                                item.proviceName : item.proviceCName }}\n                                            </option>\n                                        </select>\n                                    </b-col>\n                                    <b-col sm=\"3\">\n                                        <label>\n                                            <strong class=\"text-muted\">{{ $t(\"m.add_shop.city\") }}</strong>\n                                        </label>\n                                        <select class=\"form-control\" v-model=\"city\" :class=\"cityE ? 'is-invalid' : ''\">\n                                            <option value=\"\" disabled selected>{{ $t('m.add_shop.please_select') }}</option>\n                                            <option v-for=\"(item, key) in country && state ? list[country - 1]['proviceList'][state - 1]['cityList'] : []\"\n                                                    :value=\"key + 1\" :key=\"key\">{{ $i18n.locale == \"en-US\" ?\n                                                item.cityName : item.cityCName }}\n                                            </option>\n                                        </select>\n                                    </b-col>\n                                    <b-col sm=\"3\" v-if=\"GLOBAL.APP_ENV == 'cn'\">\n                                        <label>\n                                            <strong class=\"text-muted\">{{ $t(\"m.add_shop.area\") }}</strong>\n                                        </label>\n                                        <select class=\"form-control\" v-model=\"area\" :class=\"areaE ? 'is-invalid' : ''\">\n                                            <option value=\"\" disabled selected>{{ $t('m.add_shop.please_select') }}</option>\n                                            <option v-for=\"(item, key) in country && state && city ? list[country - 1]['proviceList'][state - 1]['cityList'][city - 1]['areaDTOList'] : []\"\n                                                    :value=\"key + 1\" :key=\"key\">{{ $i18n.locale == \"en-US\" ?\n                                                item.areaName : item.areaCName }}\n                                            </option>\n                                        </select>\n                                    </b-col>\n                                </b-row>\n                            </b-form-group>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" md=\"12\">\n                            <label>\n                                <strong class=\"text-muted\">{{ $t(\"m.add_shop.label_address\") }}</strong>\n                            </label>\n                            <b-form-group>\n                                <b-form-input type=\"text\" :class=\"streetE ? 'is-invalid' : ''\" v-model=\"street\"\n                                              placeholder=\"Street and number, P.O. box, c/o.\"></b-form-input>\n                            </b-form-group>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" md=\"12\">\n                            <b-form-group>\n                                <b-form-input type=\"text\" :class=\"apartE ? 'is-invalid' : ''\" v-model=\"apartment\"\n                                              placeholder=\"Apartment, suite, unit, building, floor, etc.\"></b-form-input>\n                            </b-form-group>\n                        </b-col>\n                    </b-row>\n                    <b-row>\n                        <b-col sm=\"12\" md=\"12\">\n                            <b-form-group>\n                                <b-form-input type=\"text\" :class=\"zipE ? 'is-invalid' : ''\" v-model=\"zipCode\"\n                                              placeholder=\"Zip Code\"></b-form-input>\n                            </b-form-group>\n                        </b-col>\n                    </b-row>\n                    <div class=\"admin-info\">\n                        <b-row v-for=\"(item, index) in managerList\" :key=\"index\">\n                            <b-col sm=\"4\" md=\"4\">\n                                <b-form-group>\n                                    <div>\n                                        <strong class=\"text-muted\">{{ $t(\"m.add_shop.manager\") + (index + 1) }}</strong>\n                                    </div>\n                                    <label>\n                                        <strong class=\"text-muted\">{{ $t(\"m.add_shop.manager_email\") }}</strong>\n                                    </label>\n                                    <b-form-input type=\"email\" :disabled=\"item.ori ? true : false\"\n                                                  :class=\"hasSubmit && (!managerList[index]['email'] || managerList[index]['email'].indexOf('@') < 0) ? 'is-invalid' : ''\"\n                                                  v-model=\"managerList[index]['email']\"></b-form-input>\n                                </b-form-group>\n                            </b-col>\n                            <b-col sm=\"4\" md=\"4\">\n                                <b-form-group>\n                                    <div><strong class=\"text-muted\">&nbsp;</strong></div>\n                                    <label\n                                    ><strong class=\"text-muted\">{{ $t(\"m.add_shop.manager_phone\") }}</strong></label\n                                    >\n                                    <b-form-input type=\"number\" :disabled=\"item.ori ? true : false\"\n                                                  :class=\"hasSubmit && !managerList[index]['phone'] ? 'is-invalid' : ''\"\n                                                  v-model=\"managerList[index]['phone']\"></b-form-input>\n                                </b-form-group>\n                            </b-col>\n                            <b-col sm=\"2\" md=\"2\">\n                                <b-form-group>\n                                    <div><strong class=\"text-muted\">&nbsp;</strong></div>\n                                    <label>\n                                        <strong class=\"text-muted\">{{ $t(\"m.common.first_name\") }}</strong>\n                                    </label>\n                                    <b-form-input type=\"text\" :disabled=\"item.ori ? true : false\"\n                                                  :class=\"hasSubmit && !managerList[index]['firstName'] ? 'is-invalid' : ''\"\n                                                  v-model=\"managerList[index]['firstName']\"></b-form-input>\n                                </b-form-group>\n                            </b-col>\n                            <b-col sm=\"2\" md=\"2\">\n                                <b-form-group>\n                                    <div><strong class=\"text-muted\">&nbsp;</strong></div>\n                                    <label><strong class=\"text-muted\">{{ $t(\"m.common.last_name\") }}</strong></label>\n                                    <b-form-input type=\"text\" :disabled=\"item.ori ? true : false\"\n                                                  :class=\"hasSubmit && !managerList[index]['lastName'] ? 'is-invalid' : ''\"\n                                                  v-model=\"managerList[index]['lastName']\"></b-form-input>\n                                </b-form-group>\n                                <div class=\"add\">\n                                    <i style=\"font-size: 20px;margin-right: 10px;\" @click=\"addAdmin\"\n                                       class=\"fa fa-plus-square\"></i>\n                                    <i style=\"font-size: 20px;color:red\" v-if=\"index != 0\" @click=\"reduceAdmin(index)\"\n                                       class=\"fa fa-minus-square\"></i>\n                                </div>\n                            </b-col>\n                        </b-row>\n                    </div>\n                    <div class=\"text-center\">\n                        <button class=\"btn btn-sm btn-primary\" @click=\"updateData()\">\n                            {{ $t(\"m.common.b_save\") }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </b-card>\n        <model :show=\"showTip\" :title=\"title\" :content=\"info\" :buttonText=\"btnGroup\"></model>\n\n        <b-modal ref=\"my-modal-6\" v-model=\"saveStatus\" :ok-title=\"$t('m.tip.confirm')\" @ok=\"saveAndLink()\"\n                 class=\"select-store\" ok-only>\n            <template slot=\"modal-title\">\n                {{ $t(\"m.tip.suc\") }}\n            </template>\n            <div class=\"text-left\">\n                {{ $t(\"m.tip.edit_succ\") }}\n            </div>\n        </b-modal>\n    </div>\n</template>\n\n<script>\n    import httpClient from \"@/utils/httpclient\";\n    import model from \"@/components/model\";\n\n    export default {\n        name: \"addShop\",\n        components: {\n            model\n        },\n        data() {\n            return {\n                btnGroup: {\n                    btnFirst: this.$t(\"m.tip.b_cancel\"),\n                    btnSecond: this.$t(\"m.tip.confirm\")\n                },\n                showTip: false,\n                saveStatus: false,\n                title: \"\",\n                info: \"\",\n                name: \"\",\n                list: [],\n                country: \"\",\n                state: \"\",\n                city: \"\",\n                area: \"\",\n                getCountry: \"\",\n                getState: \"\",\n                getCity: \"\",\n                getArea: \"\",\n                street: \"\",\n                areaE: false,\n                cityE: false,\n                stateE: false,\n                countryE: false,\n                apartment: \"\",\n                zipCode: \"\",\n                zipE: false,\n                apartE: false,\n                streetE: false,\n                nameE: false,\n                hasSubmit: false,\n                managerE: false,\n                managerList: []\n            };\n        },\n        mounted() {\n            if (this.$route.params.id) {\n                this.getCityList();\n            }\n        },\n        methods: {\n            getCityList() {\n                httpClient.get(\"/api/v1/store/detail?storeId=\" + this.$route.params.id, {}).then(res => {\n                    if (res.data.code == 200) {\n                        this.getCountry = res.data.data.country;\n                        // console.log(res.data.data.country)\n                        // this.country = res.data.data.country\n                        this.getState = res.data.data.state;\n                        this.getCity = res.data.data.city;\n                        this.getArea = res.data.data.area || \"N/A\";\n                        httpClient.get(\"/api/v1/getprovicescitynew\").then(resp => {\n                            if (resp.data.code == 200) {\n                                this.list = resp.data.data.countryList;\n                                this.list.splice(1)\n                                this.filterCountry(res.data.data.countryEn, res.data.data.stateEn, res.data.data.cityEn);\n\n                                this.list.map((item, index) => {\n                                    if (item.countryName == this.getCountry) {\n                                        this.country = index + 1;\n                                        item.proviceList.map((item, index) => {\n                                            if (item.proviceName == this.getState) {\n                                                this.state = index + 1;\n                                                item.cityList.map((item, index) => {\n                                                    if (item.cityName == this.getCity) {\n                                                        this.city = index + 1;\n                                                        item.areaDTOList.map((item, index) => {\n                                                            if (item.areaName == this.getArea) {\n                                                                this.area = index + 1;\n                                                            }\n                                                        });\n                                                    }\n                                                });\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                        });\n                        for (let item of res.data.data.userList) {\n                            this.managerList.push({\n                                email: item.userEmail,\n                                phone: item.userPhone,\n                                lastName: item.lastName,\n                                firstName: item.firstName,\n                                ori: true\n                            });\n                        }\n                        this.managerList.length == 0\n                            ? this.managerList.push({\n                                email: \"\",\n                                phone: \"\",\n                                lastName: \"\",\n                                firstName: \"\"\n                            })\n                            : \"\";\n                        this.name = res.data.data.storeName;\n                        this.street = res.data.data.streetAddress;\n                        this.apartment = res.data.data.storeAddress;\n                        this.zipCode = res.data.data.zipCode;\n                    }\n                });\n            },\n            reduceAdmin(index) {\n                this.managerList.splice(index, 1);\n            },\n            filterCountry(country, state, city) {\n                for (let i = 0; i < this.list.length; i++) {\n                    if (this.list[i].countryName == country) {\n                        this.country = i + 1;\n                    }\n                }\n                if (this.country) {\n                    for (let i = 0; i < this.list[this.country - 1].proviceList.length; i++) {\n                        if (this.list[this.country - 1].proviceList[i].proviceName == state) {\n                            this.state = i + 1;\n                        }\n                    }\n                }\n                if (this.country && this.state) {\n                    for (let k = 0; k < this.list[this.country - 1].proviceList[this.state - 1].cityList.length; k++) {\n                        if (this.list[this.country - 1].proviceList[this.state - 1].cityList[k].cityName == city) {\n                            this.city = k + 1;\n                        }\n                    }\n                }\n            },\n            addAdmin() {\n                this.managerList.push({\n                    email: \"\",\n                    phone: \"\",\n                    lastName: \"\",\n                    firstName: \"\"\n                });\n            },\n            checkData() {\n                this.hasSubmit = true;\n                this.nameE = this.name ? false : true;\n                this.zipE = this.zipCode ? false : true;\n                this.streetE = this.street ? false : true;\n                this.apartE = this.apartment ? false : true;\n                this.countryE = this.country ? false : true;\n                this.stateE = this.state ? false : true;\n                this.cityE = this.city ? false : true;\n                this.areaE = this.area ? false : true;\n                for (let item of this.managerList) {\n                    if (!item.email || item.email.indexOf(\"@\") < 0 || !item.phone || !item.lastName || !item.firstName) {\n                        this.managerE = true;\n                    }\n                }\n            },\n            updateData() {\n                this.checkData();\n                if (!this.nameE && !this.zipE && !this.streetE && !this.apartE && !this.managerE && !this.countryE && !this.stateE && !this.cityE && !this.areaE) {\n                    httpClient\n                        .post(\"/api/v1/store/update\", {\n                            insertSaasTenantStoreDTO: {\n                                id: this.$route.params.id,\n                                areaCode: this.list[this.country - 1][\"proviceList\"][this.state - 1][\"cityList\"][this.city - 1][\"areaDTOList\"][this.area - 1].areaId,\n                                cityCode: this.list[this.country - 1][\"proviceList\"][this.state - 1][\"cityList\"][this.city - 1].cityId,\n                                countryCode: this.list[this.country - 1].countryId,\n                                stateCode: this.list[this.country - 1][\"proviceList\"][this.state - 1].provicesId,\n                                storeAddress: this.apartment,\n                                storeName: this.name,\n                                streetAddress: this.street,\n                                zipCode: this.zipCode\n                            },\n                            inviteUserParamDTO: this.managerList\n                        })\n                        .then(res => {\n                            //弹窗\n                            if (res.data.code === 200 && res.data.data.result) {\n                                this.saveStatus = true;\n                            }\n                        });\n                } else {\n                    alert(\"请检查输入数据\");\n                }\n            },\n            saveAndLink() {\n                this.$router.push(\"/inventory/shop-manager/list\");\n            }\n        }\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    .warn-info {\n        padding: 2px;\n        text-align: left;\n        color: #c00;\n\n        p {\n            margin-bottom: 4px;\n        }\n    }\n\n    .is-invalid {\n        border: 1px solid red;\n    }\n\n    .container {\n        .content {\n            width: 60%;\n            margin: 0 auto;\n            padding-top: 20px;\n            position: relative;\n\n            .content-p {\n                padding-left: 1.5em;\n            }\n        }\n\n        .add {\n            position: absolute;\n            right: -50px;\n            margin-top: -44px;\n            width: 50px;\n\n            .add-icon {\n                color: #ffffff;\n                background: black;\n                padding: 3px 4px;\n                border-radius: 50%;\n            }\n        }\n    }\n</style>\n"],"sourceRoot":"src/views/dashboard/inventory"}]}