{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/lots.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/lots.vue","mtime":1562062386000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpClient from \"@/utils/httpclient\";\nimport googleMap from '@/components/googleMap';\nimport model from \"@/components/model\";\nexport default {\n  name: 'lots',\n  inject: ['reload'],\n  components: {\n    googleMap: googleMap,\n    model: model\n  },\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      table: null,\n      curDel: null,\n      show: false,\n      btnGroup: {\n        btnFirst: this.$t('m.tip.b_cancel'),\n        btnSecond: this.$t('m.tip.b_ok')\n      },\n      tableFields: {\n        name: {\n          label: this.$t('m.lots.name'),\n          class: \"text-center\"\n        },\n        address: {\n          label: this.$t('m.lots.address'),\n          class: \"text-center\"\n        },\n        dealership: {\n          label: this.$t('m.common.dealership'),\n          class: \"text-center\"\n        },\n        vehicles: {\n          label: this.$t('m.lots.all_vehicle'),\n          class: \"text-center\"\n        },\n        battery: {\n          label: this.$t('m.index.low'),\n          class: \"text-center\"\n        },\n        offline: {\n          label: this.$t('m.index.offline'),\n          class: \"text-center\"\n        },\n        actions: {\n          label: this.$t('m.vehicle.actions'),\n          class: \"text-center\"\n        }\n      },\n      total: 0,\n      totalPages: 0,\n      tipTitle: '',\n      showMap: false,\n      map: {}\n    };\n  },\n  mounted: function mounted() {\n    this.initData(this.currentPage);\n  },\n  methods: {\n    initData: function initData(page) {\n      var _this = this;\n\n      httpClient.get(\"/api/v1/lot/page?pageNo=\".concat(page)).then(function (response) {\n        _this.total = response.data.data.rowCount;\n\n        _this.filterData(response.data.data);\n\n        _this.totalPages = response.data.data.totalPages;\n      });\n    },\n    filterData: function filterData(data) {\n      this.table = data.datas.map(function (item) {\n        return {\n          name: item.parkingName,\n          address: item.address,\n          dealership: item.storeName,\n          vehicles: item.vehicleFilter.num,\n          battery: item.lowBatteryFilter.num,\n          offline: item.offLineFilter.num,\n          id: item.id\n        };\n      });\n    },\n    delId: function delId(id) {\n      this.curDel = id;\n      this.show = true;\n    },\n    hideTip: function hideTip(type) {\n      var _this2 = this;\n\n      if (type) {\n        httpClient.post('/api/v1/lot/delete', {\n          id: this.curDel\n        }).then(function (response) {\n          _this2.reload();\n        });\n      }\n\n      this.show = false;\n    },\n    linkVehicles: function linkVehicles(id) {\n      var filter = \"[{\\\"key\\\":\\\"parking\\\",\\\"value\\\":[\\\"\".concat(id, \"\\\"]}]\");\n      this.$router.push({\n        name: 'vehicle',\n        query: {\n          filters: filter\n        }\n      });\n    },\n    linkBattery: function linkBattery(id) {\n      this.$router.push({\n        name: 'vehicle',\n        query: {\n          filters: \"[{\\\"key\\\":\\\"parking\\\",\\\"value\\\":[\\\"\".concat(id, \"\\\"]},{\\\"key\\\":\\\"battery\\\",\\\"value\\\":[\\\"1\\\"]}]\")\n        }\n      });\n    },\n    linkSecondary: function linkSecondary(id) {\n      this.$router.push({\n        name: 'vehicle',\n        query: {\n          filters: \"[{\\\"key\\\":\\\"parking\\\",\\\"value\\\":[\\\"\".concat(id, \"\\\"]},{\\\"key\\\":\\\"online\\\",\\\"value\\\":[\\\"2\\\"]}]\")\n        }\n      });\n    },\n    prevPage: function prevPage() {\n      this.initData(this.currentPage > 1 ? this.currentPage - 1 : 1);\n    },\n    nextPage: function nextPage() {\n      this.initData(this.currentPage >= this.pageCount ? this.currentPage : this.currentPage + 1);\n    },\n    changePage: function changePage(page) {\n      this.initData(page);\n    },\n    getVehicleList: function getVehicleList(id, area, centerCoor, packingName) {\n      var _this3 = this;\n\n      httpClient.get('/api/v1/inlotvehiclelist', {\n        params: {\n          parkingId: id\n        }\n      }).then(function (response) {\n        var latlng = centerCoor.split(\" \");\n        _this3.map = {\n          lat: Number(latlng[1]),\n          lng: Number(latlng[0]),\n          area: area,\n          vehicleInfo: response.data.data,\n          showMult: true\n        };\n        _this3.tipTitle = packingName;\n        _this3.showMap = true;\n      });\n    },\n    mapInfo: function mapInfo(id) {\n      var _this4 = this;\n\n      httpClient.get(\"/api/v1/lot/detail\", {\n        params: {\n          id: id\n        }\n      }).then(function (response) {\n        var data = response.data.data;\n\n        _this4.getVehicleList(id, data.areaCoordinate, data.centerCoordinate, data.parkingName);\n      });\n    }\n  }\n};",{"version":3,"sources":["lots.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"animated fadeIn lots\">\n        <b-card>\n            <div slot=\"header\">\n                <i class=\"nav-icon cui-account-logout\"></i>\n                {{ $t('m.dashboard.lots') }}\n                <button class=\"btn btn-sm btn-primary add-lot\" @click=\"$router.push('/lots/add')\">\n                    <i class=\"fa fa-plus-square\"></i>\n                    {{ $t('m.lots.b_add') }}\n                </button>\n            </div>\n            <div class=\"content\">\n                <b-table class=\"mb-0 table-outline\" small striped responsive=\"sm\" :items=\"table\" hover :fields=\"tableFields\" style=\"margin-top: 20px;\">\n                    <template slot=\"vehicles\" slot-scope=\"data\">\n                        <span class=\"btn btn-sm btn-block btn-outline-success\" @click=\"linkVehicles(data.item.id)\">{{ data.item.vehicles }}</span>\n                    </template>\n                    <template slot=\"battery\" slot-scope=\"data\">\n                        <span class=\"btn btn-sm btn-block btn-outline-danger\" @click=\"linkBattery(data.item.id)\">{{ data.item.battery }}</span>\n                    </template>\n                    <template slot=\"offline\" slot-scope=\"data\">\n                        <span class=\"btn btn-sm btn-block btn-outline-secondary\" @click=\"linkSecondary(data.item.id)\">{{ data.item.offline }}</span>\n                    </template>\n                    <template slot=\"actions\" slot-scope=\"data\">\n                        <button class=\"btn btn-sm btn-success\">\n                            <i class=\"cui icon-map\" @click=\"mapInfo(data.item.id)\"></i>\n                        </button>\n                        <button class=\"btn btn-sm btn-info  m-1\" @click=\"$router.push('/lots/edit/' + data.item.id)\">\n                            <i class=\"fa fa-edit\"></i>\n                        </button>\n                        <button class=\"btn btn-sm btn-danger btn-del\" @click=\"delId(data.item.id)\">\n                            <i class=\"cui cui-trash\"></i>\n                        </button>\n                    </template>\n                </b-table>\n            </div>\n            <b-row v-if=\"total > 0\" style=\"margin-top: 2%\">\n                <b-col sm=\"4\" lg=\"4\">\n                    <div class=\"dataTables_info\" id=\"DataTables0\" role=\"status\" aria-live=\"polite\">\n                        {{ $t('m.common.show') }} {{10 * (currentPage - 1) + 1 }} {{ $t('m.common.to') }} {{currentPage === totalPages? total :currentPage * 10 }} {{ $t('m.common.of') }} {{total}} {{ $t('m.common.entries') }}\n                    </div>\n                </b-col>\n                <b-col sm=\"8\" lg=\"8\">\n                    <b-pagination align=\"right\" :total-rows=\"total\" v-model=\"currentPage\" :per-page=\"pageSize\" @input=\" changePage(currentPage)\"></b-pagination>\n                </b-col>\n            </b-row>\n        </b-card>\n\n        <b-modal ref=\"my-modal\" :title=\"tipTitle\" v-model=\"showMap\" @ok=\"showMap = false\" class=\"show-map\">\n            <google-map\n                    :map=\"map\"\n            ></google-map>\n        </b-modal>\n        <model\n               :show=\"show\"\n               :title=\"'Warn'\"\n               :content=\"'Are you sure to delete the lot?'\"\n               :buttonText=\"btnGroup\"\n               @closeRemindBox=\"hideTip\"\n        ></model>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    .card {\n        width: 100%;\n    }\n    .show-map {\n        .modal-dialog {\n            max-width: 80%;\n        }\n    }\n    .lots {\n        .card-header span {\n            margin-left: 10px;\n        }\n        .card-header {\n            .add-lot {\n                float: right;\n            }\n        }\n        th, td {\n            height: 44px;\n            line-height: 44px;\n        }\n    }\n</style>\n\n<script>\n    import httpClient from \"@/utils/httpclient\";\n    import googleMap from '@/components/googleMap';\n    import model from \"@/components/model\";\n    export default {\n        name: 'lots',\n        inject: ['reload'],\n        components: {\n            googleMap,\n            model,\n        },\n        data() {\n            return {\n                currentPage: 1,\n                pageSize: 10,\n                table: null,\n                curDel: null,\n                show: false,\n                btnGroup: {\n                    btnFirst: this.$t('m.tip.b_cancel'),\n                    btnSecond: this.$t('m.tip.b_ok')\n                },\n                tableFields: {\n                    name: {\n                        label: this.$t('m.lots.name'),\n                        class: \"text-center\"\n                    },\n                    address: {\n                        label: this.$t('m.lots.address'),\n                        class: \"text-center\"\n                    },\n                    dealership: {\n                        label: this.$t('m.common.dealership'),\n                        class: \"text-center\"\n                    },\n                    vehicles: {\n                        label: this.$t('m.lots.all_vehicle'),\n                        class: \"text-center\"\n                    },\n                    battery: {\n                        label: this.$t('m.index.low'),\n                        class: \"text-center\"\n                    },\n                    offline: {\n                        label: this.$t('m.index.offline'),\n                        class: \"text-center\"\n                    },\n                    actions: {\n                        label: this.$t('m.vehicle.actions'),\n                        class: \"text-center\"\n                    }\n                },\n                total: 0,\n                totalPages:0,\n                tipTitle: '',\n                showMap: false,\n                map: {}\n\n            }\n        },\n        mounted() {\n            this.initData(this.currentPage);\n        },\n        methods: {\n            initData(page) {\n                httpClient.get(`/api/v1/lot/page?pageNo=${page}`).then(response => {\n                    this.total = response.data.data.rowCount;\n                    this.filterData(response.data.data);\n                    this.totalPages = response.data.data.totalPages\n                })\n            },\n            filterData(data){\n                this.table = data.datas.map(item => {\n                    return {\n                        name: item.parkingName,\n                        address: item.address,\n                        dealership: item.storeName,\n                        vehicles: item.vehicleFilter.num,\n                        battery: item.lowBatteryFilter.num,\n                        offline: item.offLineFilter.num,\n                        id: item.id,\n                    }\n                });\n            },\n            delId(id) {\n                this.curDel = id;\n                this.show = true;\n            },\n            hideTip(type) {\n                if (type) {\n                    httpClient.post('/api/v1/lot/delete', {\n                        id: this.curDel\n                    }).then(response => {\n                        this.reload();\n                    })\n                }\n                this.show = false;\n            },\n            linkVehicles(id) {\n                let filter = `[{\"key\":\"parking\",\"value\":[\"${id}\"]}]`;\n                this.$router.push({name: 'vehicle', query: {filters: filter}});\n            },\n            linkBattery(id) {\n                this.$router.push({name: 'vehicle', query: {\n                    filters: `[{\"key\":\"parking\",\"value\":[\"${id}\"]},{\"key\":\"battery\",\"value\":[\"1\"]}]`\n                }});\n            },\n            linkSecondary(id) {\n                this.$router.push({name: 'vehicle', query: {\n                    filters: `[{\"key\":\"parking\",\"value\":[\"${id}\"]},{\"key\":\"online\",\"value\":[\"2\"]}]`\n                }});\n            },\n            prevPage(){\n                this.initData(this.currentPage > 1  ? this.currentPage - 1 : 1)\n            },\n            nextPage(){\n                this.initData(this.currentPage >= this.pageCount  ? this.currentPage : this.currentPage + 1)\n            },\n            changePage(page) {\n                this.initData(page);\n            },\n            getVehicleList(id, area, centerCoor, packingName) {\n                httpClient.get('/api/v1/inlotvehiclelist', {\n                    params: {\n                        parkingId: id\n                    }\n                }).then(response => {\n                    let latlng = centerCoor.split(\" \");\n                    this.map = {\n                        lat: Number(latlng[1]),\n                        lng: Number(latlng[0]),\n                        area: area,\n                        vehicleInfo: response.data.data,\n                        showMult: true\n                    };\n                    this.tipTitle = packingName;\n                    this.showMap = true;\n                })\n            },\n            mapInfo(id) {\n                httpClient.get(\"/api/v1/lot/detail\", {\n                    params: {\n                        id: id\n                    }\n                }).then(response => {\n                    let data = response.data.data;\n                    this.getVehicleList(id, data.areaCoordinate, data.centerCoordinate, data.parkingName);\n                })\n            }\n        }\n    }\n</script>"],"sourceRoot":"src/views/dashboard/dashboardMain"}]}