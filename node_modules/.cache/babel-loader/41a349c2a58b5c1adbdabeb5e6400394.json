{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/resetPassword/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/resetPassword/index.vue","mtime":1577153439000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpClient from \"@/utils/httpclient\";\nimport succ from \"@/components/registStatus\";\nexport default {\n  name: \"registerCheckSuccess\",\n  components: {\n    succ: succ\n  },\n  data: function data() {\n    return {\n      errInfo: \"\",\n      btnGroup: {},\n      nPassword: '',\n      password: '',\n      passwordE: false,\n      passwordNE: false,\n      userId: '',\n      succInfo: '',\n      status: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    httpClient.post(\"/api/v1/user/resetpwdverification\", {\n      token: this.$route.query.token\n    }).then(function (response) {\n      if (response.data.data && response.data.code == 200) {\n        _this.status = 3;\n        _this.userId = response.data.data.id;\n      } else {\n        _this.errInfo = _this.$t('m.register.link_expire');\n        _this.status = 1;\n      }\n    }).catch(function (err) {\n      _this.errInfo = _this.$t('m.register.link_expire');\n      _this.status = 1;\n    });\n  },\n  methods: {\n    submitForm: function submitForm() {\n      var _this2 = this;\n\n      if (!this.password || this.password && this.password.length < 6) {\n        this.passwordE = true;\n      } else {\n        this.passwordE = false;\n      }\n\n      if (!this.nPassword || this.nPassword && this.nPassword != this.password) {\n        this.passwordNE = true;\n      } else {\n        this.passwordNE = false;\n      }\n\n      if (!this.passwordNE && !this.passwordE) {\n        httpClient.post('/api/v1/user/resetpwd', {\n          userId: this.userId,\n          newPassword: this.password\n        }).then(function (response) {\n          if (response.data.data || response.data.code == 200) {\n            _this2.status = 2;\n            _this2.succInfo = \"Congratulations, you have reset the password.\";\n            _this2.btnGroup = {\n              btnFirst: \"Login\",\n              btnSecond: \"Homepage\"\n            };\n          } else {\n            _this2.errInfo = \"Sorry,the link has been used or has expired.\";\n            _this2.status = 1;\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAA,UAAA,MAAA,oBAAA;AACA,OAAA,IAAA,MAAA,2BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,sBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAIA,MAAA,SAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,EALA;AAMA,MAAA,SAAA,EAAA,KANA;AAOA,MAAA,UAAA,EAAA,KAPA;AAQA,MAAA,MAAA,EAAA,EARA;AASA,MAAA,QAAA,EAAA,EATA;AAUA,MAAA,MAAA,EAAA;AAVA,KAAA;AAYA,GAlBA;AAmBA,EAAA,OAnBA,qBAmBA;AAAA;;AACA,IAAA,UAAA,CAAA,IAAA,CAAA,mCAAA,EAAA;AACA,MAAA,KAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AADA,KAAA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,UAAA,QAAA,CAAA,IAAA,CAAA,IAAA,IAAA,QAAA,CAAA,IAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,CAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA;AACA,OAHA,MAGA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA,CAAA,EAAA,CAAA,wBAAA,CAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,CAAA;AACA;AACA,KAVA,EAUA,KAVA,CAUA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,KAAA,CAAA,EAAA,CAAA,wBAAA,CAAA;AACA,MAAA,KAAA,CAAA,MAAA,GAAA,CAAA;AACA,KAbA;AAcA,GAlCA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AACA,UAAA,CAAA,KAAA,QAAA,IAAA,KAAA,QAAA,IAAA,KAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,SAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,SAAA,GAAA,KAAA;AACA;;AACA,UAAA,CAAA,KAAA,SAAA,IAAA,KAAA,SAAA,IAAA,KAAA,SAAA,IAAA,KAAA,QAAA,EAAA;AACA,aAAA,UAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,UAAA,GAAA,KAAA;AACA;;AACA,UAAA,CAAA,KAAA,UAAA,IAAA,CAAA,KAAA,SAAA,EAAA;AACA,QAAA,UAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AACA,UAAA,MAAA,EAAA,KAAA,MADA;AAEA,UAAA,WAAA,EAAA,KAAA;AAFA,SAAA,EAGA,IAHA,CAGA,UAAA,QAAA,EAAA;AACA,cAAA,QAAA,CAAA,IAAA,CAAA,IAAA,IAAA,QAAA,CAAA,IAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,+CAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA;AACA,cAAA,QAAA,EAAA,OADA;AAEA,cAAA,SAAA,EAAA;AAFA,aAAA;AAIA,WAPA,MAOA;AACA,YAAA,MAAA,CAAA,OAAA,GAAA,8CAAA;AACA,YAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA;AACA,SAfA;AAgBA;AAEA;AA/BA;AAnCA,CAAA","sourcesContent":["<template>\n    <div class=\"animated fadeIn reset-password\">\n        <div v-if=\"status == 3\" class=\"container form-password flex-row align-items-center\">\n            <div class=\"justify-content-center\">\n                <div class=\"row justify-content-center\">\n                    <img src=\"@/assets/pages-img/logo.svg\" width=\"50%\">\n                </div>\n                <br />\n                <h2 class=\"text-center text-muted\">{{ $t('m.login.title') }}</h2>\n                <p class=\"text-muted\">{{ $t('m.no_login.input_password') }}</p>\n                <div>\n                    <b-form-group>\n                        <label>\n                            <strong>{{ $t('m.no_login.new_password') }}</strong>\n                        </label>\n                        <b-form-input v-model=\"password\" type=\"password\" :class=\"passwordE ? 'is-invalid' : ''\"></b-form-input>\n                        <p class=\"error\" v-show=\"passwordE\">{{ $t('m.no_login.password_require') }}</p>\n                    </b-form-group>\n                    <b-form-group>\n                        <label>\n                            <strong>{{ $t('m.no_login.confirm_password') }}</strong>\n                        </label>\n                        <b-form-input v-model=\"nPassword\" type=\"password\" :class=\"passwordNE ? 'is-invalid' : ''\"></b-form-input>\n                        <p class=\"error\" v-show=\"passwordNE\"></p>\n                    </b-form-group>\n                    <button class=\"btn btn-success\" type=\"button\" @click=\"submitForm\">{{ $t('m.common.submit') }}</button>\n                </div>\n            </div>\n        </div>\n        <succ v-if=\"status && status != 3\"\n              :btnGroup=\"btnGroup\"\n              :errInfo=\"errInfo\"\n              :succInfo=\"succInfo\">\n        </succ>\n    </div>\n</template>\n\n<script>\n    import httpClient from \"@/utils/httpclient\";\n    import succ from \"@/components/registStatus\";\n    export default {\n        name: \"registerCheckSuccess\",\n        components: {\n            succ\n        },\n        data() {\n            return {\n                errInfo: \"\",\n                btnGroup: {\n                },\n                nPassword: '',\n                password: '',\n                passwordE: false,\n                passwordNE: false,\n                userId: '',\n                succInfo: '',\n                status: false\n            }\n        },\n        mounted() {\n            httpClient.post(\"/api/v1/user/resetpwdverification\", {\n                token: this.$route.query.token\n            }).then(response => {\n                if (response.data.data && response.data.code == 200) {\n                    this.status = 3;\n                    this.userId = response.data.data.id;\n                } else {\n                    this.errInfo = this.$t('m.register.link_expire');\n                    this.status = 1;\n                }\n            }).catch(err => {\n                this.errInfo = this.$t('m.register.link_expire');\n                this.status = 1;\n            })\n        },\n        methods: {\n            submitForm() {\n                if (!this.password || (this.password && this.password.length < 6)) {\n                    this.passwordE = true;\n                } else {\n                    this.passwordE = false;\n                }\n                if (!this.nPassword || (this.nPassword && this.nPassword != this.password)) {\n                    this.passwordNE = true;\n                } else {\n                    this.passwordNE = false;\n                }\n                if (!this.passwordNE && !this.passwordE) {\n                    httpClient.post('/api/v1/user/resetpwd', {\n                        userId: this.userId,\n                        newPassword: this.password\n                    }).then(response => {\n                        if (response.data.data || response.data.code == 200) {\n                            this.status = 2;\n                            this.succInfo = \"Congratulations, you have reset the password.\";\n                            this.btnGroup = {\n                                btnFirst: \"Login\",\n                                btnSecond: \"Homepage\"\n                            }\n                        } else {\n                            this.errInfo = \"Sorry,the link has been used or has expired.\";\n                            this.status = 1;\n                        }\n                    })\n                }\n\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .reset-password {\n        .form-password {\n            max-width: 600px;\n            text-align: center;\n            margin-top: 20%;\n            .form-control {\n                max-width: 70%;\n                margin: 0 auto;\n            }\n            .error {\n                color: red;\n            }\n        }\n    }\n</style>"],"sourceRoot":"src/views/resetPassword"}]}