{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js!/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/lots.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/views/dashboard/dashboardMain/lots.vue","mtime":1569469156000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport httpClient from \"@/utils/httpclient\";\nimport myMap from '@/components/map';\nimport model from \"@/components/model\";\nexport default {\n  name: 'lots',\n  inject: ['reload'],\n  components: {\n    myMap: myMap,\n    model: model\n  },\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      table: null,\n      curDel: null,\n      show: false,\n      btnGroup: {\n        btnFirst: this.$t('m.tip.b_cancel'),\n        btnSecond: this.$t('m.tip.b_ok')\n      },\n      tableFields: {\n        name: {\n          label: this.$t('m.lots.name'),\n          class: \"text-center\"\n        },\n        address: {\n          label: this.$t('m.lots.address'),\n          class: \"text-center\"\n        },\n        storeName: {\n          label: this.$t('m.lots.store_name'),\n          class: \"text-center\"\n        },\n        dealership: {\n          label: this.$t('m.common.dealership'),\n          class: \"text-center\"\n        },\n        vehicles: {\n          label: this.$t('m.lots.all_vehicle'),\n          class: \"text-center\"\n        },\n        battery: {\n          label: this.$t('m.index.low'),\n          class: \"text-center\"\n        },\n        offline: {\n          label: this.$t('m.index.offline'),\n          class: \"text-center\"\n        },\n        actions: {\n          label: this.$t('m.vehicle.actions'),\n          class: \"text-center\"\n        }\n      },\n      total: 0,\n      totalPages: 0,\n      tipTitle: '',\n      showMap: false,\n      map: {}\n    };\n  },\n  mounted: function mounted() {\n    this.initData(this.currentPage);\n  },\n  methods: {\n    initData: function initData(page) {\n      var _this = this;\n\n      httpClient.get(\"/api/v1/lot/page?pageNo=\".concat(page)).then(function (response) {\n        if (response.data.data) {\n          _this.total = response.data.data ? response.data.data.rowCount : 0;\n\n          _this.filterData(response.data.data);\n\n          _this.totalPages = response.data.data.totalPages;\n        }\n      });\n    },\n    filterData: function filterData(data) {\n      this.table = data.datas.map(function (item) {\n        return {\n          name: item.parkingName,\n          address: item.address,\n          storeName: item.storeName,\n          dealership: item.tenantName,\n          vehicles: item.vehicleFilter.num,\n          battery: item.lowBatteryFilter.num,\n          offline: item.offLineFilter.num,\n          id: item.id\n        };\n      });\n    },\n    delId: function delId(id) {\n      this.curDel = id;\n      this.show = true;\n    },\n    hideTip: function hideTip(type) {\n      var _this2 = this;\n\n      if (type) {\n        httpClient.post('/api/v1/lot/delete', {\n          id: this.curDel\n        }).then(function (response) {\n          _this2.reload();\n        });\n      }\n\n      this.show = false;\n    },\n    linkVehicles: function linkVehicles(id) {\n      var filter = \"[{\\\"key\\\":\\\"parking\\\",\\\"value\\\":[\\\"\".concat(id, \"\\\"]}]\");\n      this.$router.push({\n        name: 'vehicle',\n        query: {\n          filters: filter\n        }\n      });\n    },\n    linkBattery: function linkBattery(id) {\n      this.$router.push({\n        name: 'vehicle',\n        query: {\n          filters: \"[{\\\"key\\\":\\\"parking\\\",\\\"value\\\":[\\\"\".concat(id, \"\\\"]},{\\\"key\\\":\\\"battery\\\",\\\"value\\\":[\\\"1\\\"]}]\")\n        }\n      });\n    },\n    linkSecondary: function linkSecondary(id) {\n      this.$router.push({\n        name: 'vehicle',\n        query: {\n          filters: \"[{\\\"key\\\":\\\"parking\\\",\\\"value\\\":[\\\"\".concat(id, \"\\\"]},{\\\"key\\\":\\\"online\\\",\\\"value\\\":[\\\"2\\\"]}]\")\n        }\n      });\n    },\n    prevPage: function prevPage() {\n      this.initData(this.currentPage > 1 ? this.currentPage - 1 : 1);\n    },\n    nextPage: function nextPage() {\n      this.initData(this.currentPage >= this.pageCount ? this.currentPage : this.currentPage + 1);\n    },\n    changePage: function changePage(page) {\n      this.initData(page);\n    },\n    getVehicleList: function getVehicleList(id, area, centerCoor, packingName) {\n      var _this3 = this;\n\n      httpClient.get('/api/v1/inlotvehiclelist', {\n        params: {\n          parkingId: id\n        }\n      }).then(function (response) {\n        var latlng = centerCoor.split(\" \");\n        _this3.map = {\n          lat: Number(latlng[1]),\n          lng: Number(latlng[0]),\n          area: area,\n          vehicleInfo: response.data.data,\n          showMult: true\n        };\n        _this3.tipTitle = packingName;\n        _this3.showMap = true;\n      });\n    },\n    mapInfo: function mapInfo(id) {\n      var _this4 = this;\n\n      httpClient.get(\"/api/v1/lot/detail\", {\n        params: {\n          id: id\n        }\n      }).then(function (response) {\n        var data = response.data.data;\n\n        _this4.getVehicleList(id, data.areaCoordinate, data.centerCoordinate, data.parkingName);\n      });\n    }\n  }\n};",null]}