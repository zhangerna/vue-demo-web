{"remainingRequest":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js!/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js!/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nonda/nonda/nonda-saas-web/src/components/searchMapForGoogle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nonda/nonda/nonda-saas-web/src/components/searchMapForGoogle.vue","mtime":1568630157000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nonda/nonda/nonda-saas-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport google from \"google\";\nimport httpClient from '@/utils/httpclient';\nexport default {\n  name: \"SearchMapForGoogle\",\n  props: [\"map\", \"from\"],\n  data: function data() {\n    return {\n      mapInfo: {\n        lots: [],\n        lat: 0,\n        lng: 0,\n        vehicleInfo: [],\n        showMult: true\n      },\n      mapObj: {},\n      marker: null,\n      polygon: null,\n      markers: [],\n      bounds: null\n    };\n  },\n  watch: {\n    map: function map(newVal) {\n      console.log(\"----\");\n\n      if (newVal) {\n        this.mapInfo.lots = newVal.lots;\n        this.mapInfo.lat = newVal.lots.length > 0 ? newVal.lots[0].centerCoordinate.split(' ')[1] : 31.3249335128696;\n        this.mapInfo.lng = newVal.lots.length > 0 ? newVal.lots[0].centerCoordinate.split(' ')[0] : 121.594292808653;\n        this.mapInfo.vehicleInfo = newVal.vehicles;\n        this.initMap();\n      }\n    }\n  },\n  methods: {\n    getYMDString: function getYMDString(time) {\n      console.log(time);\n\n      if (time) {\n        var date = new Date(time);\n        var Y = date.getFullYear() + ' ';\n        var M = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\n        var D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n        var h = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n        var m = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n        return M + '/' + D + '/' + Y + ' ' + h + ':' + m + ' ';\n      } else {\n        return '';\n      }\n    },\n    addMarker: function addMarker(position, title, item) {\n      var marker = new google.maps.Marker({\n        position: position,\n        map: this.mapObj,\n        animation: google.maps.Animation.DROP,\n        title: title,\n        icon: {\n          url: item.currentVoltage < 11.7 ? \"https://cdn.shopify.com/s/files/1/0703/1149/files/Location.png?807016\" : \"https://pic.zus.ai/saas/vehicle.png\",\n          scaledSize: new google.maps.Size(30, 30)\n        }\n      });\n      this.bounds.extend(marker.getPosition());\n      this.markers.push(marker);\n      var self = this;\n      marker.addListener('click', function () {\n        var _this = this;\n\n        var lang = '';\n\n        if (self.$i18n.locale === 'zh-CN') {\n          lang = 'China';\n        } else {\n          lang = 'US';\n        }\n\n        var link = '/api/v1/getlastLocation?lastlocationlat=' + item.lastLocationLat + '&lastlocationlng=' + item.lastLocationLng + '&country=' + lang;\n        var myString = '';\n        httpClient.get(link).then(function (res) {\n          if (res.data.code === 200) {\n            var p = item.currentVoltage < 11.7 ? \"<p style=\\\"margin-bottom:6px;font-size: 12px;\\\">\".concat(self.$t('m.common.voltage'), \":  <span style=\\\"color: red\\\"> <i class=\\\"fa fa-exclamation-triangle\\\"></i> \").concat(item.currentVoltage, \"V</span></p>\") : \"<p style=\\\"margin-bottom:6px;font-size: 12px;\\\">\".concat(self.$t('m.common.voltage'), \":\").concat(item.currentVoltage, \"V</p>\");\n            myString = \"<a href='/vehicle/detail/\".concat(item.vehicleId, \"'>\\n                        <img style=\\\"background: #3a4149\\\" src=\\\"\").concat(item.photoUrl ? item.photoUrl : '/img/placeholder.5367544d.svg', \"\\\" width=\\\"40%\\\">\\n                        <h5 id=\\\"firstHeading\\\" class=\\\"firstHeading\\\">\\n                            <a target=\\\"_blank\\\" href=\\\"/vehicle/\").concat(item.saleStatus === 1 ? \"vehicle\" : \"sold-manager\", \"/\").concat(item.vehicleId, \"\\\">\").concat(item.year ? item.year : 'N/A', \" \").concat(item.make ? item.make : 'N/A', \" \").concat(item.model ? item.model : 'N/A', \" \").concat(item.alias ? \"-\" + item.alias : '', \"</a>\\n                        </h5>\\n                        <p style=\\\"margin-bottom:6px;font-size: 12px\\\">VIN:\").concat(item.vin, \"</p>\\n                        \").concat(p, \"\\n                        <p style=\\\"margin-bottom:6px;font-size: 12px\\\">\").concat(self.$t('m.common.last_location'), \":\").concat(res.data.data.locationName, \"</p>\\n                        <p style=\\\"margin-bottom:6px;font-size: 12px\\\">\").concat(self.$t('m.common.last_update'), \":\").concat(self.getYMDString(item.locationTime), \"</p>\\n                        </a>\");\n            var infoWindow = new google.maps.InfoWindow({\n              content: myString\n            });\n            infoWindow.open(_this.mapObj, marker);\n          }\n        });\n      });\n    },\n    initMap: function initMap() {\n      var _this2 = this;\n\n      this.mapObj = new google.maps.Map(document.getElementById(\"google-map\"), {\n        zoom: 15,\n        center: {\n          lng: Number(this.mapInfo.lng),\n          lat: Number(this.mapInfo.lat)\n        }\n      });\n      var coords = [];\n\n      if (this.mapInfo.lots.length > 0) {\n        this.mapInfo.lots.map(function (item) {\n          var myArr = [];\n\n          if (item.areaCoordinate) {\n            item.areaCoordinate.map(function (val) {\n              myArr.push({\n                lat: Number(val.split(\",\")[1]),\n                lng: Number(val.split(\",\")[0])\n              });\n            });\n            coords.push(myArr);\n          }\n        });\n      }\n\n      this.bounds = new google.maps.LatLngBounds();\n\n      if (this.mapInfo.showMult && this.mapInfo.vehicleInfo.length > 0) {\n        this.mapInfo.vehicleInfo.map(function (item) {\n          if (item.lastLocationLat) {\n            var position = {\n              lat: Number(item.lastLocationLat),\n              lng: Number(item.lastLocationLng)\n            };\n            var title = \"\".concat(item.year ? item.year : 'N/A', \" \").concat(item.make ? item.make : 'N/A', \" \").concat(item.model ? item.model : 'N/A', \" - \").concat(item.alias ? item.alias : 'N/A');\n\n            _this2.addMarker(position, title, item);\n          }\n        });\n      }\n\n      this.mapObj.fitBounds(this.bounds);\n      this.polygon = new google.maps.Polygon({\n        paths: coords,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35\n      });\n      this.polygon.setMap(this.mapObj);\n      new google.maps.drawing.DrawingManager({\n        drawingControl: true,\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [google.maps.drawing.OverlayType.POLYGON]\n        },\n        circleOptions: {\n          fillColor: '#ffff00',\n          fillOpacity: 1,\n          strokeWeight: 5,\n          clickable: false,\n          editable: true,\n          zIndex: 1\n        },\n        polygonOptions: {\n          strokeColor: \"#FF0000\",\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: \"#FF0000\",\n          fillOpacity: 0.35,\n          editable: true\n        }\n      });\n    }\n  }\n};",null]}